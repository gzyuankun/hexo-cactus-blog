<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Zabbix介绍和部署</title>
      <link href="/2023/03/02/Zabbix/"/>
      <url>/2023/03/02/Zabbix/</url>
      
        <content type="html"><![CDATA[<h1 id="常见监控方案"><a href="#常见监控方案" class="headerlink" title="常见监控方案"></a>常见监控方案</h1><p>开源监控软件：cacti、nagios、zabbix、smokeping、open-falcon等</p><h1 id="Zabbix使用场景及系统概述"><a href="#Zabbix使用场景及系统概述" class="headerlink" title="Zabbix使用场景及系统概述"></a>Zabbix使用场景及系统概述</h1><p>Zabbix是一个企业级解决方案，支持实时监控数千台服务器，虚拟机和网络设备，采集百万级监控指标，适用于任何IT基础架构、服务、应用程序和资源的解决方案。</p><h2 id="zabbix使用场景"><a href="#zabbix使用场景" class="headerlink" title="zabbix使用场景"></a>zabbix使用场景</h2><p><img src="/../image.assets/1677742555473.png" alt="1677742555473"></p><h2 id="zabbix系统概述"><a href="#zabbix系统概述" class="headerlink" title="zabbix系统概述"></a>zabbix系统概述</h2><p><img src="/../image.assets/1677742581882.png" alt="1677742581882"></p><p><strong>数据采集：</strong></p><p>周期性时序数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">主机/对象：服务器、路由器、交换机、存储、防火墙、IP、PORT、URL、自定义监控对象...</span><br><span class="line">采集目标：监控项，指标数据（metrics data）</span><br></pre></td></tr></table></figure><p><strong>数据存储：</strong></p><p>监控数据存储系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SQL: MySQL/MariaDB(Zabbix)</span><br><span class="line">NoSQL：Redis(Open-falcon)</span><br><span class="line">rrd: Round Robin Database(Cacti)</span><br></pre></td></tr></table></figure><p><strong>数据类型：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">历史数据: 每个监控项采集到的每个监控值</span><br><span class="line">趋势数据: 趋势表里主要保留某个监控项一个小时内历史数据的最大值、最小值和平均值以及该监控项一个小时内所采</span><br><span class="line">集到的数据个数。</span><br></pre></td></tr></table></figure><p><strong>阈值：</strong><br>可按照预定义的阈值等级实现分层报警<br><strong>告警机制：</strong><br>email,短信,微信,语音,故障自治愈</p><h2 id="zabbix-核心任务："><a href="#zabbix-核心任务：" class="headerlink" title="zabbix 核心任务："></a>zabbix 核心任务：</h2><p><strong>数据采集：</strong></p><p>数据采集方式：zabbix-server，zabbix-proxy，zabbix-agent</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Agentless：SNMP,Telnet,ssh, IPMI, JMX,</span><br><span class="line">Agent：zabbix agent</span><br></pre></td></tr></table></figure><p><strong>数据存储：</strong><br>zabbix database<br><strong>数据展示：</strong><br>zabbix web</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">graph -&gt; screen -&gt; slideshow(将多个screen以幻灯片的方式进行轮流展示)</span><br></pre></td></tr></table></figure><p>grafana:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">以zabbix为数据源展示更绚丽的界面</span><br></pre></td></tr></table></figure><p><strong>告警通知：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">host (host groups) &lt;- templates #从模板继承告警配置</span><br><span class="line">host -&gt; items -&gt; triggers -&gt; action (条件-conditions, 操作-operations) #自定义告警配置</span><br></pre></td></tr></table></figure><h1 id="规划部署"><a href="#规划部署" class="headerlink" title="规划部署"></a>规划部署</h1><h2 id="部署环境："><a href="#部署环境：" class="headerlink" title="部署环境："></a>部署环境：</h2><ul><li>服务器系统：centos7.9，ubuntu20.04</li></ul><h2 id="yum安装zabbix"><a href="#yum安装zabbix" class="headerlink" title="yum安装zabbix"></a>yum安装zabbix</h2><p> <a href="https://www.zabbix.com/cn/download?zabbix=5.0&os_distribution=centos&os_version=7&components=server_frontend_agent&db=mysql&ws=nginx">安装说明</a> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"># Install Zabbix repository</span><br><span class="line">wget https://repo.zabbix.com/zabbix/5.0/rhel/7/x86_64/zabbix-release-5.0-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum install zabbix-release-5.0-1.el7.noarch.rpm</span><br><span class="line"></span><br><span class="line">yum clean all</span><br><span class="line"></span><br><span class="line"># 安装Zabbix server，Web前端，agent</span><br><span class="line"></span><br><span class="line">yum install zabbix-server-mysql zabbix-agent</span><br><span class="line"></span><br><span class="line"># Install Zabbix frontend</span><br><span class="line"># Enable Red Hat Software Collections</span><br><span class="line">yum install centos-release-scl</span><br><span class="line"></span><br><span class="line"># 编辑配置文件 /etc/yum.repos.d/zabbix.repo and enable zabbix-frontend repository.</span><br><span class="line">[zabbix-frontend]</span><br><span class="line">...</span><br><span class="line">enabled=1</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"># Install Zabbix frontend packages.</span><br><span class="line">yum install zabbix-web-mysql-scl zabbix-nginx-conf-scl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 安装数据库</span><br><span class="line"># 在线一键安装脚本地址</span><br><span class="line">https://itshare.work/2022/09/30/MySQLinstallScript/</span><br><span class="line"></span><br><span class="line"># 创建初始数据库</span><br><span class="line"># Make sure you have database server up and running.</span><br><span class="line"># 在数据库主机上运行以下代码</span><br><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">mysql&gt; create database zabbix character set utf8 collate utf8_bin;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; create user zabbix@localhost identified by &#x27;123456&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all privileges on zabbix.* to zabbix@localhost;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; set global log_bin_trust_function_creators = 1;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; quit;</span><br><span class="line"></span><br><span class="line"># 导入初始架构和数据，系统将提示您输入新创建的密码。</span><br><span class="line">[root@centos7 ~]# zcat /usr/share/doc/zabbix-server-mysql-5.0.31/create.sql.gz | mysql -uzabbix -p123456 zabbix</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Disable log_bin_trust_function_creators option after importing database schema.</span><br><span class="line"># mysql -uroot -p</span><br><span class="line">password</span><br><span class="line">mysql&gt; set global log_bin_trust_function_creators = 0;</span><br><span class="line">mysql&gt; quit;</span><br><span class="line"></span><br><span class="line">#为Zabbix server配置数据库</span><br><span class="line">#编辑配置文件 /etc/zabbix/zabbix_server.conf</span><br><span class="line">DBPassword=12456</span><br><span class="line"></span><br><span class="line"># 为 Zabbix前端配置PHP</span><br><span class="line"># 编辑配置文件 /etc/opt/rh/rh-nginx116/nginx/conf.d/zabbix.conf uncomment and set &#x27;listen&#x27; and &#x27;server_name&#x27; directives.</span><br><span class="line"># listen 80;</span><br><span class="line"># server_name example.com;</span><br><span class="line"></span><br><span class="line"># 编辑配置文件 /etc/opt/rh/rh-php72/php-fpm.d/zabbix.conf add nginx to listen.acl_users directive.</span><br><span class="line">listen.acl_users = apache,nginx</span><br><span class="line"></span><br><span class="line"># Then uncomment and set the right timezone for you.(取消注释，设置时区)</span><br><span class="line">php_value[date.timezone] = Asia/Shanghai</span><br><span class="line"></span><br><span class="line"># 启动Zabbix server和agent进程</span><br><span class="line"># 启动Zabbix server和agent进程，并为它们设置开机自启：</span><br><span class="line"># systemctl restart zabbix-server zabbix-agent rh-nginx116-nginx rh-php72-php-fpm</span><br><span class="line"># systemctl enable zabbix-server zabbix-agent rh-nginx116-nginx rh-php72-php-fpm</span><br></pre></td></tr></table></figure><ul><li>开始使用</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip:port</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1677747113512.png" alt="1677747113512"></p><p><img src="/../image.assets/1677747122483.png" alt="1677747122483"></p><p><img src="/../image.assets/1677747141707.png" alt="1677747141707"></p><p><img src="/../image.assets/1677747204306.png" alt="1677747204306"></p><p><img src="/../image.assets/1677747218962.png" alt="1677747218962"></p><p><img src="/../image.assets/1677747236290.png" alt="1677747236290"></p><p><img src="/../image.assets/1677747305904.png" alt="1677747305904"></p><p><img src="/../image.assets/1677747322004.png" alt="1677747322004"></p><h2 id="apt安装"><a href="#apt安装" class="headerlink" title="apt安装"></a>apt安装</h2><p> <a href="https://www.zabbix.com/cn/download?zabbix=5.0&os_distribution=ubuntu&os_version=20.04&components=server_frontend_agent&db=mysql&ws=apache">Zabbix 5.0 LTS for Ubuntu 20.04 (Focal), MySQL, Apache</a> </p><p><img src="/../image.assets/1677748010282.png" alt="1677748010282"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install and configure Zabbix for your platform</span></span><br><span class="line"><span class="comment"># a. Install Zabbix repository</span></span><br><span class="line">wget https://repo.zabbix.com/zabbix/5.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_5.0-1%2Bfocal_all.deb</span><br><span class="line">dpkg -i zabbix-release_5.0-1+focal_all.deb</span><br><span class="line">apt update</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Zabbix server，Web前端，agent</span></span><br><span class="line">apt install zabbix-server-mysql zabbix-frontend-php zabbix-apache-conf zabbix-agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装数据库</span></span><br><span class="line">apt install mysql-server -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建初始数据库</span></span><br><span class="line"><span class="comment"># Make sure you have database server up and running.</span></span><br><span class="line"><span class="comment"># 在数据库主机上运行以下代码。</span></span><br><span class="line"><span class="comment"># mysql -uroot -p</span></span><br><span class="line">password</span><br><span class="line">mysql&gt; create database zabbix character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">mysql&gt; create user zabbix@localhost identified by <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">mysql&gt; grant all privileges on zabbix.* to zabbix@localhost;</span><br><span class="line">mysql&gt; <span class="built_in">set</span> global log_bin_trust_function_creators = 1;</span><br><span class="line">mysql&gt; quit;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入初始架构和数据，系统将提示您输入新创建的密码。</span></span><br><span class="line">zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -p123456 zabbix</span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable log_bin_trust_function_creators option after importing database schema.</span></span><br><span class="line"><span class="comment"># mysql -uroot -p</span></span><br><span class="line">password</span><br><span class="line">mysql&gt; <span class="built_in">set</span> global log_bin_trust_function_creators = 0;</span><br><span class="line">mysql&gt; quit;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为Zabbix server配置数据库</span></span><br><span class="line"><span class="comment"># 编辑配置文件 /etc/zabbix/zabbix_server.conf</span></span><br><span class="line">DBPassword=123456</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为Zabbix前端配置PHP</span></span><br><span class="line"><span class="comment"># 编辑配置文件 /etc/zabbix/apache.conf uncomment and set the right timezone for you.</span></span><br><span class="line">php_value date.timezone Asia/Shanghai</span><br><span class="line"></span><br><span class="line"><span class="comment"># 动Zabbix server和agent进程</span></span><br><span class="line"><span class="comment"># 启动Zabbix server和agent进程，并为它们设置开机自启：</span></span><br><span class="line">systemctl restart zabbix-server zabbix-agent apache2</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-server zabbix-agent apache2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Zabbix </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>运维自动化工具Ansible(二)</title>
      <link href="/2023/02/25/Ansible2/"/>
      <url>/2023/02/25/Ansible2/</url>
      
        <content type="html"><![CDATA[<h1 id="Playbook"><a href="#Playbook" class="headerlink" title="Playbook"></a>Playbook</h1><h2 id="playbook介绍"><a href="#playbook介绍" class="headerlink" title="playbook介绍"></a>playbook介绍</h2><p>官方链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html</span><br></pre></td></tr></table></figure><h3 id="Playbook-组成"><a href="#Playbook-组成" class="headerlink" title="Playbook 组成"></a>Playbook 组成</h3><p><img src="/../image.assets/1677299110747.png" alt="1677299110747"></p><ul><li>一个 playbook(剧本)文件是一个YAML语言编写的文本文件</li><li>通常一个playbook只包括一个play</li><li>一个 play的主要包括两部分: 主机和tasks. 即实现在指定一组主机上执行一个tasks定义好的任务列表。</li><li>一个tasks中可以有一个或多个task任务</li><li>每一个Task本质上就是调用ansible的一个module</li><li>在复杂场景中,一个playbook中也可以包括多个play，实现对多组不同的主机执行不同的任务</li></ul><h3 id="Playbook-与-Ad-Hoc-对比"><a href="#Playbook-与-Ad-Hoc-对比" class="headerlink" title="Playbook 与 Ad-Hoc 对比"></a>Playbook 与 Ad-Hoc 对比</h3><ul><li>Playbook是对多个 AD-Hoc 的一种编排组合的实现方式</li><li>Playbook能控制任务执行的先后顺序</li><li>Playbook可以持久保存到文件中从而方便多次调用运行，而Ad-Hoc只能临时运行。</li><li>Playbook适合复杂的重复性的任务，而Ad-Hoc适合做快速简单的一次性任务</li></ul><h2 id="YAML-语言"><a href="#YAML-语言" class="headerlink" title="YAML 语言"></a>YAML 语言</h2><h3 id="YAML-语言介绍"><a href="#YAML-语言介绍" class="headerlink" title="YAML 语言介绍"></a>YAML 语言介绍</h3><p>YAML：YAML Ain’t Markup Language，即YAML不是标记语言。不过，在开发的这种语言时，YAML的<br>意思其实是：”Yet Another Markup Language”（仍是一种标记语言）<br>YAML是一个可读性高的用来表达资料序列的格式。<br>YAML参考了其他多种语言，包括：XML、C语言、Python、Perl以及电子邮件格式RFC2822等。<br>Clark Evans在2001年在首次发表了这种语言，另外Ingy döt Net与Oren Ben-Kiki也是这语言的共同设计者<br>目前很多最新的软件比较流行采用此格式的文件存放配置信息，如:ubuntu，anisble，docker，kubernetes等<br>YAML 官方网站：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.yaml.org</span><br></pre></td></tr></table></figure><p>ansible 官网:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://docs.ansible.com/ansible/latest/reference_appendices/YAMLSyntax.html</span><br></pre></td></tr></table></figure><h3 id="YAML-语言特性"><a href="#YAML-语言特性" class="headerlink" title="YAML 语言特性"></a>YAML 语言特性</h3><ul><li>YAML的可读性好</li><li>YAML和脚本语言的交互性好</li><li>YAML使用实现语言的数据类型</li><li>YAML有一个一致的信息模型</li><li>YAML易于实现</li><li>YAML可以基于流来处理</li><li>YAML表达能力强，扩展性好</li></ul><h3 id="YAML语法简介"><a href="#YAML语法简介" class="headerlink" title="YAML语法简介"></a>YAML语法简介</h3><ul><li>在单一文件第一行，用连续三个连字号”-“ 开始，还有选择性的连续三个点号( … )用来表示文件结尾</li><li>次行开始正常写Playbook的内容，一般建议写明该Playbook的功能</li><li>使用#号注释代码</li><li>缩进的级别也必须是一致的，同样的缩进代表同样的级别，程序判别配置的级别是通过缩进结行来实现的</li><li>缩进不支持tab,必须使用空格进行缩进</li><li>缩进的空格数不重要，只要相同层级的元素左对齐即可</li><li>YAML文件内容是区别大小写的，key&#x2F;value的值均需大小写敏感</li><li>多个key&#x2F;value可同行写也可换行写，同行使用，分隔</li><li>key后面冒号要加一个空格 比如: key: value</li><li>value可是个字符串，也可是另一个列表</li><li>YAML文件扩展名通常为yml或yaml</li></ul><h3 id="支持的数据类型"><a href="#支持的数据类型" class="headerlink" title="支持的数据类型"></a>支持的数据类型</h3><p>YAML 支持以下常用几种数据类型：</p><ul><li>标量：单个的、不可再分的值</li><li>对象：键值对的集合，又称为: 字典（dictionary）&#x2F; 哈希（hashes） &#x2F; 映射（mapping）</li><li>数组：一组按次序排列的值，又称为: 列表（list）&#x2F; 序列（sequence）</li></ul><h4 id="scalar-标量"><a href="#scalar-标量" class="headerlink" title="scalar 标量"></a>scalar 标量</h4><p>key对应value</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name: wang</span><br><span class="line">age: 18</span><br></pre></td></tr></table></figure><p>使用缩进的方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name:</span><br><span class="line">wang</span><br><span class="line">age:</span><br><span class="line">18</span><br></pre></td></tr></table></figure><p>标量是最基本的，不可再分的值，包括：</p><ul><li>字符串 </li><li>布尔值</li><li>整数</li><li>浮点数</li><li>Null</li><li>时间</li><li>日期</li></ul><h4 id="Dictionary-字典"><a href="#Dictionary-字典" class="headerlink" title="Dictionary 字典"></a>Dictionary 字典</h4><p>一个字典是由一个或多个key与value构成<br>key和value之间用冒号 ：分隔<br>冒号 : 后面有一个空格<br>所有 k&#x2F;v 可以放在一行，,每个 k&#x2F;v 之间用逗号分隔<br>所有每个 k&#x2F;v 也可以分别放在不同行,一对k&#x2F;v放在独立的一行<br>格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">account: &#123; name: wang, age: 30 &#125;</span><br></pre></td></tr></table></figure><p>使用缩进方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">account:</span><br><span class="line">name: wang</span><br><span class="line">age: 18</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#不同行</span><br><span class="line"># An employee record</span><br><span class="line">name: Example Developer</span><br><span class="line">job: Developer</span><br><span class="line">skill: Elite(社会精英)</span><br><span class="line">#同一行,也可以将key:value放置于&#123;&#125;中进行表示，用,分隔多个key:value</span><br><span class="line"># An employee record</span><br><span class="line">&#123;name: &quot;Example Developer&quot;, job: &quot;Developer&quot;, skill: &quot;Elite&quot;&#125;</span><br></pre></td></tr></table></figure><h4 id="List-列表"><a href="#List-列表" class="headerlink" title="List 列表"></a>List 列表</h4><p>列表由多个元素组成<br>每个元素放在不同行，每个元素一行,且元素前均使用中横线 - 开头，并且中横线 - 和元素之间有一个空格<br>也可以将所有元素用 [ ] 括起来放在同一行,每个元素之间用逗号分隔<br>格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">course: [ linux , golang , python ]</span><br></pre></td></tr></table></figure><p>也可以写成以 - 开头的多行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">course:</span><br><span class="line">- linux</span><br><span class="line">- golang</span><br><span class="line">- python</span><br><span class="line">course:</span><br><span class="line">- linux: manjaro</span><br><span class="line">- golang: gin</span><br><span class="line">- python: django</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#不同行,行以-开头,后面有一个空格</span><br><span class="line"># A list of tasty fruits</span><br><span class="line">- Apple</span><br><span class="line">- Orange</span><br><span class="line">- Strawberry</span><br><span class="line">- Mango</span><br><span class="line">#同一行</span><br><span class="line">[Apple,Orange,Strawberry,Mango]</span><br></pre></td></tr></table></figure><p>范例：YAML 表示一个家庭</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">name: John Smith</span><br><span class="line">age: 41</span><br><span class="line">gender: Male</span><br><span class="line">spouse: &#123; name: Jane Smith, age: 37, gender: Female &#125; # 写在一行里</span><br><span class="line">name: Jane Smith #也可以写成多行</span><br><span class="line">age: 37</span><br><span class="line">gender: Female</span><br><span class="line">children: [ &#123;name: Jimmy Smith,age: 17, gender: Male&#125;, &#123;name: Jenny Smith, age:13, gender: Female&#125;, &#123;name: hao Smith, age: 20, gender: Male &#125; ] #写在一行</span><br><span class="line">- name: Jimmy Smith #写在多行,更为推荐的写法</span><br><span class="line">age: 17</span><br><span class="line">gender: Male</span><br><span class="line">- &#123;name: Jenny Smith, age: 13, gender: Female&#125;</span><br><span class="line">- &#123;name: hao Smith, age: 20, gender: Male &#125;</span><br></pre></td></tr></table></figure><h3 id="三种常见的数据格式"><a href="#三种常见的数据格式" class="headerlink" title="三种常见的数据格式"></a>三种常见的数据格式</h3><ul><li>XML：Extensible Markup Language，可扩展标记语言，可用于数据交换和配置</li><li>JSON：JavaScript Object Notation, JavaScript 对象表记法，主要用来数据交换或配置，不支持注释</li><li>YAML：YAML Ain’t Markup Language YAML 不是一种标记语言， 主要用来配置，大小写敏感，不支持tab</li></ul><p><img src="/../image.assets/1677310138888.png" alt="1677310138888"></p><p>可以用工具互相转换，参考网站：<br><a href="https://www.json2yaml.com/">https://www.json2yaml.com/</a><br><a href="http://www.bejson.com/json/json2yaml/">http://www.bejson.com/json/json2yaml/</a></p><h2 id="Playbook-核心组件"><a href="#Playbook-核心组件" class="headerlink" title="Playbook 核心组件"></a>Playbook 核心组件</h2><p>官方文档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://docs.ansible.com/ansible/latest/reference_appendices/playbooks_keywords.html#playbook-keywords</span><br></pre></td></tr></table></figure><p>一个playbook 中由多个组件组成,其中所用到的常见组件类型如下:</p><ul><li>Hosts 执行的远程主机列表</li><li>Tasks 任务集,由多个task的元素组成的列表实现,每个task是一个字典,一个完整的代码块功能需少元素需包括 name 和 task,一个name只能包括一个task</li><li>Variables 内置变量或自定义变量在playbook中调用</li><li>Templates 模板，可替换模板文件中的变量并实现一些简单逻辑的文件</li><li>Handlers 和 notify 结合使用，由特定条件触发的操作，满足条件方才执行，否则不执行</li><li>tags 标签 指定某条任务执行，用于选择运行playbook中的部分代码。ansible具有幂等性，因此 会自动跳过没有变化的部分，即便如此，有些代码为测试其确实没有发生变化的时间依然会非常地长。此时，如果确信其没有变化，就可以通过tags跳过此些代码片断</li></ul><h3 id="hosts-组件"><a href="#hosts-组件" class="headerlink" title="hosts 组件"></a>hosts 组件</h3><p>Hosts：playbook中的每一个play的目的都是为了让特定主机以某个指定的用户身份执行任务。hosts用于指定要执行指定任务的主机，须事先定义在主机清单中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">one.example.com</span><br><span class="line">one.example.com:two.example.com</span><br><span class="line">192.168.1.50</span><br><span class="line">192.168.1.*</span><br><span class="line">Websrvs:dbsrvs #或者，两个组的并集</span><br><span class="line">Websrvs:&amp;dbsrvs #与，两个组的交集</span><br><span class="line">webservers:!dbsrvs #在websrvs组，但不在dbsrvs组</span><br></pre></td></tr></table></figure><p>案例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- hosts: websrvs:appsrvs</span><br></pre></td></tr></table></figure><h3 id="remote-user-组件"><a href="#remote-user-组件" class="headerlink" title="remote_user 组件"></a>remote_user 组件</h3><p>remote_user: 可用于Host和task中。也可以通过指定其通过sudo的方式在远程主机上执行任务，其可用于play全局或某任务；此外，甚至可以在sudo时使用sudo_user指定sudo时切换的用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- hosts: websrvs</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">    - name: test connection</span><br><span class="line">    ping:</span><br><span class="line">    remote_user: magedu</span><br><span class="line">    sudo: yes #默认sudo为root</span><br><span class="line">    sudo_user:wang #sudo为wang</span><br></pre></td></tr></table></figure><h3 id="task列表和action组件"><a href="#task列表和action组件" class="headerlink" title="task列表和action组件"></a>task列表和action组件</h3><p>play的主体部分是task list，task list中有一个或多个task,各个task 按次序逐个在hosts中指定的所有主机上执行，即在所有主机上完成第一个task后，再开始第二个task<br>task的目的是使用指定的参数执行模块，而在模块参数中可以使用变量。模块执行是幂等的，这意味着多次执行是安全的，因为其结果均一致<br>每个task都应该有其name，用于playbook的执行结果输出，建议其内容能清晰地描述任务执行步骤。<br>如果未提供name，则action的结果将用于输出<br>task两种格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">action: module arguments #示例: action: shell wall hello</span><br><span class="line">module: arguments #建议使用 #示例: shell: wall hello</span><br></pre></td></tr></table></figure><p>注意：shell和command模块后面跟命令，而非key&#x3D;value<br>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ansible]#cat hello.yml</span><br><span class="line">---</span><br><span class="line">#first yaml文件</span><br><span class="line">#</span><br><span class="line">- hosts: websrvs</span><br><span class="line">  remote_user: root</span><br><span class="line">  gather_facts: no</span><br><span class="line">  tasks:</span><br><span class="line">    - name: task1</span><br><span class="line">      debug: msg=&quot;task1 running&quot;</span><br><span class="line">    - name: task2</span><br><span class="line">      debug: msg=&quot;task2 running&quot;</span><br><span class="line">- hosts: appsrvs</span><br><span class="line">  remote_user: root</span><br><span class="line">  gather_facts: no</span><br><span class="line">  tasks:</span><br><span class="line">    - name: task3</span><br><span class="line">      debug: msg=&quot;task3 running&quot;</span><br><span class="line">    - name: task4</span><br><span class="line">      debug: msg=&quot;task4 running&quot;</span><br></pre></td></tr></table></figure><h3 id="其它组件说明"><a href="#其它组件说明" class="headerlink" title="其它组件说明"></a>其它组件说明</h3><p>某任务的状态在运行后为changed时，可通过”notify”通知给相应的handlers任务<br>还可以通过”tags”给task 打标签，可在ansible-playbook命令上使用-t指定进行调用</p><h3 id="ShellScripts-VS-Playbook-案例"><a href="#ShellScripts-VS-Playbook-案例" class="headerlink" title="ShellScripts VS Playbook 案例"></a>ShellScripts VS Playbook 案例</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#SHELL脚本实现</span><br><span class="line">#!/bin/bash</span><br><span class="line"># 安装Apache</span><br><span class="line">yum install --quiet -y httpd</span><br><span class="line"># 复制配置文件</span><br><span class="line">cp /tmp/httpd.conf /etc/httpd/conf/httpd.conf</span><br><span class="line">cp/tmp/vhosts.conf /etc/httpd/conf.d/</span><br><span class="line"># 启动Apache，并设置开机启动</span><br><span class="line">systemctl enable --now httpd</span><br><span class="line">#Playbook实现</span><br><span class="line">---</span><br><span class="line">- hosts: websrvs</span><br><span class="line">  remote_user: root</span><br><span class="line">  gather_facts: no</span><br><span class="line">  tasks:</span><br><span class="line">  - name: &quot;安装Apache&quot;</span><br><span class="line">    yum: name=httpd</span><br><span class="line">  - name: &quot;复制配置文件&quot;</span><br><span class="line">copy: src=/tmp/httpd.conf dest=/etc/httpd/conf/</span><br><span class="line">  - name: &quot;复制配置文件&quot;</span><br><span class="line">copy: src=/tmp/vhosts.conf dest=/etc/httpd/conf.d/</span><br><span class="line">  - name: &quot;启动Apache，并设置开机启动&quot;</span><br><span class="line">service: name=httpd state=started enabled=yes</span><br></pre></td></tr></table></figure><h2 id="playbook-命令"><a href="#playbook-命令" class="headerlink" title="playbook 命令"></a>playbook 命令</h2><p>格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook &lt;filename.yml&gt; ... [options]</span><br></pre></td></tr></table></figure><p>选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">--syntax,--syntax-check #语法检查,功能相当于bash -n</span><br><span class="line">-C --check #模拟执行dry run ,只检测可能会发生的改变，但不真正执行操作</span><br><span class="line">--list-hosts #列出运行任务的主机</span><br><span class="line">--list-tags #列出tag</span><br><span class="line">--list-tasks #列出task</span><br><span class="line">--limit 主机列表 #只针对主机列表中的特定主机执行</span><br><span class="line">-i INVENTORY, --inventory INVENTORY #指定主机清单文件,通常一个项对应一个主机清单文件</span><br><span class="line">--start-at-task START_AT_TASK #从指定task开始执行,而非从头开始,START_AT_TASK为任务的name</span><br><span class="line">-v -vv -vvv #显示过程</span><br></pre></td></tr></table></figure><p>范例: 一个简单的 playbook</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ansible]#cat hello.yml</span><br><span class="line">---</span><br><span class="line">- hosts: websrvs</span><br><span class="line">  tasks:</span><br><span class="line">    - name: hello</span><br><span class="line">      command: echo &quot;hello ansible&quot;</span><br><span class="line">[root@ansible ansible]#ansible-playbook hello.yml</span><br><span class="line">[root@ansible ansible]#ansible-playbook -v hello.yml</span><br></pre></td></tr></table></figure><p>范例: 检查和限制主机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook file.yml --check #只检测</span><br><span class="line">ansible-playbook file.yml</span><br><span class="line">ansible-playbook file.yml --limit websrvs</span><br></pre></td></tr></table></figure><p>范例: 一个playbook 多个play</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cat test_plays.yaml</span><br><span class="line">---</span><br><span class="line">- hosts: localhost</span><br><span class="line">  remote_user: root</span><br><span class="line">  gather_facts: no</span><br><span class="line">  tasks:</span><br><span class="line">    - name: play1</span><br><span class="line">      command: echo &quot;play1&quot;</span><br><span class="line">- hosts: centos7</span><br><span class="line">  remote_user: root</span><br><span class="line">  gather_facts: no</span><br><span class="line">  tasks:</span><br><span class="line">    - name: play2</span><br><span class="line">      command: echo &quot;play2&quot;</span><br></pre></td></tr></table></figure><h2 id="忽略错误-ignore-errors"><a href="#忽略错误-ignore-errors" class="headerlink" title="忽略错误 ignore_errors"></a>忽略错误 ignore_errors</h2><p>如果一个task出错,默认将不会继续执行后续的其它task<br>利用 ignore_errors: yes 可以忽略此task的错误,继续向下执行playbook其它task</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ansible]#cat test_ignore.yml</span><br><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line">  tasks:</span><br><span class="line">    - name: error</span><br><span class="line">      command: /bin/false</span><br><span class="line">      ignore_errors: yes</span><br><span class="line">    - name: continue</span><br><span class="line">      command: wall continue</span><br></pre></td></tr></table></figure><h2 id="ansible-playbook案例"><a href="#ansible-playbook案例" class="headerlink" title="ansible-playbook案例"></a>ansible-playbook案例</h2><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line"># yum install nginx</span><br><span class="line">  remote_user: root</span><br><span class="line">  gather_facts: no</span><br><span class="line">  tasks:</span><br><span class="line">    - name: install nginx</span><br><span class="line">      yum: name=nginx state=present</span><br><span class="line">    - name:</span><br><span class="line">      service: name=nginx state=started enabled=yes</span><br></pre></td></tr></table></figure><h3 id="卸载httpd"><a href="#卸载httpd" class="headerlink" title="卸载httpd"></a>卸载httpd</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#remove_httpd.yml</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">webservers</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">gather_facts:</span> <span class="literal">no</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">remove</span> <span class="string">httpd</span> <span class="string">package</span></span><br><span class="line">    <span class="attr">yum:</span> <span class="string">name=httpd</span> <span class="string">state=absent</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">remove</span> <span class="string">apache</span> <span class="string">user</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">name=apache</span> <span class="string">state=absent</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">remove</span> <span class="string">config</span> <span class="string">file</span></span><br><span class="line">    <span class="attr">file:</span> <span class="string">name=/etc/httpd</span> <span class="string">state=absent</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">remove</span> <span class="string">web</span> <span class="string">html</span></span><br><span class="line">    <span class="attr">file:</span> <span class="string">name=/data/html/</span> <span class="string">state=absent</span></span><br></pre></td></tr></table></figure><h2 id="Playbook中使用handlers和notify"><a href="#Playbook中使用handlers和notify" class="headerlink" title="Playbook中使用handlers和notify"></a>Playbook中使用handlers和notify</h2><h3 id="handlers和notify"><a href="#handlers和notify" class="headerlink" title="handlers和notify"></a>handlers和notify</h3><p>Handlers本质是task list ，类似于MySQL中的触发器触发的行为，其中的task与前述的task并没有本质上的不同，只有在关注的资源发生变化时，才会采取一定的操作。<br>Notify对应的action 在所有task都执行完才会最后被触发，这样可避免多个task多次改变发生时每次都触发执行指定的操作，Handlers仅在所有的变化发生完成后一次性地执行指定操作。<br>在notify中列出的操作称为handler，也即notify中调用handler中定义的操作<br>注意:</p><ul><li>如果多个task通知了相同的handlers， 此handlers仅会在所有task结束后运行一 次。</li><li>只有notify对应的task发生改变了才会通知handlers， 没有改变则不会触发handlers</li><li>handlers 是在所有前面的tasks都成功执行才会执行,如果前面任何一个task失败,会导致handle跳过执行</li></ul><p>案例:</p><p><img src="/../image.assets/1677315798458.png" alt="1677315798458"></p><p><img src="/../image.assets/1677315812687.png" alt="1677315812687"></p><p>案例：</p><p><img src="/../image.assets/1677315839869.png" alt="1677315839869"></p><p>案例：</p><p><img src="/../image.assets/1677315862982.png" alt="1677315862982"></p><p><img src="/../image.assets/1677315872464.png" alt="1677315872464"></p><p>范例: 部署haproxy</p><p><img src="/../image.assets/1677315902745.png" alt="1677315902745"></p><h3 id="force-handlers"><a href="#force-handlers" class="headerlink" title="force_handlers"></a>force_handlers</h3><p>如果不论前面的task成功与否,都希望handlers能执行, 可以使用force_handlers: yes 强制执行handler<br>范例: 强制调用handlers</p><p><img src="/../image.assets/1677315975960.png" alt="1677315975960"></p><h2 id="Playbook中使用tags组件"><a href="#Playbook中使用tags组件" class="headerlink" title="Playbook中使用tags组件"></a>Playbook中使用tags组件</h2><p>官方文档:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://docs.ansible.com/ansible/latest/user_guide/playbooks_tags.html</span><br></pre></td></tr></table></figure><p>默认情况下， Ansible 在执行一个 playbook 时，会执行 playbook 中所有的任务，在playbook文件中，可以利用tags组件，为特定 task 指定标签，当在执行playbook时，可以只执行特定tags的task,而非整个playbook文件<br>可以一个task对应多个tag,也可以多个task对应同一个tag<br>还有另外3个特殊关键字用于标签, tagged, untagged 和 all,它们分别是仅运行已标记，只有未标记和所有任务。<br>tags 主要用于调试环境<br>范例： tag 标签</p><p><img src="/../image.assets/1677316033321.png" alt="1677316033321"></p><h2 id="Playbook中使用变量"><a href="#Playbook中使用变量" class="headerlink" title="Playbook中使用变量"></a>Playbook中使用变量</h2><p>Playbook中同样也支持变量<br>变量名：仅能由字母、数字和下划线组成，且只能以字母开头<br>变量定义：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">variable=value</span><br><span class="line">variable: value</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http_port=80</span><br><span class="line">http_port: 80</span><br></pre></td></tr></table></figure><p>通过  调用变量，且变量名前后建议加空格，有时用”“才生效<br>变量来源：</p><ol><li>ansible 的 setup facts 远程主机的所有变量都可直接调用</li><li>通过命令行指定变量，优先级最高</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -e varname=value test.yml</span><br></pre></td></tr></table></figure><p>3.在playbook文件中定义</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vars:</span><br><span class="line">var1: value1</span><br><span class="line">var2: value2</span><br></pre></td></tr></table></figure><p>4.在独立的变量YAML文件中定义</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- hosts: all</span><br><span class="line">vars_files:</span><br><span class="line">- vars.yml</span><br></pre></td></tr></table></figure><ol start="5"><li>在主机清单文件中定义<br>主机（普通）变量：主机组中主机单独定义，优先级高于公共变量<br>组（公共）变量：针对主机组中所有主机定义统一变量</li><li>在项目中针对主机和主机组定义<br>在项目目录中创建 host_vars和group_vars目录</li><li>在role中定义</li></ol><p>变量的优先级从高到低如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-e 选项定义变量 --&gt;playbook中vars_files --&gt; playbook中vars变量定义 --&gt;host_vars/主机名文件 --&gt;主机清单中主机变量--&gt; group_vars/主机组名文件--&gt;group_vars/all文件--&gt; 主机清单组变量</span><br></pre></td></tr></table></figure><h3 id="使用-setup-模块中变量"><a href="#使用-setup-模块中变量" class="headerlink" title="使用 setup 模块中变量"></a>使用 setup 模块中变量</h3><h4 id="使用-facts-变量"><a href="#使用-facts-变量" class="headerlink" title="使用 facts 变量"></a>使用 facts 变量</h4><p>本模块自动在playbook调用，生成的系统状态信息, 并将之存放在facts变量中<br>facts 包括的信息很多,如: 主机名,IP,CPU,内存,网卡等<br>facts 变量的实际使用场景案例</p><ul><li>通过facts变量获取被控端CPU的个数信息,从而生成不同的Nginx配置文件</li><li>通过facts变量获取被控端内存大小信息,从而生成不同的memcached的配置文件</li><li>通过facts变量获取被控端主机名称信息,从而生成不同的Zabbix配置文件</li><li>通过facts变量获取被控端网卡信息,从而生成不同的主机名</li></ul><p>案例：使用setup变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]# ansible localhost -m setup -a &#x27;filter=&quot;ansible_default_ipv4&quot;&#x27;</span><br><span class="line">localhost | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;ansible_default_ipv4&quot;: &#123;</span><br><span class="line">            &quot;address&quot;: &quot;192.168.32.133&quot;,</span><br><span class="line">            &quot;alias&quot;: &quot;ens160&quot;,</span><br><span class="line">            &quot;broadcast&quot;: &quot;192.168.32.255&quot;,</span><br><span class="line">            &quot;gateway&quot;: &quot;192.168.32.2&quot;,</span><br><span class="line">            &quot;interface&quot;: &quot;ens160&quot;,</span><br><span class="line">            &quot;macaddress&quot;: &quot;00:0c:29:7c:80:cd&quot;,</span><br><span class="line">            &quot;mtu&quot;: 1500,</span><br><span class="line">            &quot;netmask&quot;: &quot;255.255.255.0&quot;,</span><br><span class="line">            &quot;network&quot;: &quot;192.168.32.0&quot;,</span><br><span class="line">            &quot;prefix&quot;: &quot;24&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;ether&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;changed&quot;: false</span><br><span class="line">&#125;</span><br><span class="line">[root@ansible ~]# </span><br></pre></td></tr></table></figure><p>范例：显示ens33的网卡的IP地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line">  tasks:</span><br><span class="line">    - name: show ens33 ip</span><br><span class="line">      debug:</span><br><span class="line">        msg: IP address &#123;&#123; ansible_ens33.ipv4.address &#125;&#125;</span><br><span class="line">        #msg: IP address &#123;&#123; ansible_facts[&quot;ens33&quot;][&quot;ipv4&quot;][&quot;address&quot;] &#125;&#125;</span><br><span class="line">        #msg: IP address &#123;&#123; ansible_facts.ens33.ipv4.address &#125;&#125;</span><br><span class="line">        #msg: IP address &#123;&#123; ansible_default_ipv4.address &#125;&#125;</span><br><span class="line">        #msg: IP address &#123;&#123; ansible_ens33.ipv4.address &#125;&#125;</span><br><span class="line">        #msg: IP address &#123;&#123; ansible_ens33.ipv4.address.split(&#x27;.&#x27;)[-1] &#125;&#125;  #取IP中的最后一个数字</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ansible]# ansible-playbook -v show_ip.yml </span><br><span class="line">Using /etc/ansible/ansible.cfg as config file</span><br><span class="line"></span><br><span class="line">PLAY [centos7] *************************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [Gathering Facts] *****************************************************************************************************************</span><br><span class="line">ok: [192.168.32.179]</span><br><span class="line">ok: [192.168.32.178]</span><br><span class="line"></span><br><span class="line">TASK [show ens33 ip] *******************************************************************************************************************</span><br><span class="line">ok: [192.168.32.178] =&gt; &#123;</span><br><span class="line">    &quot;msg&quot;: &quot;IP address 192.168.32.178&quot;</span><br><span class="line">&#125;</span><br><span class="line">ok: [192.168.32.179] =&gt; &#123;</span><br><span class="line">    &quot;msg&quot;: &quot;IP address 192.168.32.179&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PLAY RECAP *****************************************************************************************************************************</span><br><span class="line">192.168.32.178             : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line">192.168.32.179             : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line"></span><br><span class="line">[root@ansible ansible]# </span><br></pre></td></tr></table></figure><p>范例：修改主机名称为web-IP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- hosts: centos7</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 打印facts变量</span><br><span class="line">    debug: msg=&#123;&#123; ansible_ens33.ipv4.address &#125;&#125;</span><br><span class="line">  - name: 修改主机名</span><br><span class="line">    hostname: name=web-&#123;&#123; ansible_ens33.ipv4.address &#125;&#125;</span><br><span class="line">  #- name: 获取facts变量提取IP地址，以.结尾的最后一列,修改主机名为web-hostid</span><br><span class="line">    #hostname: name=web-&#123;&#123; ansible_ens33.ipv4.address.split(&#x27;.&#x27;)[-1] &#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ansible]# ansible-playbook change_hostname.yml </span><br><span class="line"></span><br><span class="line">PLAY [centos7] *************************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [Gathering Facts] *****************************************************************************************************************</span><br><span class="line">ok: [192.168.32.178]</span><br><span class="line">ok: [192.168.32.179]</span><br><span class="line"></span><br><span class="line">TASK [打印facts变量] *******************************************************************************************************************</span><br><span class="line">ok: [192.168.32.178] =&gt; &#123;</span><br><span class="line">    &quot;msg&quot;: &quot;192.168.32.178&quot;</span><br><span class="line">&#125;</span><br><span class="line">ok: [192.168.32.179] =&gt; &#123;</span><br><span class="line">    &quot;msg&quot;: &quot;192.168.32.179&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">TASK [修改主机名] **********************************************************************************************************************</span><br><span class="line">changed: [192.168.32.179]</span><br><span class="line">changed: [192.168.32.178]</span><br><span class="line"></span><br><span class="line">PLAY RECAP *****************************************************************************************************************************</span><br><span class="line">192.168.32.178             : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line">192.168.32.179             : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line"></span><br><span class="line">[root@ansible ansible]# </span><br></pre></td></tr></table></figure><h4 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h4><p>每次执行playbook,默认会收集每个主机的所有facts变量,将会导致速度很慢,可以采用下面方法加速<br>方法1<br>关闭facts采集加速执行,此方法将导致无法使用facts变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- hosts: all</span><br><span class="line">  gather_facts: no</span><br></pre></td></tr></table></figure><p>方法2<br>当使用 gather_facts: no 关闭 facts，确实能加速 Ansible 执行，但是有时候又需要使用 facts 中的内容，还希望执行的速度快，这时候可以设置facts 的缓存,将facts变量信息存在redis服务器中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]# cat /etc/ansible/ansible.cfg</span><br><span class="line">[defaults]</span><br><span class="line"># smart 表示默认收集 facts，但 facts 已有的情况下不会收集，即使用缓存 facts</span><br><span class="line"># implicit 表示默认收集 facts，要禁止收集，必须使用 gather_facts: False</span><br><span class="line"># explicit 则表示默认不收集，要显式收集，必须使用gather_facts: True</span><br><span class="line">gathering = smart #在使用 facts 缓存时设置为smart</span><br><span class="line">fact_caching_timeout = 86400 #缓存时长</span><br><span class="line">fact_caching = redis #缓存存在redis中</span><br><span class="line">fact_caching_connection = 10.0.0.100:6379:0 #0表示redis的0号数据库</span><br><span class="line">#若redis设置了密码</span><br><span class="line">fact_caching_connection = 10.0.0.100:6379:0:password</span><br></pre></td></tr></table></figure><h3 id="register-注册变量"><a href="#register-注册变量" class="headerlink" title="register 注册变量"></a>register 注册变量</h3><p>在playbook中可以使用register将捕获命令的输出保存在临时变量中，方便后续调用此变量,比如可以使用debug模块进行显示输出<br>范例: 利用debug 模块输出变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line">  tasks:</span><br><span class="line">    - name: get variable</span><br><span class="line">      shell: hostname</span><br><span class="line">      register: name</span><br><span class="line">    - name: print variable</span><br><span class="line">      debug:</span><br><span class="line">        msg: &quot;&#123;&#123; name &#125;&#125;&quot; #输出register注册的name变量的全部信息,注意变量要加&quot; &quot;引起来</span><br><span class="line">         #msg: &quot;&#123;&#123; name.cmd &#125;&#125;&quot; #显示命令</span><br><span class="line">         #msg: &quot;&#123;&#123; name.rc &#125;&#125;&quot; #显示命令成功与否</span><br><span class="line"> #msg: &quot;&#123;&#123; name.stdout &#125;&#125;&quot; #显示命令的输出结果为字符串形式,所有结果都放在一行里显示,适合于结果是单行输出</span><br><span class="line">    #msg: &quot;&#123;&#123; name.stdout_lines &#125;&#125;&quot; #显示命令的输出结果为列表形式,逐行标准输出,适用于多行显示</span><br><span class="line">#msg: &quot;&#123;&#123; name[&#x27;stdout_lines&#x27;] &#125;&#125;&quot; #显示命令的执行结果为列表形式,和效果上面相同</span><br><span class="line">#msg: &quot;&#123;&#123; name.stdout_lines[0] &#125;&#125;&quot; #显示命令的输出结果的列表中的第一个元素</span><br><span class="line">#说明 第一个 task 中，使用了 register 注册变量名为 name ；当 shell 模块执行完毕后，会将数据放到该变量中。第二给 task 中，使用了 debug 模块，并从变量name中获取数据。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ansible]# ansible-playbook -C register.yml </span><br><span class="line"></span><br><span class="line">PLAY [centos7] *************************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [Gathering Facts] *****************************************************************************************************************</span><br><span class="line">ok: [192.168.32.179]</span><br><span class="line">ok: [192.168.32.178]</span><br><span class="line"></span><br><span class="line">TASK [get variable] ********************************************************************************************************************</span><br><span class="line">skipping: [192.168.32.179]</span><br><span class="line">skipping: [192.168.32.178]</span><br><span class="line"></span><br><span class="line">TASK [print variable] ******************************************************************************************************************</span><br><span class="line">ok: [192.168.32.178] =&gt; &#123;</span><br><span class="line">    &quot;msg&quot;: &#123;</span><br><span class="line">        &quot;changed&quot;: false,</span><br><span class="line">        &quot;cmd&quot;: &quot;hostname&quot;,</span><br><span class="line">        &quot;delta&quot;: null,</span><br><span class="line">        &quot;end&quot;: null,</span><br><span class="line">        &quot;failed&quot;: false,</span><br><span class="line">        &quot;msg&quot;: &quot;Command would have run if not in check mode&quot;,</span><br><span class="line">        &quot;rc&quot;: 0,</span><br><span class="line">        &quot;skipped&quot;: true,</span><br><span class="line">        &quot;start&quot;: null,</span><br><span class="line">        &quot;stderr&quot;: &quot;&quot;,</span><br><span class="line">        &quot;stderr_lines&quot;: [],</span><br><span class="line">        &quot;stdout&quot;: &quot;&quot;,</span><br><span class="line">        &quot;stdout_lines&quot;: []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ok: [192.168.32.179] =&gt; &#123;</span><br><span class="line">    &quot;msg&quot;: &#123;</span><br><span class="line">        &quot;changed&quot;: false,</span><br><span class="line">        &quot;cmd&quot;: &quot;hostname&quot;,</span><br><span class="line">        &quot;delta&quot;: null,</span><br><span class="line">        &quot;end&quot;: null,</span><br><span class="line">        &quot;failed&quot;: false,</span><br><span class="line">        &quot;msg&quot;: &quot;Command would have run if not in check mode&quot;,</span><br><span class="line">        &quot;rc&quot;: 0,</span><br><span class="line">        &quot;skipped&quot;: true,</span><br><span class="line">        &quot;start&quot;: null,</span><br><span class="line">        &quot;stderr&quot;: &quot;&quot;,</span><br><span class="line">        &quot;stderr_lines&quot;: [],</span><br><span class="line">        &quot;stdout&quot;: &quot;&quot;,</span><br><span class="line">        &quot;stdout_lines&quot;: []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PLAY RECAP *****************************************************************************************************************************</span><br><span class="line">192.168.32.178             : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   </span><br><span class="line">192.168.32.179             : ok=2    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   </span><br><span class="line"></span><br><span class="line">[root@ansible ansible]# </span><br></pre></td></tr></table></figure><p>范例: 安装启动服务并检查</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line">  vars:</span><br><span class="line">    package_name: nginx</span><br><span class="line">    service_name: nginx</span><br><span class="line">  tasks:</span><br><span class="line">  - name: install &#123;&#123; package_name &#125;&#125;</span><br><span class="line">    yum: name=&#123;&#123; package_name &#125;&#125;</span><br><span class="line">  - name: start &#123;&#123; service_name &#125;&#125;</span><br><span class="line">    service: name=&#123;&#123; service_name &#125;&#125; state=started enabled=yes</span><br><span class="line">  - name: check</span><br><span class="line">    shell: ps axu|grep &#123;&#123; service_name &#125;&#125;</span><br><span class="line">    register: check_service</span><br><span class="line">  - name: debug</span><br><span class="line">    debug:</span><br><span class="line">      msg: &quot;&#123;&#123; check_service.stdout_lines &#125;&#125;&quot;</span><br></pre></td></tr></table></figure><p>范例: 修改主机名形式为 web_&lt;随机字符&gt;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- hosts: centos7</span><br><span class="line">  tasks:</span><br><span class="line">  - name: genarate random</span><br><span class="line">    shell:</span><br><span class="line">      cmd: openssl rand -base64 12 |tr -dc &#x27;[:alnum:]&#x27;</span><br><span class="line">    register:</span><br><span class="line">      num</span><br><span class="line">  - name: show random</span><br><span class="line">    debug:</span><br><span class="line">      msg: &quot;&#123;&#123; num &#125;&#125;&quot;</span><br><span class="line">  - name: change hostname</span><br><span class="line">    hostname:</span><br><span class="line">      name: web-&#123;&#123; num.stdout &#125;&#125;</span><br></pre></td></tr></table></figure><p>范例: 修改主机名形式为 web_随机数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- hosts: centos7</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 定义一个随机数，设定为变量，然后后续调用</span><br><span class="line">    shell: echo $((RANDOM%255))</span><br><span class="line">    register: web_number</span><br><span class="line">  - name: 使用debug输出变量结果</span><br><span class="line">    debug: msg=&#123;&#123; web_number &#125;&#125;</span><br><span class="line">  - name: 使用hostname模块将主机名修改为web_随机数</span><br><span class="line">    hostname: name=web_&#123;&#123; web_number.stdout &#125;&#125;</span><br></pre></td></tr></table></figure><p>范例: 批量修改主机名为随机字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- hosts: centos7</span><br><span class="line">  vars:</span><br><span class="line">    host: web</span><br><span class="line">    domain: wang.org</span><br><span class="line">  tasks:</span><br><span class="line">  - name: get variable</span><br><span class="line">    shell: echo $RANDOM | md5sum | cut -c 1-8</span><br><span class="line">    register: get_random</span><br><span class="line">  - name: print variable</span><br><span class="line">    debug:</span><br><span class="line">      msg: &quot;&#123;&#123; get_random.stdout &#125;&#125;&quot;</span><br><span class="line">  - name: set hostname</span><br><span class="line">    hostname: name=&#123;&#123; host &#125;&#125;-&#123;&#123; get_random.stdout &#125;&#125;.&#123;&#123; domain &#125;&#125;</span><br></pre></td></tr></table></figure><p>范例: 批量修改主机名为IP最后1位数字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- hosts: centos7</span><br><span class="line">  vars:</span><br><span class="line">    host: web</span><br><span class="line">    domain: wang.org</span><br><span class="line">  tasks:</span><br><span class="line">    - name: get variable</span><br><span class="line">      shell: hostname -I | awk &#x27;&#123;print $1&#125;&#x27;</span><br><span class="line">      register: get_ip</span><br><span class="line">    - name: print variable</span><br><span class="line">      debug:</span><br><span class="line">        msg: &quot;&#123;&#123; get_ip.stdout.split(&#x27;.&#x27;)[3] &#125;&#125;&quot;</span><br><span class="line">    - name: set hostname</span><br><span class="line">      hostname: name=&#123;&#123; host &#125;&#125;-&#123;&#123; get_ip.stdout.split(&#x27;.&#x27;)[3] &#125;&#125;.&#123;&#123; domain &#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="在-Playbook-命令行中定义变量"><a href="#在-Playbook-命令行中定义变量" class="headerlink" title="在 Playbook 命令行中定义变量"></a>在 Playbook 命令行中定义变量</h3><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">  - name: install nginx</span><br><span class="line">    yum: name=&#123;&#123; pkname &#125;&#125; state=present</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">[root@ansible ~]#ansible-playbook -e pkname=nginx var2.yml</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#也可以将多个变量放在一个文件中</span><br><span class="line">[root@ansible ~]#cat vars</span><br><span class="line">pkname1: memcached</span><br><span class="line">pkname2: vsftpd</span><br><span class="line">[root@ansible ~]#vim var2.yml</span><br><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">  - name: install package &#123;&#123; pkname1 &#125;</span><br><span class="line">    yum: name=&#123;&#123; pkname1 &#125;&#125; state=present</span><br><span class="line">  - name: install package &#123;&#123; pkname2 &#125;</span><br><span class="line">    yum: name=&#123;&#123; pkname2 &#125;&#125; state=present</span><br><span class="line">[root@ansible ~]#ansible-playbook -e pkname1=memcached -e pkname2=httpd var2.yml</span><br><span class="line">[root@ansible ~]#ansible-playbook -e &#x27;@vars&#x27; var2.yml</span><br></pre></td></tr></table></figure><h3 id="在playbook文件中定义变量"><a href="#在playbook文件中定义变量" class="headerlink" title="在playbook文件中定义变量"></a>在playbook文件中定义变量</h3><p>此方式定义的是私有变量,即只能在当前playbook中使用,不能被其它Playbook共用<br>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- hosts: webservers</span><br><span class="line">  remote_user: root</span><br><span class="line">  vars:</span><br><span class="line">    username: user1</span><br><span class="line">    groupname: group1</span><br><span class="line">  tasks:</span><br><span class="line">  - name: create group &#123;&#123; groupname &#125;&#125;</span><br><span class="line">    group: name=&#123;&#123; groupname &#125;&#125; state=present</span><br><span class="line">  - name: create user &#123;&#123; username &#125;&#125;</span><br><span class="line">    user: name=&#123;&#123; username &#125;&#125; group=&#123;&#123; groupname &#125;&#125; state=present</span><br><span class="line">    </span><br><span class="line">[root@ansible ~]#ansible-playbook -e &quot;username=user2 groupname=group2&quot; var3.yml</span><br></pre></td></tr></table></figure><p>范例：变量的相互调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line">  remote_user: root</span><br><span class="line">  vars:</span><br><span class="line">    collect_info: &quot;/data/test/&#123;&#123;ansible_default_ipv4[&#x27;address&#x27;]&#125;&#125;/&quot;</span><br><span class="line">  tasks:</span><br><span class="line">  - name: create IP directory</span><br><span class="line">    file: name=&quot;&#123;&#123;collect_info&#125;&#125;&quot; state=directory</span><br></pre></td></tr></table></figure><h3 id="使用专用的公共的变量文件"><a href="#使用专用的公共的变量文件" class="headerlink" title="使用专用的公共的变量文件"></a>使用专用的公共的变量文件</h3><p>可以在一个独立的playbook文件中定义公共变量，在其它的playbook文件中可以引用变量文件中的变量<br>此方式比playbook中定义的变量优化级高</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vim vars.yml</span><br><span class="line">---</span><br><span class="line"># variables file</span><br><span class="line">package_name: mariadb-server</span><br><span class="line">service_name: mariadb</span><br><span class="line"></span><br><span class="line">vim var5.yml</span><br><span class="line">---</span><br><span class="line">#install package and start service</span><br><span class="line">- hosts: dbsrvs</span><br><span class="line">  remote_user: root</span><br><span class="line">  vars_files:</span><br><span class="line">  # 指定变量文件名</span><br><span class="line">    - vars.yml</span><br><span class="line">  tasks:</span><br><span class="line">  - name: install package</span><br><span class="line">    yum: name=&#123;&#123; package_name &#125;&#125;</span><br><span class="line">    tags: install</span><br><span class="line">  - name: start service</span><br><span class="line">    service: name=&#123;&#123; service_name &#125;&#125; state=started enabled=yes</span><br></pre></td></tr></table></figure><h3 id="在主机清单中定义主机和主机组的变量"><a href="#在主机清单中定义主机和主机组的变量" class="headerlink" title="在主机清单中定义主机和主机组的变量"></a>在主机清单中定义主机和主机组的变量</h3><h4 id="所有项目的主机变量"><a href="#所有项目的主机变量" class="headerlink" title="所有项目的主机变量"></a>所有项目的主机变量</h4><p>在inventory 主机清单文件中为指定的主机定义变量以便于在playbook中使用<br>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[webservers]</span><br><span class="line">www1.wang.org http_port=80 maxRequestsPerChild=808</span><br><span class="line">www2.wang.org http_port=8080 maxRequestsPerChild=909</span><br></pre></td></tr></table></figure><h4 id="所有项目的组（公共）变量"><a href="#所有项目的组（公共）变量" class="headerlink" title="所有项目的组（公共）变量"></a>所有项目的组（公共）变量</h4><p>在inventory 主机清单文件中赋予给指定组内所有主机上的在playbook中可用的变量，如果和主机变是同名，优先级低于主机变量</p><p>案例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[webservers:vars]</span><br><span class="line">http_port=80</span><br><span class="line">ntp_server=ntp.wang.org</span><br><span class="line">nfs_server=nfs.wang.org</span><br><span class="line">[all:vars]</span><br><span class="line"># --------- Main Variables ---------------</span><br><span class="line"># Cluster container-runtime supported: docker, containerd</span><br><span class="line">CONTAINER_RUNTIME=&quot;docker&quot;</span><br><span class="line"># Network plugins supported: calico, flannel, kube-router, cilium, kube-ovn</span><br><span class="line">CLUSTER_NETWORK=&quot;calico&quot;</span><br><span class="line"># Service proxy mode of kube-proxy: &#x27;iptables&#x27; or &#x27;ipvs&#x27;</span><br><span class="line">PROXY_MODE=&quot;ipvs&quot;</span><br><span class="line"># K8S Service CIDR, not overlap with node(host) networking</span><br><span class="line">SERVICE_CIDR=&quot;192.168.0.0/16&quot;</span><br><span class="line"># Cluster CIDR (Pod CIDR), not overlap with node(host) networking</span><br><span class="line">CLUSTER_CIDR=&quot;172.16.0.0/16&quot;</span><br><span class="line"># NodePort Range</span><br><span class="line">NODE_PORT_RANGE=&quot;20000-60000&quot;</span><br><span class="line"># Cluster DNS Domain</span><br><span class="line">CLUSTER_DNS_DOMAIN=&quot;magedu.local.&quot;</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#vim /etc/ansible/hosts</span><br><span class="line">[webservers]</span><br><span class="line">10.0.0.8 hname=www1 domain=magedu.io</span><br><span class="line">10.0.0.7 hname=www2</span><br><span class="line">[webservers:vars]</span><br><span class="line">mark=&quot;-&quot;</span><br><span class="line">[all:vars]</span><br><span class="line">domain=wang.org</span><br><span class="line">[root@ansible ~]#ansible webservers -m hostname -a &#x27;name=&#123;&#123; hname &#125;&#125;&#123;&#123; mark &#125;&#125;</span><br><span class="line">&#123;&#123; domain &#125;&#125;&#x27;</span><br><span class="line">#命令行指定变量：</span><br><span class="line">[root@ansible ~]#ansible webservers -e domain=magedu.cn -m hostname -a &#x27;name=</span><br><span class="line">&#123;&#123; hname &#125;&#125;&#123;&#123; mark &#125;&#125;&#123;&#123; domain &#125;&#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="针对当前项目的主机和主机组的变量"><a href="#针对当前项目的主机和主机组的变量" class="headerlink" title="针对当前项目的主机和主机组的变量"></a>针对当前项目的主机和主机组的变量</h3><p>上面的方式是针对所有项目都有效,而官方更建议的方式是使用ansible特定项目的主机变量和组变量.生产建议在每个项目对应的目录中创建额外的两个变量目录,分别是host_vars和group_vars</p><ul><li>host_vars下面的文件名和主机清单主机名一致,针对单个主机进行变量定义格式:host_vars&#x2F;hostname</li><li>group_vars下面的文件名和主机清单中组名一致, 针对单个组进行变量定义格式: group_vars&#x2F;groupname</li><li>group_vars&#x2F;all文件内定义的变量对所有组都有效</li></ul><p>范例: 特定项目的主机和组变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ansible]#pwd</span><br><span class="line">/data/ansible</span><br><span class="line">[root@ansible ansible]#mkdir host_vars</span><br><span class="line">[root@ansible ansible]#mkdir group_vars</span><br><span class="line">[root@ansible ansible]#cat host_vars/10.0.0.8</span><br><span class="line">id: 2</span><br><span class="line">[root@ansible ansible]#cat host_vars/10.0.0.7</span><br><span class="line">id: 1</span><br><span class="line">[root@ansible ansible]#cat group_vars/webservers</span><br><span class="line">name: web</span><br><span class="line">[root@ansible ansible]#cat group_vars/all</span><br><span class="line">domain: wang.org</span><br><span class="line">[root@ansible ansible]#tree host_vars/ group_vars/</span><br><span class="line">host_vars/</span><br><span class="line">├── 10.0.0.7</span><br><span class="line">└── 10.0.0.8</span><br><span class="line">group_vars/</span><br><span class="line">├── all</span><br><span class="line">└── webservers</span><br><span class="line">0 directories, 4 files</span><br><span class="line">[root@ansible ansible]#cat test.yml</span><br><span class="line">- hosts: webservers</span><br><span class="line">tasks:</span><br><span class="line">- name: get variable</span><br><span class="line">command: echo &quot;&#123;&#123;name&#125;&#125;&#123;&#123;id&#125;&#125;.&#123;&#123;domain&#125;&#125;&quot;</span><br><span class="line">register: result</span><br><span class="line">- name: print variable</span><br><span class="line">debug:</span><br><span class="line">msg: &quot;&#123;&#123;result.stdout&#125;&#125;&quot;</span><br><span class="line">[root@ansible ansible]#ansible-playbook test.yml</span><br><span class="line">PLAY [webservers]</span><br><span class="line">********************************************************************************</span><br><span class="line">***************************************</span><br><span class="line">TASK [Gathering Facts]</span><br><span class="line">********************************************************************************</span><br><span class="line">*******************************</span><br><span class="line">ok: [10.0.0.7]</span><br><span class="line">ok: [10.0.0.8]</span><br><span class="line">TASK [get variable]</span><br><span class="line">********************************************************************************</span><br><span class="line">**********************************</span><br><span class="line">changed: [10.0.0.7]</span><br><span class="line">changed: [10.0.0.8]</span><br><span class="line">TASK [print variable]</span><br><span class="line">********************************************************************************</span><br><span class="line">********************************</span><br><span class="line">ok: [10.0.0.7] =&gt; &#123;</span><br><span class="line">&quot;msg&quot;: &quot;web1.wang.org&quot;</span><br><span class="line">&#125;</span><br><span class="line">ok: [10.0.0.8] =&gt; &#123;</span><br><span class="line">&quot;msg&quot;: &quot;web2.wang.org&quot;</span><br><span class="line">&#125;</span><br><span class="line">PLAY RECAP</span><br><span class="line">********************************************************************************</span><br><span class="line">*******************************************</span><br><span class="line">10.0.0.7 : ok=3 changed=1 unreachable=0 failed=0</span><br><span class="line">skipped=0 rescued=0 ignored=0</span><br><span class="line">10.0.0.8 : ok=3 changed=1 unreachable=0 failed=0</span><br><span class="line">skipped=0 rescued=0 ignored=0</span><br></pre></td></tr></table></figure><h2 id="Template-模板"><a href="#Template-模板" class="headerlink" title="Template 模板"></a>Template 模板</h2><p>模板是一个文本文件，可以用于根据每个主机的不同环境而为生成不同的文件<br>模板文件中支持嵌套jinja2语言的指令,来实现变量,条件判断,循环等功能<br>需要使用template模块实现文件的复制到远程主机,但和copy模块不同,复制过去的文件每个主机可以会有所不同</p><h3 id="jinja2语言"><a href="#jinja2语言" class="headerlink" title="jinja2语言"></a>jinja2语言</h3><p><img src="/../image.assets/1677662324156.png" alt="1677662324156"></p><p>Jinja2 是一个现代的，设计者友好的，仿照 Django 模板的 Python 模板语言。 它速度快，被广泛使用，并且提供了可选的沙箱模板执行环境保证安全:<br>特性:</p><ul><li>沙箱中执行</li><li>强大的 HTML 自动转义系统保护系统免受 XSS</li><li>模板继承</li><li>及时编译最优的 python 代码</li><li>可选提前编译模板的时间</li><li>易于调试。异常的行数直接指向模板中的对应行。</li><li>可配置的语法</li></ul><p>官方网站：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://jinja.pocoo.org/</span><br><span class="line">https://jinja.palletsprojects.com/en/2.11.x/</span><br></pre></td></tr></table></figure><p>官方中文文档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://docs.jinkan.org/docs/jinja2/</span><br><span class="line">https://www.w3cschool.cn/yshfid/</span><br></pre></td></tr></table></figure><p>jinja2 语言支持多种数据类型和操作:<br>字面量，如: 字符串：使用单引号或双引号,数字：整数，浮点数<br>列表：[item1, item2, …]<br>元组：(item1, item2, …)<br>字典：{key1:value1, key2:value2, …}<br>布尔型：true&#x2F;false<br>算术运算：+, -, *, &#x2F;, &#x2F;&#x2F;, %, **<br>比较操作：&#x3D;&#x3D;, !&#x3D;, &gt;, &gt;&#x3D;, &lt;, &lt;&#x3D;</p><p>逻辑运算：and，or，not<br>流表达式：For，If，When</p><p><strong>字面量：</strong><br>表达式最简单的形式就是字面量。字面量表示诸如字符串和数值的 Python 对象。如”Hello World”<br>双引号或单引号中间的一切都是字符串。无论何时你需要在模板中使用一个字符串（比如函数调用、过滤器或只是包含或继承一个模板的参数），如42，42.23<br>数值可以为整数和浮点数。如果有小数点，则为浮点数，否则为整数。在 Python 里， 42 和 42.0 是不一样的</p><p><strong>算术运算：</strong><br>Jinja 允许用计算值。支持下面的运算符<br>+：把两个对象加到一起。通常对象是素质，但是如果两者是字符串或列表，你可以用这 种方式来衔接<br>它们。无论如何这不是首选的连接字符串的方式！连接字符串见 ~ 运算符。 2 等于 2<br>-：用第一个数减去第二个数。 1 等于 1<br>&#x2F;：对两个数做除法。返回值会是一个浮点数。 0.5 等于 0.5<br>&#x2F;&#x2F;：对两个数做除法，返回整数商。 2 等于 2<br>%：计算整数除法的余数。 4 等于 4<br>*：用右边的数乘左边的操作数。 4 会返回 4 。也可以用于重 复一个字符串多次。 NaN<br>会打印 80 个等号的横条<br>**：取左操作数的右操作数次幂。 8 会返回 8</p><p><strong>比较操作符</strong></p><p>&#x3D;&#x3D; 比较两个对象是否相等<br>!&#x3D; 比较两个对象是否不等</p><blockquote><p>如果左边大于右边，返回 true<br>&#x3D; 如果左边大于等于右边，返回 true<br>&lt; 如果左边小于右边，返回 true<br>&lt;&#x3D; 如果左边小于等于右边，返回 true<br>逻辑运算符</p></blockquote><p>对于 if 语句，在 for 过滤或 if 表达式中，它可以用于联合多个表达式<br>and 如果左操作数和右操作数同为真，返回 true<br>or 如果左操作数和右操作数有一个为真，返回 true<br>not 对一个表达式取反<br>(expr)表达式组<br>true &#x2F; false true 永远是 true ，而 false 始终是 false</p><h3 id="template"><a href="#template" class="headerlink" title="template"></a>template</h3><p>template功能：可以根据和参考模块文件，动态生成相类似的配置文件<br>template文件存建议放于templates目录下，且命名为 .j2 结尾</p><p>yaml&#x2F;yml 文件和templates目录平级，此时playbook中指定模版文件时可不用指定路径, 目录结构如下<br>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./</span><br><span class="line">├── temnginx.yml</span><br><span class="line">└── templates</span><br><span class="line">   └── nginx.conf.j2</span><br></pre></td></tr></table></figure><p>范例：利用template 同步nginx配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#准备templates/nginx.conf.j2文件</span><br><span class="line">[root@ansible ~]#vim temnginx.yml</span><br><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">  - name: template config to remote hosts</span><br><span class="line">    template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf</span><br><span class="line">    </span><br><span class="line">[root@ansible ~]#ansible-playbook temnginx.yml</span><br></pre></td></tr></table></figure><p>template变更替换<br>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#修改文件nginx.conf.j2</span><br><span class="line">[root@ansible ~]#mkdir templates</span><br><span class="line">[root@ansible ~]#vim templates/nginx.conf.j2</span><br><span class="line">......</span><br><span class="line">worker_processes &#123;&#123; ansible_processor_vcpus &#125;&#125;;</span><br><span class="line">......</span><br><span class="line">[root@ansible ~]#vim temnginx2.yml</span><br><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">  - name: install nginx</span><br><span class="line">    yum: name=nginx</span><br><span class="line">  - name: template config to remote hosts</span><br><span class="line">    template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf</span><br><span class="line">  - name: start service</span><br><span class="line">    service: name=nginx state=started enabled=yes</span><br><span class="line">[root@ansible ~]#ansible-playbook temnginx2.yml</span><br></pre></td></tr></table></figure><h2 id="Roles-角色"><a href="#Roles-角色" class="headerlink" title="Roles 角色"></a>Roles 角色</h2><p>角色是ansible自1.2版本引入的新特性，用于层次性、结构化地组织playbook。roles能够根据层次型结构自动装载变量文件、tasks以及handlers等。要使用roles只需要在playbook中使用include指令即可。简单来讲，roles就是通过分别将变量、文件、任务、模板及处理器放置于单独的目录中，并可以便捷地include它们的一种机制。角色一般用于基于主机构建服务的场景中，但也可以是用于构建守护进程等场景中<br>运维复杂的场景：建议使用 roles，代码复用度高<br>roles：多个角色的集合目录， 可以将多个的role，分别放至roles目录下的独立子目录中,如下示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">roles/</span><br><span class="line">mysql/</span><br><span class="line">nginx/</span><br><span class="line">tomcat/</span><br><span class="line">redis/</span><br></pre></td></tr></table></figure><p>默认roles存放路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/root/.ansible/roles</span><br><span class="line">/usr/share/ansible/roles</span><br><span class="line">/etc/ansible/roles</span><br></pre></td></tr></table></figure><p>官方文档:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html</span><br></pre></td></tr></table></figure><h3 id="Ansible-Roles目录编排"><a href="#Ansible-Roles目录编排" class="headerlink" title="Ansible Roles目录编排"></a>Ansible Roles目录编排</h3><p>roles目录结构如下所示</p><p><img src="/../image.assets/1677664119238.png" alt="1677664119238"></p><p>每个角色，以特定的层级目录结构进行组织<br>roles目录结构：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">playbook1.yml</span><br><span class="line">playbook2.yml</span><br><span class="line">roles/</span><br><span class="line">project1/</span><br><span class="line">tasks/</span><br><span class="line">files/</span><br><span class="line">vars/</span><br><span class="line">templates/</span><br><span class="line">handlers/</span><br><span class="line">default/</span><br><span class="line">meta/</span><br><span class="line">project2/</span><br><span class="line">tasks/</span><br><span class="line">files/</span><br><span class="line">vars/</span><br><span class="line">templates/</span><br><span class="line">handlers/</span><br><span class="line">default/</span><br><span class="line">meta/</span><br></pre></td></tr></table></figure><p>Roles各目录作用<br>roles&#x2F;project&#x2F; :项目名称,有以下子目录</p><ul><li>files&#x2F; ：存放由copy或script模块等调用的文件</li><li>templates&#x2F;：template模块查找所需要模板文件的目录</li><li>tasks&#x2F;：定义task,role的基本元素，至少应该包含一个名为main.yml的文件；其它的文件需要在此文件中通过include进行包含</li><li>handlers&#x2F;：至少应该包含一个名为main.yml的文件；此目录下的其它的文件需要在此文件中通过include进行包含</li><li>vars&#x2F;：定义变量，至少应该包含一个名为main.yml的文件；此目录下的其它的变量文件需要在此文件中通过include进行包含,也可以通过项目目录中的group_vars&#x2F;all定义变量,从而实现角色通用代码和项目数据的分离</li><li>meta&#x2F;：定义当前角色的特殊设定及其依赖关系,至少应该包含一个名为main.yml的文件，其它文件需在此文件中通过include进行包含</li><li>default&#x2F;：设定默认变量时使用此目录中的main.yml文件，比vars的优先级低</li></ul><h3 id="创建-role"><a href="#创建-role" class="headerlink" title="创建 role"></a>创建 role</h3><p>创建role的步骤</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 创建role的目录结构.在以roles命名的目录下分别创建以各角色名称命名的目录，如mysql等,在每个角色命名的目录中分别创建相关的目录和文件,比如tasks、files、handlers、templates和vars等目录；用不到的目录可以创建为空目录，也可以不创建</span><br><span class="line">2 编写和准备指定role的功能文件,包括: tasks,templates,vars等相关文件</span><br><span class="line">3 编写playbook文件调用上面定义的role,应用到指定的主机</span><br></pre></td></tr></table></figure><p>针对大型项目使用Roles进行编排<br>范例: 利用 ansible-galaxy 创建角色目录的结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#创建初始化目录结构</span><br><span class="line">[root@ansible roles]#ansible-galaxy role init test_role</span><br><span class="line">- Role test_role was created successfully</span><br><span class="line">[root@ansible roles]#tree test_role/</span><br><span class="line">test_role/</span><br><span class="line">├── defaults</span><br><span class="line">│ └── main.yml</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│ └── main.yml</span><br><span class="line">├── meta</span><br><span class="line">│ └── main.yml</span><br><span class="line">├── README.md</span><br><span class="line">├── tasks</span><br><span class="line">│ └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">├── tests</span><br><span class="line">│ ├── inventory</span><br><span class="line">│ └── test.yml</span><br><span class="line">└── vars</span><br><span class="line">└── main.yml</span><br><span class="line">8 directories, 8 files</span><br></pre></td></tr></table></figure><p>范例：roles的目录结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">nginx-role.yml</span><br><span class="line">roles/</span><br><span class="line">└── nginx</span><br><span class="line">├── files</span><br><span class="line">│ └── nginx.conf</span><br><span class="line">├── tasks</span><br><span class="line">│ ├── groupadd.yml</span><br><span class="line">│ ├── install.yml</span><br><span class="line">│ ├── main.yml</span><br><span class="line">│ ├── restart.yml</span><br><span class="line">│ └── useradd.yml</span><br><span class="line">└── vars</span><br><span class="line">└── main.yml</span><br></pre></td></tr></table></figure><h3 id="Playbook-调用角色"><a href="#Playbook-调用角色" class="headerlink" title="Playbook 调用角色"></a>Playbook 调用角色</h3><p>调用角色方法1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: webservers</span><br><span class="line">  remote_user: root</span><br><span class="line">  roles:</span><br><span class="line">    - mysql</span><br><span class="line">    - memcached</span><br><span class="line">    - nginx</span><br></pre></td></tr></table></figure><p>调用角色方法2：<br>键role用于指定角色名称，后续的k&#x2F;v用于传递变量给角色</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: all</span><br><span class="line">  remote_user: root</span><br><span class="line">  roles:</span><br><span class="line">    - role: mysql</span><br><span class="line">    username: mysql</span><br><span class="line">    - &#123; role: nginx, username: nginx &#125;</span><br></pre></td></tr></table></figure><p>调用角色方法3：<br>还可基于条件测试实现角色调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: all</span><br><span class="line">  remote_user: root</span><br><span class="line">  roles:</span><br><span class="line">   - &#123; role: nginx, username: nginx, when: ansible_distribution_major_version == &#x27;7&#x27; &#125;</span><br></pre></td></tr></table></figure><h3 id="Roles-中-Tags-使用"><a href="#Roles-中-Tags-使用" class="headerlink" title="Roles 中 Tags 使用"></a>Roles 中 Tags 使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#vi app-role.yml</span><br><span class="line">---</span><br><span class="line">#可以有多个play</span><br><span class="line">- hosts: lbserver</span><br><span class="line">  roles:</span><br><span class="line">    - role: haproxy</span><br><span class="line">    - role: keepalived</span><br><span class="line">    - hosts: appsrvs</span><br><span class="line">  remote_user: root</span><br><span class="line">  roles:</span><br><span class="line">    - &#123; role: nginx ,tags: [ &#x27;nginx&#x27;, &#x27;web&#x27; ] ,when:</span><br><span class="line">    ansible_distribution_major_version == &quot;6&quot; &#125;</span><br><span class="line">    - &#123; role: httpd ,tags: [ &#x27;httpd&#x27;, &#x27;web&#x27; ] &#125;</span><br><span class="line">    - &#123; role: mysql ,tags: [ &#x27;mysql&#x27;, &#x27;db&#x27; ] &#125;</span><br><span class="line">    - role: mariadb</span><br><span class="line">      tags:</span><br><span class="line">      - mariadb</span><br><span class="line">      - db</span><br><span class="line">  tags: app #play的tag</span><br><span class="line">[root@ansible ~]#ansible-playbook --tags=&quot;nginx,mysql&quot; app-role.yml</span><br></pre></td></tr></table></figure><h3 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h3><h4 id="实现httpd角色"><a href="#实现httpd角色" class="headerlink" title="实现httpd角色"></a>实现httpd角色</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"># 创建role目录</span><br><span class="line">[root@ansible data]# ansible-galaxy role init httpd</span><br><span class="line">- Role htppd was created successfully</span><br><span class="line">[root@ansible data]# tree httpd/</span><br><span class="line">httpd/</span><br><span class="line">├── defaults</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── meta</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── README.md</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">├── tests</span><br><span class="line">│   ├── inventory</span><br><span class="line">│   └── test.yml</span><br><span class="line">└── vars</span><br><span class="line">    └── main.yml</span><br><span class="line"></span><br><span class="line">8 directories, 8 files</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line">#main.yml 是task的入口文件</span><br><span class="line">[root@ansible tasks]# cat main.yml </span><br><span class="line">---</span><br><span class="line"># tasks file for httpd</span><br><span class="line">- include: group.yml</span><br><span class="line">- include: user.yml</span><br><span class="line">- include: install_httpd.yml</span><br><span class="line">- include: config.yml</span><br><span class="line">- inclusde: index.yml</span><br><span class="line">- include: service.yml</span><br><span class="line">[root@ansible tasks]# </span><br><span class="line"></span><br><span class="line"># 创建用户组</span><br><span class="line">[root@ansible httpd]# cat tasks/group.yml </span><br><span class="line">- name: add group </span><br><span class="line">  group: name=&#123;&#123; httpd_group&#125;&#125; system=yes gid=&#123;&#123; httpd_gid &#125;&#125;</span><br><span class="line">[root@ansible htppd]# </span><br><span class="line"></span><br><span class="line"># 创建用户</span><br><span class="line">[root@ansible httpd]# cat tasks/user.yml </span><br><span class="line">- name: add httpd user</span><br><span class="line">  user: name=&#123;&#123; httpd_user &#125;&#125; system=yes shel=/sbin/nologin home=/var/www uid=&#123;&#123; httpd_uid &#125;&#125; group=&#123;&#123; httpd_group &#125;&#125;</span><br><span class="line">[root@ansible htppd]# </span><br><span class="line"></span><br><span class="line"># yum install httpd</span><br><span class="line">[root@ansible httpd]# cat tasks/install_httpd.yml </span><br><span class="line">- name: install httpd</span><br><span class="line">  yum: name=httpd</span><br><span class="line">[root@ansible httpd]# </span><br><span class="line"></span><br><span class="line"># 拷贝配置文件</span><br><span class="line">#注意: 文件是放在files目录下,但src的路径无需写files目录名</span><br><span class="line">[root@ansible htppd]# cat tasks/config.yml</span><br><span class="line">- name: httpd config</span><br><span class="line">  copy: src=httpd.conf dest=/etc/httpd/conf backup=yes</span><br><span class="line">  notify: restart httpd</span><br><span class="line"> </span><br><span class="line"> # 准备测试文件</span><br><span class="line">[root@ansible htppd]# cat tasks/index.yml </span><br><span class="line">- name: copy index.html</span><br><span class="line">  copy: src=index.html dest=/var/www/html</span><br><span class="line">[root@ansible htppd]# </span><br><span class="line"></span><br><span class="line"># start httpd</span><br><span class="line">[root@ansible htppd]# cat tasks/service.yml </span><br><span class="line">- name: start httpd</span><br><span class="line">  service: name=httpd state=started enabled=yes</span><br><span class="line">[root@ansible htppd]# </span><br><span class="line"></span><br><span class="line"># 配置文件修改则重启httpd</span><br><span class="line">[root@ansible htppd]# cat handlers/main.yml </span><br><span class="line">---</span><br><span class="line"># handlers file for httpd</span><br><span class="line">- name: restart httpd</span><br><span class="line">  service: name=httpd state=restarted</span><br><span class="line">[root@ansible htppd]# </span><br><span class="line"></span><br><span class="line">#在files目录下准备两个文件</span><br><span class="line">[root@ansible data]# ll httpd/files</span><br><span class="line">total 16</span><br><span class="line">-rw-r--r-- 1 root root 11753 Mar  1 18:36 httpd.conf</span><br><span class="line">-rw-r--r-- 1 root root    23 Mar  1 21:10 index.html</span><br><span class="line"></span><br><span class="line"># 准备变量文件</span><br><span class="line">[root@ansible data]# cat httpd/vars/main.yml </span><br><span class="line">---</span><br><span class="line"># vars file for httpd</span><br><span class="line">httpd_group: apache</span><br><span class="line">httpd_gid: 88</span><br><span class="line">httpd_user: apache</span><br><span class="line">httpd_uid: 88</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line">#在playbook中调用角色</span><br><span class="line">[root@ansible data]# cat web_roles.yml </span><br><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line">  remote_user: root</span><br><span class="line">  roles:</span><br><span class="line">    - httpd</span><br><span class="line">    </span><br><span class="line">#运行playbook</span><br><span class="line">[root@ansible data]# ansible-playbook /data/web_roles.yml</span><br></pre></td></tr></table></figure><h4 id="实现Nginx角色"><a href="#实现Nginx角色" class="headerlink" title="实现Nginx角色"></a>实现Nginx角色</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"># 创建roles目录</span><br><span class="line">[root@ansible data]# ansible-galaxy init nginx</span><br><span class="line">- Role nginx was created successfully</span><br><span class="line">[root@ansible data]# ll</span><br><span class="line">total 12</span><br><span class="line">-rw-r--r--  1 root root  614 Mar  1 21:07 ansible.cfg</span><br><span class="line">-rw-r--r--  1 root root 1382 Mar  1 21:07 hosts</span><br><span class="line">drwxr-xr-x 10 root root  154 Mar  1 18:07 httpd</span><br><span class="line">drwxr-xr-x 10 root root  154 Mar  1 21:52 nginx</span><br><span class="line">-rw-r--r--  1 root root   63 Mar  1 21:14 web_roles.yml</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line"># 创建tasks文件</span><br><span class="line">[root@ansible data]# cat nginx/tasks/main.yml </span><br><span class="line">---</span><br><span class="line"># tasks file for nginx</span><br><span class="line">- include: install_nginx.yml</span><br><span class="line">- import_playbook: config.yml</span><br><span class="line">- include: index.yml</span><br><span class="line">- import_playbook: service.yml</span><br><span class="line">[root@ansible data]#</span><br><span class="line"></span><br><span class="line"># 安装nginx</span><br><span class="line">[root@ansible data]# cat nginx/tasks/install_nginx.yml</span><br><span class="line">---</span><br><span class="line">- name: install nginx</span><br><span class="line">  yum:</span><br><span class="line">    name: nginx</span><br><span class="line">    state: present</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line"># 配置文件</span><br><span class="line">[root@ansible data]# cat nginx/tasks/config.yml</span><br><span class="line">---</span><br><span class="line">- name: copy config</span><br><span class="line">  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf</span><br><span class="line">  notify: restart nginx</span><br><span class="line">  </span><br><span class="line"># 创建测试文件</span><br><span class="line">[root@ansible data]# cat nginx/tasks/index.yml</span><br><span class="line">---</span><br><span class="line">- name: copt index.html</span><br><span class="line">  copy: src=index.html dest=/usr/share/nginx/html/</span><br><span class="line"></span><br><span class="line"># 启动nginx</span><br><span class="line">[root@ansible data]# cat nginx/tasks/service.yml</span><br><span class="line">---</span><br><span class="line">- name: start nginx</span><br><span class="line">  service: name=nginx state=started enabled=yes</span><br><span class="line">  </span><br><span class="line">#创建handler文件</span><br><span class="line">[root@ansible data]# cat nginx/handlers/main.yml </span><br><span class="line">---</span><br><span class="line"># handlers file for nginx</span><br><span class="line">- name: restart nginx</span><br><span class="line">  service: naem=nginx state=restarted</span><br><span class="line">[root@ansible data]# ll</span><br><span class="line"></span><br><span class="line">#创建template文件</span><br><span class="line">[root@ansible data]# ll nginx/templates/</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 root root 2336 Mar  1 22:12 nginx.conf.j2</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 创建测试文件</span><br><span class="line">[root@ansible data]# ll nginx/files/</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 root root 23 Mar  1 22:14 index.html</span><br><span class="line">[root@ansible data]#</span><br><span class="line"></span><br><span class="line">#在playbook中调用角色</span><br><span class="line">[root@ansible data]# cat web_roles.yml </span><br><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line">  remote_user: root</span><br><span class="line">  roles:</span><br><span class="line">  #  - httpd</span><br><span class="line">    - nginx</span><br><span class="line">[root@ansible data]# </span><br><span class="line">#运行playbook</span><br><span class="line">[root@ansible data]# ansible-playbook web_roles.yml </span><br></pre></td></tr></table></figure><h4 id="实现MySql8角色"><a href="#实现MySql8角色" class="headerlink" title="实现MySql8角色"></a>实现MySql8角色</h4><ul><li>创建角色目录</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible data]# ansible-galaxy init mysql8</span><br><span class="line">[root@ansible data]# ll</span><br><span class="line">total 12</span><br><span class="line">-rw-r--r--  1 root root  614 Mar  1 21:07 ansible.cfg</span><br><span class="line">-rw-r--r--  1 root root 1382 Mar  1 21:07 hosts</span><br><span class="line">drwxr-xr-x 10 root root  154 Mar  1 18:07 httpd</span><br><span class="line">drwxr-xr-x 10 root root  154 Mar  1 22:55 mysql8</span><br><span class="line">drwxr-xr-x  8 root root  125 Mar  1 22:44 nginx</span><br><span class="line">-rw-r--r--  1 root root   75 Mar  1 22:38 web_roles.yml</span><br><span class="line">[root@ansible data]# </span><br></pre></td></tr></table></figure><ul><li>创建tasks yml文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"># 安装包</span><br><span class="line">[root@ansible data]# cat mysql8/tasks/install_package.yml</span><br><span class="line">---</span><br><span class="line">- name: install package</span><br><span class="line">  yum: name=&#123;&#123; item &#125;&#125; state=latest</span><br><span class="line">  loop:</span><br><span class="line">    - libaio</span><br><span class="line">    - numactl-libs</span><br><span class="line">    </span><br><span class="line"># add group</span><br><span class="line">[root@ansible data]# cat mysql8/tasks/group.yml</span><br><span class="line">---</span><br><span class="line">- name: add group</span><br><span class="line">  group: name=&#123;&#123; group &#125;&#125; gid=&#123;&#123; group_gid &#125;&#125;</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line"># add user</span><br><span class="line">[root@ansible data]# cat mysql8/tasks/user.yml</span><br><span class="line">---</span><br><span class="line">- name: add user</span><br><span class="line">  user: name=&#123;&#123; user &#125;&#125; uid=&#123;&#123; user_uid &#125;&#125; shell=/sbin/nologin group=&#123;&#123; group &#125;&#125; create_home=no system=yes home=/data/mysql</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line"># 准备my.cnf文件</span><br><span class="line">[root@ansible data]# cat mysql8/files/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">server-id=1</span><br><span class="line">log-bin</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line">log-error=/data/mysql/mysql.log</span><br><span class="line">pid-file=/data/mysql/mysql.pid</span><br><span class="line">[client]</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"># 准备mysql二进制包</span><br><span class="line">[root@ansible data]# ll mysql8/files/</span><br><span class="line">total 1176056</span><br><span class="line">-rw-r--r-- 1 root root        181 Mar  1 23:10 my.cnf</span><br><span class="line">-rw-r--r-- 1 root root 1204277208 Dec 18  2021 mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line"># 将mysql二进制包解压到远程主机</span><br><span class="line">[root@ansible data]# cat mysql8/tasks/unarchive.yml</span><br><span class="line">---</span><br><span class="line">- name: copy mysql tar host</span><br><span class="line">  # mysql_tar 为mysql二进制的压缩包名称</span><br><span class="line">  unarchive: src=&#123;&#123; mysql_tar &#125;&#125; dest=/usr/local/ owner=root group=root</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line"># 将远程主机解压出的二进制包创建软连接</span><br><span class="line">[root@ansible data]# cat mysql8/tasks/linkfile.yml</span><br><span class="line">---</span><br><span class="line">- name: create link</span><br><span class="line">  file: src=/usr/local/mysql-&#123;&#123; mysql_version &#125;&#125;-linux-glibc2.12-x86_64 dest=/usr/local/mysql state=link</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line"># 初始化数据库</span><br><span class="line">[root@ansible data]# cat mysql8/tasks/init_mysql_data.yml</span><br><span class="line">---</span><br><span class="line">- name: create datadir dir</span><br><span class="line">  file: path=/data/mysql state=directory owner=&#123;&#123; user &#125;&#125; group=&#123;&#123; group &#125;</span><br><span class="line">- name: init mysql data</span><br><span class="line">  shell: /usr/local/mysql/bin/mysqld --initialize-insecure --user=mysql --datadir=/data/mysql</span><br><span class="line">[root@ansible data]#</span><br><span class="line"></span><br><span class="line"># copy config.con</span><br><span class="line">[root@ansible data]# cat mysql8/tasks/config.yml</span><br><span class="line">---</span><br><span class="line">- name: copy my.cnf</span><br><span class="line">  copy: src=my.cnf dest=/etc/my.cnf</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line">[root@ansible data]# cat mysql8/tasks/script.yml</span><br><span class="line">---</span><br><span class="line">- name: service script</span><br><span class="line">  shell: /bin/cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line">[root@ansible data]# cat mysql8/tasks/path.yml</span><br><span class="line">---</span><br><span class="line">- name: path</span><br><span class="line">  copy: content=&#x27;PATH=/usr/local/mysql/bin:$PATH&#x27; dest=/etc/profile.d/mysql.sh</span><br><span class="line"></span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line">[root@ansible data]# cat mysql8/tasks/service.yml</span><br><span class="line">---</span><br><span class="line">- name: service</span><br><span class="line">  shell: chkconfig --add mysqld;/etc/init.d/mysqld start</span><br><span class="line">[root@ansible data]#</span><br><span class="line"></span><br><span class="line">[root@ansible data]# cat mysql8/tasks/main.yml </span><br><span class="line">---</span><br><span class="line"># tasks file for mysql8</span><br><span class="line">- include: install_package.yml</span><br><span class="line">- include: group.yml</span><br><span class="line">- include: user.yml</span><br><span class="line">- include: unarchive.yml</span><br><span class="line">- include: linkfile.yml</span><br><span class="line">- include: linkfile.yml</span><br><span class="line">- include: init_mysql_data.yml</span><br><span class="line">- include: config.yml</span><br><span class="line">- include: script.yml</span><br><span class="line">- include: path.yml</span><br><span class="line">- include: service.yml</span><br><span class="line">- include: secure.yml</span><br><span class="line"></span><br><span class="line"># 创建变量文件</span><br><span class="line">[root@ansible data]# cat mysql8/vars/main.yml </span><br><span class="line">---</span><br><span class="line"># vars file for mysql8</span><br><span class="line">group: mysql</span><br><span class="line">group_gid: 306</span><br><span class="line">user: mysql</span><br><span class="line">user_uid: 306</span><br><span class="line">mysql_tar: mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz</span><br><span class="line">mysql_version: 8.0.28</span><br><span class="line">mysql_root_password: 123456</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line"># 调用角色</span><br><span class="line">[root@ansible data]# cat web_roles.yml </span><br><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line">  remote_user: root</span><br><span class="line">  roles:</span><br><span class="line">    - mysql8</span><br><span class="line"></span><br><span class="line"># 运行</span><br><span class="line">[root@ansible data]# ansible-playbook web_roles.yml</span><br></pre></td></tr></table></figure><h4 id="实现Redis角色"><a href="#实现Redis角色" class="headerlink" title="实现Redis角色"></a>实现Redis角色</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"># 创建角色目录</span><br><span class="line">[root@ansible data]# ansible-galaxy init redis</span><br><span class="line">[root@ansible data]# tree redis/</span><br><span class="line">redis/</span><br><span class="line">├── defaults</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── meta</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── README.md</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">├── tests</span><br><span class="line">│   ├── inventory</span><br><span class="line">│   └── test.yml</span><br><span class="line">└── vars</span><br><span class="line">    └── main.yml</span><br><span class="line">    </span><br><span class="line"># 创建tasks文件</span><br><span class="line">[root@ansible data]# cat redis/tasks/main.yml </span><br><span class="line">---</span><br><span class="line"># tasks file for redis</span><br><span class="line">- name: Installed Redis Server</span><br><span class="line">  yum:</span><br><span class="line">    name: redis</span><br><span class="line">    state: present</span><br><span class="line">- name: Configure Redis Server</span><br><span class="line">  template:</span><br><span class="line">    src: redis.conf.j2</span><br><span class="line">    dest: /etc/redis.conf</span><br><span class="line">    owner: redis</span><br><span class="line">    group: root</span><br><span class="line">    mode: &#x27;0640&#x27;</span><br><span class="line">  notify: Restart Redis Server</span><br><span class="line">- name: Start Redis Server</span><br><span class="line">  systemd:</span><br><span class="line">    name: redis</span><br><span class="line">    state: started</span><br><span class="line">    enabled: yes</span><br><span class="line">[root@ansible data]# </span><br><span class="line"></span><br><span class="line"># 创建handlers文件</span><br><span class="line">[root@ansible data]# cat redis/handlers/main.yml </span><br><span class="line">---</span><br><span class="line"># handlers file for redis</span><br><span class="line">- name: Restart Redis Server</span><br><span class="line">  systemd:</span><br><span class="line">    name: redis</span><br><span class="line">    state: restarted</span><br><span class="line">[root@ansible data]# </span><br><span class="line"># 在/data/redis/templates目录下准备如下文件</span><br><span class="line">[root@ansible data]# ll redis/templates/</span><br><span class="line">total 48</span><br><span class="line">-rw-r----- 1 root root 46729 Mar  2 02:51 redis.conf.j2</span><br><span class="line">[root@ansible data]#</span><br><span class="line"></span><br><span class="line"># 调用角色</span><br><span class="line"># 调用角色</span><br><span class="line">[root@ansible data]# cat web_roles.yml </span><br><span class="line">---</span><br><span class="line">- hosts: centos7</span><br><span class="line">  remote_user: root</span><br><span class="line">  roles:</span><br><span class="line">    - redis</span><br><span class="line"></span><br><span class="line"># 运行</span><br><span class="line">[root@ansible data]# ansible-playbook web_roles.yml</span><br></pre></td></tr></table></figure><h2 id="Ansible推荐学习资料"><a href="#Ansible推荐学习资料" class="headerlink" title="Ansible推荐学习资料"></a>Ansible推荐学习资料</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://galaxy.ansible.com</span><br><span class="line">https://galaxy.ansible.com/explore#/</span><br><span class="line">http://github.com/</span><br><span class="line">http://ansible.com.cn/</span><br><span class="line">https://github.com/ansible/ansible</span><br><span class="line">https://github.com/ansible/ansible-examples</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ansible </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>运维自动化工具Ansible(一)</title>
      <link href="/2023/02/21/Ansible/"/>
      <url>/2023/02/21/Ansible/</url>
      
        <content type="html"><![CDATA[<h1 id="Ansible介绍和架构"><a href="#Ansible介绍和架构" class="headerlink" title="Ansible介绍和架构"></a>Ansible介绍和架构</h1><h2 id="Ansible发展史"><a href="#Ansible发展史" class="headerlink" title="Ansible发展史"></a>Ansible发展史</h2><p>Ansible 的名称来自科幻小说《安德的游戏》中跨越时空的即时通信工具，使用它可以在相距数光年的距离，远程实时控制前线的舰队战斗<br>2012-03-09，发布0.0.1版，2015-10-17，Red Hat宣布1.5亿美元收购<br>官网：<a href="https://www.ansible.com/">https://www.ansible.com/</a><br>官方文档：<a href="https://docs.ansible.com/">https://docs.ansible.com/</a></p><h2 id="Ansible-功能"><a href="#Ansible-功能" class="headerlink" title="Ansible 功能"></a>Ansible 功能</h2><ul><li>批量执行远程命令,可以对远程的多台主机同时进行命令的执行</li><li>批量安装和配置软件服务，可以对远程的多台主机进行自动化的方式配置和管理各种服务</li><li>编排高级的企业级复杂的IT架构任务, Ansible的Playbook和role可以轻松实现大型的IT复杂架构</li><li>提供自动化运维工具的开发API, 有很多运维工具,如jumpserver就是基于 ansible 实现自动化管工功能</li></ul><h2 id="Ansible-特点"><a href="#Ansible-特点" class="headerlink" title="Ansible 特点"></a>Ansible 特点</h2><p><strong>优点</strong></p><ul><li>功能丰富的模块：提供了多达数千个的各种功能的模块,完成特定任务只需调用特定模块即可，还</li><li>支持自定义模块，可使用任何编程语言写模块</li><li>使用和部署简单: 无需安装专用代理软件,基于python和SSH(默认已安装)实现</li><li>安全: 基于OpenSSH实现安全通讯无需专用协议</li><li>幂等性：一个任务执行1遍和执行n遍效果一样，不因重复执行带来意外情况,此特性和模块有关</li><li>支持playbook编排任务，YAML格式，编排任务，支持丰富的数据结构</li><li>较强大的多层解决方案 Role</li><li>Python语言实现, 基于Paramiko（python对ssh的实现），PyYAML，Jinja2（模板语言）三个关键模块</li><li>属于红帽(IBM)公司产品,背景强大,未来发展前景光明</li></ul><p><strong>缺点</strong></p><ul><li>如果管理的主机较多时,执行效率不如saltstack高</li><li>当前还不支持像MySQL数据库一样的事务回滚</li></ul><h2 id="Ansible-架构"><a href="#Ansible-架构" class="headerlink" title="Ansible 架构"></a>Ansible 架构</h2><h3 id="Ansible-组成"><a href="#Ansible-组成" class="headerlink" title="Ansible 组成"></a>Ansible 组成</h3><p>组合INVENTORY、API、MODULES、PLUGINS的绿框，为ansible命令工具，其为核心执行工具</p><p><img src="/../image.assets/1676984392121.png" alt="1676984392121"></p><ul><li>INVENTORY：Ansible管理主机的清单文件,默认为 &#x2F;etc&#x2F;ansible&#x2F;hosts</li><li>MODULES：Ansible执行命令的功能模块，多数为内置核心模块，也可自定义</li><li>PLUGINS：模块功能的补充，如连接类型插件、循环插件、变量插件、过滤插件等，该功能不常用</li><li>API：供第三方程序调用的应用程序编程接口</li></ul><h3 id="Ansible-命令执行来源"><a href="#Ansible-命令执行来源" class="headerlink" title="Ansible 命令执行来源"></a>Ansible 命令执行来源</h3><ul><li>USER 普通用户，即SYSTEM ADMINISTRATOR</li><li>PLAYBOOKS：任务剧本（任务集），编排定义Ansible任务集的配置文件，由Ansible顺序依次执行，通常是JSON格式的YML文件</li><li>CMDB（配置管理数据库） API 调用</li><li>PUBLIC&#x2F;PRIVATE CLOUD API调用</li><li>USER-&gt; Ansible Playbook -&gt; Ansibile</li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>执行ansible的主机一般称为管理端, 主控端，中控，master或堡垒机</li><li>主控端Python版本需要2.6或以上</li><li>被控端Python版本小于2.4，需要安装python-simplejson</li><li>被控端如开启SELinux需要安装libselinux-python</li><li>windows 不能做为主控端,只能做为被控制端</li></ul><h1 id="Ansible-安装和常见模块"><a href="#Ansible-安装和常见模块" class="headerlink" title="Ansible 安装和常见模块"></a>Ansible 安装和常见模块</h1><h2 id="Ansible-安装"><a href="#Ansible-安装" class="headerlink" title="Ansible 安装"></a>Ansible 安装</h2><p>ansible的安装方法有多种<br>官方文档</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html</span><br><span class="line">https://docs.ansible.com/ansible/latest/installation_guide/index.html</span><br></pre></td></tr></table></figure><p>下载</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://releases.ansible.com/ansible/</span><br></pre></td></tr></table></figure><p>pip 下载</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://pypi.org/project/ansible/</span><br></pre></td></tr></table></figure><h3 id="包安装方式"><a href="#包安装方式" class="headerlink" title="包安装方式"></a>包安装方式</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#CentOS 的EPEL源的rpm包安装</span><br><span class="line">[root@centos ~]#yum install ansible</span><br><span class="line">#ubuntu 安装</span><br><span class="line">[root@ubuntu ~]#apt -y install ansible</span><br></pre></td></tr></table></figure><h3 id="pip安装"><a href="#pip安装" class="headerlink" title="pip安装"></a>pip安装</h3><p>pip 是安装Python包的管理器，类似 yum<br>范例: 在rocky8上通过pip3安装ansible</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 ~]#yum -y install python39 rust</span><br><span class="line">[root@rocky8 ~]#pip3 install ansible</span><br><span class="line">[root@rocky8 ~]#ansible --version</span><br><span class="line">ansible [core 2.12.6]</span><br><span class="line">config file = None</span><br><span class="line">configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,</span><br><span class="line">&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">ansible python module location = /usr/lib/python3.9/site-packages/ansible</span><br><span class="line">ansible collection location =</span><br><span class="line">/root/.ansible/collections:/usr/share/ansible/collections</span><br><span class="line">executable location = /usr/bin/ansible</span><br><span class="line">python version = 3.9.6 (default, Nov 9 2021, 13:31:27) [GCC 8.5.0 20210514</span><br><span class="line">(Red Hat 8.5.0-3)]</span><br><span class="line">jinja version = 3.1.2</span><br><span class="line">libyaml = True</span><br><span class="line">[root@rocky8 ~]#ansible-doc -l 2&gt; /dev/null|wc -l</span><br><span class="line">6763</span><br></pre></td></tr></table></figure><p>范例: 安装python3.8 支持ansible2.12以上版本</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 ~]#yum -y install python38 python38-pip</span><br><span class="line">[root@rocky8 ~]#pip3 install --upgrade pip -i https://pypi.douban.com/simple</span><br><span class="line">[root@rocky8 ~]#pip3 install ansible -i https://pypi.douban.com/simple/</span><br><span class="line">[root@rocky8 ~]#ansible --version</span><br><span class="line">ansible [core 2.12.6]</span><br><span class="line">config file = None</span><br><span class="line">configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,</span><br><span class="line">&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">ansible python module location = /usr/local/lib/python3.8/site-</span><br><span class="line">packages/ansible</span><br><span class="line">ansible collection location =</span><br><span class="line">/root/.ansible/collections:/usr/share/ansible/collections</span><br><span class="line">executable location = /usr/local/bin/ansible</span><br><span class="line">python version = 3.8.8 (default, Nov 9 2021, 13:31:34) [GCC 8.5.0 20210514</span><br><span class="line">(Red Hat 8.5.0-3)]</span><br><span class="line">jinja version = 3.1.2</span><br><span class="line">libyaml = True</span><br></pre></td></tr></table></figure><p>范例: 安装默认的python3.6版本会有警报提示</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 ~]#yum -y install python3</span><br><span class="line">[root@rocky8 ~]#pip3 install --upgrade pip -i https://pypi.douban.com/simple</span><br><span class="line">[root@rocky8 ~]#pip3 install ansible -i https://pypi.douban.com/simple/</span><br><span class="line">[root@rocky8 ~]#ansible --version</span><br><span class="line">[DEPRECATION WARNING]: Ansible will require Python 3.8 or newer on the</span><br><span class="line">controller starting with Ansible 2.12. Current version: 3.6.8 (default, Nov</span><br><span class="line">9 2021, 14:44:26) [GCC 8.5.0 20210514 (Red Hat 8.5.0-3)]. This feature will be</span><br><span class="line">removed from ansible-core in version 2.12. Deprecation warnings</span><br><span class="line">can be disabled by setting deprecation_warnings=False in ansible.cfg.</span><br><span class="line">/usr/local/lib/python3.6/site-packages/ansible/parsing/vault/__init__.py:44:</span><br><span class="line">CryptographyDeprecationWarning: Python 3.6 is no longer supported by the Python</span><br><span class="line">core team. Therefore, support for it is deprecated in cryptography and will be</span><br><span class="line">removed in a future release.</span><br><span class="line">from cryptography.exceptions import InvalidSignature</span><br><span class="line">ansible [core 2.11.12]</span><br><span class="line">config file = None</span><br><span class="line">configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,</span><br><span class="line">&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">ansible python module location = /usr/local/lib/python3.6/site-</span><br><span class="line">packages/ansible</span><br><span class="line">ansible collection location =</span><br><span class="line">/root/.ansible/collections:/usr/share/ansible/collections</span><br><span class="line">executable location = /usr/local/bin/ansible</span><br><span class="line">python version = 3.6.8 (default, Nov 9 2021, 14:44:26) [GCC 8.5.0 20210514</span><br><span class="line">(Red Hat 8.5.0-3)]</span><br><span class="line">jinja version = 3.0.3</span><br><span class="line">libyaml = True</span><br><span class="line">[root@rocky8 ~]#ansible-doc -l 2&gt; /dev/null|wc -l</span><br><span class="line">6141</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1676985923345.png" alt="1676985923345"></p><p>范例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#yum -y install python-pip</span><br><span class="line">[root@centos7 ~]#pip install --upgrade pip</span><br><span class="line">[root@centos7 ~]#pip install ansible --upgrade</span><br><span class="line">[root@centos7 ~]#ansible --version</span><br><span class="line">/usr/lib64/python2.7/site-packages/cryptography/__init__.py:39:</span><br><span class="line">CryptographyDeprecationWarning: Python 2 is no longer supported by the Python</span><br><span class="line">core team. Support for it is now deprecated in cryptography, and will be removed</span><br><span class="line">in a future release.</span><br><span class="line">CryptographyDeprecationWarning,</span><br><span class="line">ansible 2.9.12</span><br><span class="line">config file = None</span><br><span class="line">configured module search path = [u&#x27;/root/.ansible/plugins/modules&#x27;,</span><br><span class="line">u&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">ansible python module location = /usr/lib/python2.7/site-packages/ansible</span><br><span class="line">executable location = /usr/bin/ansible</span><br><span class="line">python version = 2.7.5 (default, Apr 2 2020, 13:16:51) [GCC 4.8.5 20150623</span><br><span class="line">(Red Hat 4.8.5-39)]</span><br><span class="line">[root@centos7 ~]#ll /opt/etc/ansible/ansible.cfg</span><br><span class="line">-rw-r--r-- 1 wang bin 19980 Aug 11 21:34 /opt/etc/ansible/ansible.cfg</span><br></pre></td></tr></table></figure><h3 id="确认安装"><a href="#确认安装" class="headerlink" title="确认安装"></a>确认安装</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#ansible --version</span><br><span class="line">ansible 2.9.5</span><br><span class="line">config file = /etc/ansible/ansible.cfg</span><br><span class="line">configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,</span><br><span class="line">&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">ansible python module location = /usr/lib/python3.6/site-packages/ansible</span><br><span class="line">executable location = /usr/bin/ansible</span><br><span class="line">python version = 3.6.8 (default, Nov 21 2019, 19:31:34) [GCC 8.3.1 20190507</span><br><span class="line">(Red Hat 8.3.1-4)]</span><br></pre></td></tr></table></figure><h2 id="Ansible-相关文件"><a href="#Ansible-相关文件" class="headerlink" title="Ansible 相关文件"></a>Ansible 相关文件</h2><h3 id="Ansible-配置文件列表"><a href="#Ansible-配置文件列表" class="headerlink" title="Ansible 配置文件列表"></a>Ansible 配置文件列表</h3><ul><li>&#x2F;etc&#x2F;ansible&#x2F;ansible.cfg 主配置文件，配置ansible工作特性,也可以在项目的目录中创建此文件,当前目录下如果也有ansible.cfg,则此文件优先生效,建议每个项目目录下,创建独有的ansible.cfg文<br>件</li><li>&#x2F;etc&#x2F;ansible&#x2F;hosts 主机清单</li><li>&#x2F;etc&#x2F;ansible&#x2F;roles&#x2F; 存放角色的目录</li></ul><h3 id="Ansible-主配置文件"><a href="#Ansible-主配置文件" class="headerlink" title="Ansible 主配置文件"></a>Ansible 主配置文件</h3><p>Ansible 的配置文件可以放在多个不同地方,优先级从高到低顺序如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ANSIBLE_CONFIG #环境变量,目录下的文件必须存在才能生效</span><br><span class="line">./ansible.cfg #当前目录下的ansible.cfg,一般一个项目对应一个专用配置文件,推荐使用</span><br><span class="line">~/.ansible.cfg #当前用户家目录下的.ansible.cfg</span><br><span class="line">/etc/ansible/ansible.cfg #系统默认配置文件</span><br></pre></td></tr></table></figure><p>Ansible 的默认配置文件 &#x2F;etc&#x2F;ansible&#x2F;ansible.cfg ,其中大部分的配置内容无需进行修改</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[defaults]</span><br><span class="line">#inventory = /etc/ansible/hosts #主机列表配置文件</span><br><span class="line">#library = /usr/share/my_modules/ #库文件存放目录</span><br><span class="line">#remote_tmp = $HOME/.ansible/tmp #临时py命令文件存放在远程主机目录</span><br><span class="line">#local_tmp = $HOME/.ansible/tmp #本机的临时命令执行目录</span><br><span class="line">#forks = 5 #默认并发数</span><br><span class="line">#sudo_user = root #默认sudo 用户</span><br><span class="line">#ask_sudo_pass = True #每次执行ansible命令是否询问ssh密码</span><br><span class="line">#ask_pass = True</span><br><span class="line">#remote_port = 22</span><br><span class="line">#host_key_checking = False #检查对应服务器的host_key，建议取消此行注释,实现第一次连</span><br><span class="line">接自动信任目标主机</span><br><span class="line">#log_path=/var/log/ansible.log #日志文件，建议启用</span><br><span class="line">#module_name = command #默认模块，可以修改为shell模块</span><br><span class="line">[privilege_escalation] #普通用户提权配置</span><br><span class="line">#become=True</span><br><span class="line">#become_method=sudo</span><br><span class="line">#become_user=root</span><br><span class="line">#become_ask_pass=False</span><br></pre></td></tr></table></figure><p>范例: 通过环境变量ANSIBLE_CONFIG指定ansible配置文件路径</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 ~]#cd /data/ansible/</span><br><span class="line">[root@rocky8 ansible]#cat ansbile.cfg</span><br><span class="line">[defaults]</span><br><span class="line">inventory = ./hosts</span><br><span class="line">[root@rocky8 ansible]#cat hosts</span><br><span class="line">[ubuntu]</span><br><span class="line">10.0.0.100</span><br><span class="line">[centos]</span><br><span class="line">10.0.0.7</span><br><span class="line">10.0.0.8</span><br><span class="line">#定义变量</span><br><span class="line">[root@rocky8 ansible]#export ANSIBLE_CONFIG=./ansbile.cfg</span><br><span class="line">[root@rocky8 ansible]#ansible --version</span><br><span class="line">ansible [core 2.12.6]</span><br><span class="line">config file = /data/ansible/ansbile.cfg</span><br><span class="line">configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,</span><br><span class="line">&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">ansible python module location = /usr/lib/python3.9/site-packages/ansible</span><br><span class="line">ansible collection location =</span><br><span class="line">/root/.ansible/collections:/usr/share/ansible/collections</span><br><span class="line">executable location = /usr/bin/ansible</span><br><span class="line"></span><br><span class="line">python version = 3.9.6 (default, Nov 9 2021, 13:31:27) [GCC 8.5.0 20210514</span><br><span class="line">(Red Hat 8.5.0-3)]</span><br><span class="line">jinja version = 3.1.2</span><br><span class="line">libyaml = True</span><br><span class="line">[root@rocky8 ansible]#ansible --list-hosts all</span><br><span class="line">hosts (3):</span><br><span class="line">10.0.0.100</span><br><span class="line">10.0.0.7</span><br><span class="line">10.0.0.8</span><br></pre></td></tr></table></figure><p>范例: 创建ansible 指定项目专用的配置文件</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@ubuntu2004 ~]#ansible --version</span><br><span class="line">ansible 2.9.6</span><br><span class="line">config file = /etc/ansible/ansible.cfg</span><br><span class="line">configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,</span><br><span class="line">&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">ansible python module location = /usr/lib/python3/dist-packages/ansible</span><br><span class="line">executable location = /usr/bin/ansible</span><br><span class="line">python version = 3.8.10 (default, Mar 15 2022, 12:22:08) [GCC 9.4.0]</span><br><span class="line">[root@ubuntu2004 ~]#mkdir /data/ansible -p</span><br><span class="line">[root@ubuntu2004 ~]#cd /data/ansible/</span><br><span class="line">[root@ubuntu2004 ansible]#touch ansible.cfg</span><br><span class="line">[root@ubuntu2004 ansible]#ansible --version</span><br><span class="line">ansible 2.9.6</span><br><span class="line">config file = /data/ansible/ansible.cfg</span><br><span class="line">configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,</span><br><span class="line">&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">ansible python module location = /usr/lib/python3/dist-packages/ansible</span><br><span class="line">executable location = /usr/bin/ansible</span><br><span class="line">python version = 3.8.10 (default, Mar 15 2022, 12:22:08) [GCC 9.4.0]</span><br><span class="line">[root@ubuntu2004 ansible]#cd</span><br><span class="line">[root@ubuntu2004 ~]#ansible --version</span><br><span class="line">ansible 2.9.6</span><br><span class="line">config file = /etc/ansible/ansible.cfg</span><br><span class="line">configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,</span><br><span class="line">&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">ansible python module location = /usr/lib/python3/dist-packages/ansible</span><br><span class="line">executable location = /usr/bin/ansible</span><br><span class="line">python version = 3.8.10 (default, Mar 15 2022, 12:22:08) [GCC 9.4.0]</span><br></pre></td></tr></table></figure><p>范例: 当前目录下的ansible的配置文件优先生效</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#ansible --version</span><br><span class="line">ansible 2.9.17</span><br><span class="line">config file = /etc/ansible/ansible.cfg</span><br><span class="line">configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,</span><br><span class="line">&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">ansible python module location = /usr/lib/python3.6/site-packages/ansible</span><br><span class="line">executable location = /usr/bin/ansible</span><br><span class="line">python version = 3.6.8 (default, Apr 16 2020, 01:36:27) [GCC 8.3.1 20191121</span><br><span class="line">(Red Hat 8.3.1-5)]</span><br><span class="line">[root@ansible ~]#cp /etc/ansible/ansible.cfg .</span><br><span class="line"></span><br><span class="line">[root@ansible ~]#ansible --version</span><br><span class="line">ansible 2.9.17</span><br><span class="line">config file = /root/ansible.cfg #注意配置文件路径</span><br><span class="line">configured module search path = [&#x27;/root/.ansible/plugins/modules&#x27;,</span><br><span class="line">&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class="line">ansible python module location = /usr/lib/python3.6/site-packages/ansible</span><br><span class="line">executable location = /usr/bin/ansible</span><br><span class="line">python version = 3.6.8 (default, Apr 16 2020, 01:36:27) [GCC 8.3.1 20191121</span><br><span class="line">(Red Hat 8.3.1-5)]</span><br><span class="line">[root@ansible ~]#</span><br></pre></td></tr></table></figure><h3 id="Inventory-主机清单文件"><a href="#Inventory-主机清单文件" class="headerlink" title="Inventory 主机清单文件"></a>Inventory 主机清单文件</h3><p>ansible的主要功用在于批量主机操作，为了便捷地使用其中的部分主机，可以在inventory 主机清单文件中将其分组组织<br>默认的inventory file为 &#x2F;etc&#x2F;ansible&#x2F;hosts<br>inventory file可以有多个，且也可以通过Dynamic Inventory来动态生成<br>注意:</p><ul><li>生产建议在每个项目目录下创建项目独立的hosts文件</li><li>通过项目目录下的ansible.cfg文件中的 inventory &#x3D; .&#x2F;hosts实现</li></ul><p>官方文档:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html</span><br></pre></td></tr></table></figure><p><strong>主机清单文件格式</strong><br>inventory文件遵循INI文件风格，中括号中的字符为组名。可以将同一个主机同时归并到多个不同的组中,此外，当如若目标主机使用了非默认的SSH端口，还可以在主机名称之后使用冒号加端口号来标明,如果主机名称遵循相似的命名模式，还可以使用列表的方式标识各主机<br><strong>Inventory 参数说明</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ansible_ssh_host #将要连接的远程主机名.与你想要设定的主机的别名不同的话,可通过此变量设置.</span><br><span class="line">ansible_ssh_port #ssh端口号.如果不是默认的端口号,通过此变量设置.这种可以使用 ip:端口</span><br><span class="line">192.168.1.100:2222</span><br><span class="line">ansible_ssh_user #默认的 ssh 用户名</span><br><span class="line">ansible_ssh_pass #ssh 密码(这种方式并不安全,我们强烈建议使用 --ask-pass 或 SSH 密钥)</span><br><span class="line">ansible_sudo_pass #sudo 密码(这种方式并不安全,我们强烈建议使用 --ask-sudo-pass)</span><br><span class="line">ansible_sudo_exe (new in version 1.8) #sudo 命令路径(适用于1.8及以上版本)</span><br><span class="line">ansible_connection #与主机的连接类型.比如:local, ssh 或者 paramiko. Ansible 1.2 以前默认使用 paramiko.1.2 以后默认使用 &#x27;smart&#x27;,&#x27;smart&#x27; 方式会根据是否支持 ControlPersist,来判断&#x27;ssh&#x27; 方式是否可行.</span><br><span class="line">ansible_ssh_private_key_file #ssh 使用的私钥文件.适用于有多个密钥,而你不想使用 SSH 代理的情况.</span><br><span class="line">ansible_shell_type #目标系统的shell类型.默认情况下,命令的执行使用 &#x27;sh&#x27; 语法,可设置为&#x27;csh&#x27; 或 &#x27;fish&#x27;.</span><br><span class="line">ansible_python_interpreter #目标主机的 python 路径.适用于的情况: 系统中有多个 Python,或者命令路径不是&quot;/usr/bin/python&quot;,比如 \*BSD, 或者 /usr/bin/python 不是 2.X 版本的Python.之所以不使用 &quot;/usr/bin/env&quot; 机制,因为这要求远程用户的路径设置正确,且要求 &quot;python&quot;可执行程序名不可为 python以外的名字(实际有可能名为python26).与ansible_python_interpreter 的工作方式相同,可设定如 ruby 或 perl 的路径....</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ntp.wang.org</span><br><span class="line">[webservers]</span><br><span class="line">www1.wang.org:2222</span><br><span class="line">www2.wang.org</span><br><span class="line">[dbservers]</span><br><span class="line">db1.wang.org</span><br><span class="line">db2.wang.org</span><br><span class="line">db3.wang.org</span><br><span class="line">#或者</span><br><span class="line">db[1:3].wang.org</span><br></pre></td></tr></table></figure><p>范例: 组嵌套</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[webservers]</span><br><span class="line">www[1:100].example.com</span><br><span class="line">[dbservers]</span><br><span class="line">db-[a:f].example.com</span><br><span class="line">[appservers]</span><br><span class="line">10.0.0.[1:100]</span><br><span class="line">#定义testsrvs组中包括两个其它分组,实现组嵌套</span><br><span class="line">[testsrvs:children]</span><br><span class="line">webservers</span><br><span class="line">dbservers</span><br></pre></td></tr></table></figure><p>范例: 基于用户名和密码的ssh连接主机清单</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[test]</span><br><span class="line">10.0.0.8 ansible_connection=local #指定本地连接,无需ssh配置</span><br><span class="line"></span><br><span class="line">#每个主机分别指定用户和密码,ansible_connection=ssh 需要StrictHostKeyChecking no 或者host_key_checking = False</span><br><span class="line">10.0.0.7 ansible_connection=ssh ansible_ssh_port=2222 ansible_ssh_user=wangansible_ssh_password=123456</span><br><span class="line">10.0.0.6 ansible_ssh_user=root ansible_ssh_password=123456</span><br><span class="line">#对每个分组的所有主机统一定义用户和密码,执行ansible命令时显示别名,如web01</span><br><span class="line">[websrvs]</span><br><span class="line">web01 ansible_ssh_host=10.0.0.101</span><br><span class="line">web02 ansible_ssh_host=10.0.0.102</span><br><span class="line">[websrvs:vars]</span><br><span class="line">ansible_ssh_password=magedu</span><br><span class="line">some_host ansible_ssh_port=2222 ansible_ssh_user=manager</span><br><span class="line">aws_host ansible_ssh_private_key_file=/home/example/.ssh/aws.pem</span><br><span class="line">freebsd_host ansible_python_interpreter=/usr/local/bin/python</span><br><span class="line">ruby_module_host ansible_ruby_interpreter=/usr/bin/ruby.1.9.3</span><br></pre></td></tr></table></figure><h2 id="Ansible相关工具"><a href="#Ansible相关工具" class="headerlink" title="Ansible相关工具"></a>Ansible相关工具</h2><ul><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible 主程序，临时命令执行工具</p></li><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible-doc 查看配置文档，模块功能查看工具,相当于man</p></li><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible-playbook 定制自动化任务，编排剧本工具,相当于脚本</p></li><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible-pull 远程执行命令的工具</p></li><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible-vault 文件加密工具</p></li><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible-console 基于Console界面与用户交互的执行工具</p></li><li><p>&#x2F;usr&#x2F;bin&#x2F;ansible-galaxy 下载&#x2F;上传优秀代码或Roles模块的官网平台</p></li></ul><p><strong>利用ansible实现管理的主要方式：</strong></p><ul><li><p>Ansible Ad-Hoc 即利用ansible命令，主要用于临时命令使用场景</p></li><li><p>Ansible playbook 主要用于长期规划好的，大型项目的场景，需要有前期的规划过程</p></li></ul><p><strong>ansible 使用前准备</strong><br>ansible 相关工具大多数是通过ssh协议，实现对远程主机的配置管理、应用部署、任务执行等功能<br>建议：使用此工具前，先配置ansible主控端能基于密钥认证的方式联系各个被管理节点<br>范例：利用sshpass批量实现基于key验证脚本1</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#vim /etc/ssh/ssh_config</span><br><span class="line">#修改下面一行</span><br><span class="line">StrictHostKeyChecking no</span><br><span class="line">[root@centos8 ~]#cat hosts.list</span><br><span class="line">192.168.32.178</span><br><span class="line">192.168.32.179</span><br><span class="line">[root@centos8 ~]#vim push_ssh_key.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">rpm -ql shpass &amp;&gt; /dev/null || yum -y install sshpass</span><br><span class="line">[ -f /root/.ssh/id_rsa ] || ssh-keygen -f /root/.ssh/id_rsa -P &#x27;&#x27;</span><br><span class="line">export SSHPASS=123456</span><br><span class="line">while read IP;do</span><br><span class="line">sshpass -e ssh-copy-id -o StrictHostKeyChecking=no $IP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">done &lt; hosts.list</span><br></pre></td></tr></table></figure><p>范例: 实现基于key验证的脚本2</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#cat ssh_key.sh</span><br><span class="line"></span><br><span class="line">#!/bin/bash</span><br><span class="line">PLIST=&quot;</span><br><span class="line">192.168.32.178</span><br><span class="line">192.168.32.179&quot;</span><br><span class="line">rpm -q sshpass &amp;&gt; /dev/null || yum -y install sshpass</span><br><span class="line">[ -f /root/.ssh/id_rsa ] || ssh-keygen -f /root/.ssh/id_rsa -P &#x27;&#x27;</span><br><span class="line">export SSHPASS=123456</span><br><span class="line">for IP in $IPLIST;do</span><br><span class="line">       &#123; sshpass -e ssh-copy-id -o StrictHostKeyChecking=no $IP; &#125; &amp;</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line">wait</span><br></pre></td></tr></table></figure><h3 id="ansible-doc"><a href="#ansible-doc" class="headerlink" title="ansible-doc"></a>ansible-doc</h3><p>此工具用来显示模块帮助,相当于man<br>格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ansible-doc [options] [module...]</span><br><span class="line">-l, --list #列出可用模块</span><br><span class="line">-s, --snippet #显示指定模块的playbook片段</span><br></pre></td></tr></table></figure><p>范例: 查看帮助</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky ~]# ansible-doc --help</span><br><span class="line">usage: ansible-doc [-h] [--version] [-v] [-M MODULE_PATH] [--playbook-dir BASEDIR]</span><br><span class="line">                   [-t &#123;become,cache,callback,cliconf,connection,httpapi,inventory,lookup,netconf,shell,vars,module,strategy,role,keyword&#125;]</span><br><span class="line">                   [-j] [-r ROLES_PATH] [-e ENTRY_POINT | -s | -F | -l | --metadata-dump] [--no-fail-on-errors]</span><br><span class="line">                   [plugin ...]</span><br><span class="line"></span><br><span class="line">plugin documentation tool</span><br><span class="line"></span><br><span class="line">positional arguments:</span><br><span class="line">  plugin                Plugin</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#列出所有模块</span><br><span class="line">ansible-doc -l</span><br><span class="line">#查看指定模块帮助用法</span><br><span class="line">ansible-doc ping</span><br><span class="line">#查看指定模块帮助用法</span><br><span class="line">ansible-doc -s ping</span><br></pre></td></tr></table></figure><p>范例: 查看指定的插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky ~]# ansible-doc -t connection -l</span><br><span class="line">local        execute on controller                                                                                                 </span><br><span class="line">paramiko_ssh Run tasks via python ssh (paramiko)                                                                                   </span><br><span class="line">psrp         Run tasks over Microsoft PowerShell Remoting Protocol                                                                 </span><br><span class="line">ssh          connect via SSH client binary                                                                                         </span><br><span class="line">winrm        Run tasks over Microsoft&#x27;s WinRM                                                                                      </span><br><span class="line">[root@rocky ~]# </span><br><span class="line">[root@rocky ~]# ansible-doc -t lookup -l</span><br><span class="line">config              Lookup current Ansible configuration values                                                                    </span><br><span class="line">csvfile             read data from a TSV or CSV file                                                                               </span><br><span class="line">dict                returns key/value pair items from dictionaries                                                                 </span><br><span class="line">env                 Read the value of environment variables                                                                        </span><br><span class="line">file                read file contents                                                                                             </span><br><span class="line">fileglob            list files matching a pattern                                                                                  </span><br><span class="line">first_found         return first file found from list                                                                              </span><br><span class="line">indexed_items       rewrites lists to return &#x27;indexed items&#x27;                                                                       </span><br><span class="line">ini                 read data from an ini file                                                                                     </span><br><span class="line">inventory_hostnames list of inventory hosts matching a host pattern                                                                </span><br><span class="line">items               list of items                                                                                                  </span><br><span class="line">lines               read lines from command                                                                                        </span><br><span class="line">list                simply returns what it is given                                                                                </span><br><span class="line">nested              composes a list with nested elements of other lists                                                            </span><br><span class="line">password            retrieve or generate a random password, stored in a file                                                       </span><br><span class="line">pipe                read output from a command                                                                                     </span><br><span class="line">random_choice       return random element from list                                                                                </span><br><span class="line">sequence            generate a list based on a number sequence                                                                     </span><br><span class="line">subelements         traverse nested key from a list of dictionaries                                                                </span><br><span class="line">template            retrieve contents of file after templating with Jinja2                                                         </span><br><span class="line">together            merges lists into synchronized list                                                                            </span><br><span class="line">unvault             read vaulted file(s) contents                                                                                  </span><br><span class="line">url                 return contents from URL                                                                                       </span><br><span class="line">varnames            Lookup matching variable names                                                                                 </span><br><span class="line">vars                Lookup templated value of variables                                                                            </span><br><span class="line">[root@rocky ~]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="ansible"><a href="#ansible" class="headerlink" title="ansible"></a>ansible</h3><h4 id="Ansible-Ad-Hoc-介绍"><a href="#Ansible-Ad-Hoc-介绍" class="headerlink" title="Ansible Ad-Hoc 介绍"></a>Ansible Ad-Hoc 介绍</h4><p>Ansible Ad-Hoc 的执行方式的主要工具就是 ansible<br>特点: 一次性的执行,不会保存执行命令信息,只适合临时性或测试性的任务</p><h4 id="ansible-命令用法"><a href="#ansible-命令用法" class="headerlink" title="ansible 命令用法"></a>ansible 命令用法</h4><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &lt;host-pattern&gt; [-m module_name] [-a args]</span><br></pre></td></tr></table></figure><p>选项说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">--version #显示版本</span><br><span class="line">-m module #指定模块，默认为command</span><br><span class="line">-v #详细过程 -vv -vvv更详细</span><br><span class="line">--list-hosts #显示主机列表，可简写 --list</span><br><span class="line">-C, --check #检查，并不执行</span><br><span class="line">-T, --timeout=TIMEOUT #执行命令的超时时间，默认10s</span><br><span class="line">-k, --ask-pass #提示输入ssh连接密码，默认Key验证</span><br><span class="line">-u, --user=REMOTE_USER #执行远程执行的用户,默认root</span><br><span class="line">-b, --become #代替旧版的sudo实现通过sudo机制实现提升权限</span><br><span class="line">--become-user=USERNAME #指定sudo的runas用户，默认为root</span><br><span class="line">-K, --ask-become-pass #提示输入sudo时的口令</span><br><span class="line">-f FORKS, --forks FORKS #指定并发同时执行ansible任务的主机数</span><br><span class="line">-i INVENTORY, --inventory INVENTORY #指定主机清单文件</span><br></pre></td></tr></table></figure><p>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#以wang用户执行ping存活检测</span><br><span class="line">ansible all -m ping -u wang -k</span><br><span class="line">#以wang sudo至root执行ping存活检测</span><br><span class="line">ansible all -m ping -u wang -k -b</span><br><span class="line">#以wang sudo至mage用户执行ping存活检测</span><br><span class="line">ansible all -m ping -u wang -k -b --become-user=mage</span><br><span class="line">#以wang sudo至root用户执行ls</span><br><span class="line">ansible all -m command -u wang -a &#x27;ls /root&#x27; -b --become-user=root -k -K</span><br></pre></td></tr></table></figure><p>范例: 并发执行控制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#分别执行下面两条命令观察结果</span><br><span class="line">[root@ansible ~]#ansible all -a &#x27;sleep 5&#x27; -f1</span><br><span class="line">[root@ansible ~]#ansible all -a &#x27;sleep 5&#x27; -f10</span><br></pre></td></tr></table></figure><p>范例: 使用普能用户进行远程管理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#在所有控制端和被控制端创建用户和密码</span><br><span class="line">[root@rocky8 ~]#useradd wang</span><br><span class="line">[root@rocky8 ~]#echo wang:123456 | chpasswd</span><br><span class="line">#在所有被控制端对用户sudo授权</span><br><span class="line">[root@rocky8 ~]#visudo</span><br><span class="line">wang ALL=(ALL) NOPASSWD: ALL</span><br><span class="line">[root@rocky8 ~]#visudo -c</span><br><span class="line">/etc/sudoers: parsed OK</span><br><span class="line">#实现从控制端到被控制端的基于key验证</span><br><span class="line">[root@ansible ~]#su - wang</span><br><span class="line">wang@ansible:~$ssh-keygen -f ~/.ssh/id_rsa -P &#x27;&#x27;</span><br><span class="line">wang@ansible:~$$ssh-copy-id wang@&#x27;10.0.0.8&#x27;</span><br><span class="line">#使用普通用户测试连接,默认连接权限不足失败</span><br><span class="line">wang@ansible:~$ ansible 10.0.0.8 -m shell -a &#x27;ls /root&#x27;</span><br><span class="line">10.0.0.8 | FAILED | rc=2 &gt;&gt;</span><br><span class="line">ls: cannot open directory &#x27;/root&#x27;: Permission deniednon-zero return code</span><br><span class="line">#使用普通用户通过-b选项连接实现sudo提权后连接成功</span><br><span class="line">wang@ansible:~$ ansible 10.0.0.8 -m shell -a &#x27;ls /root&#x27; -b --become-user root</span><br><span class="line">10.0.0.8 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">anaconda-ks.cfg</span><br><span class="line">#修改配置文件指定sudo机制</span><br><span class="line">[root@ansible ~]#vim /etc/ansible/ansible.cfg</span><br><span class="line">#取消下面行前面的注释</span><br><span class="line">[privilege_escalation]</span><br><span class="line">become=True</span><br><span class="line">become_method=sudo</span><br><span class="line">become_user=root</span><br><span class="line">become_ask_pass=False</span><br><span class="line">#再次测试</span><br><span class="line">[root@ansible ~]#su - wang</span><br><span class="line">wang@ansible:~$ ansible 10.0.0.8 -m shell -a &#x27;ls /root&#x27;</span><br><span class="line">10.0.0.8 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">anaconda-ks.cfg</span><br></pre></td></tr></table></figure><p>范例: 使用普通用户连接远程主机执行代替另一个用户身份执行操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#useradd wang</span><br><span class="line">[root@centos8 ~]#echo wang:123456 | chpasswd</span><br><span class="line">#先在被控制端能过sudo对普通用户授权</span><br><span class="line">[root@centos8 ~]#grep wang /etc/sudoers</span><br><span class="line">wang ALL=(ALL) NOPASSWD: ALL</span><br><span class="line">#以wang的用户连接用户,并利用sudo代表mage执行whoami命令</span><br><span class="line">[root@ansible ~]#ansible 10.0.0.8 -m shell -a &#x27;whoami&#x27; -u wang -k -b --become-</span><br><span class="line">user=mage</span><br><span class="line">SSH password: #输入远程主机wang用户ssh连接密码</span><br><span class="line">10.0.0.8 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">mage</span><br></pre></td></tr></table></figure><h4 id="ansible的Host-pattern"><a href="#ansible的Host-pattern" class="headerlink" title="ansible的Host-pattern"></a>ansible的Host-pattern</h4><p>用于匹配被控制的主机的列表<br>All ：表示所有Inventory中的所有主机<br>范例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m ping</span><br></pre></td></tr></table></figure><p>*:通配符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ansible &quot;*&quot; -m ping</span><br><span class="line">ansible 192.168.1.* -m ping</span><br><span class="line">ansible &quot;srvs&quot; -m ping</span><br><span class="line">ansible &quot;10.0.0.6 10.0.0.7&quot; -m ping</span><br></pre></td></tr></table></figure><p>或关系</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible &quot;websrvs:appsrvs&quot; -m ping</span><br><span class="line">ansible &quot;192.168.1.10:192.168.1.20&quot; -m ping</span><br></pre></td></tr></table></figure><p>逻辑与</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#在websrvs组并且在dbsrvs组中的主机</span><br><span class="line">ansible &quot;websrvs:&amp;dbsrvs&quot; -m ping</span><br></pre></td></tr></table></figure><p>逻辑非</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#在所有主机,但不在websrvs组和dbsrvs组中的主机</span><br><span class="line">#注意：此处为单引号</span><br><span class="line">ansible &#x27;all:!dbsrvs:!websrvs&#x27; -m ping</span><br></pre></td></tr></table></figure><p>综合逻辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &#x27;websrvs:dbsrvs:&amp;appsrvs:!ftpsrvs&#x27; -m ping</span><br></pre></td></tr></table></figure><p>正则表达式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible &quot;websrvs:dbsrvs&quot; -m ping</span><br><span class="line">ansible &quot;~(web|db).*\.magedu\.com&quot; -m ping</span><br></pre></td></tr></table></figure><h5 id="ansible-命令的执行过程"><a href="#ansible-命令的执行过程" class="headerlink" title="ansible 命令的执行过程"></a>ansible 命令的执行过程</h5><ol><li>加载自己的配置文件,默认&#x2F;etc&#x2F;ansible&#x2F;ansible.cfg</li><li>查找主机清单中对应的主机或主机组</li><li>加载自己对应的模块文件，如：command</li><li>通过ansible将模块或命令生成对应的临时py文件，并将该文件传输至远程服务器的对应执行用户<br>$HOME&#x2F;.ansible&#x2F;tmp&#x2F;ansible-tmp-数字&#x2F;XXX.PY文件</li><li>给文件+x执行</li><li>执行并返回结果</li><li>删除临时py文件，退出</li></ol><h5 id="ansible-命令的执行状态"><a href="#ansible-命令的执行状态" class="headerlink" title="ansible 命令的执行状态"></a>ansible 命令的执行状态</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#grep -A 14 &#x27;\[colors\]&#x27; /etc/ansible/ansible.cfg</span><br><span class="line">[colors]</span><br><span class="line">#highlight = white</span><br><span class="line">#verbose = blue</span><br><span class="line">#warn = bright purple</span><br><span class="line">#error = red</span><br><span class="line">#debug = dark gray</span><br><span class="line">#deprecate = purple</span><br><span class="line">#skip = cyan</span><br><span class="line">#unreachable = red</span><br><span class="line">#ok = green</span><br><span class="line">#changed = yellow</span><br><span class="line">#diff_add = green</span><br><span class="line">#diff_remove = red</span><br><span class="line">#diff_lines = cyan</span><br></pre></td></tr></table></figure><ul><li>绿色：执行成功并且对目标主机不需要做改变的操作</li><li>黄色：执行成功并且对目标主机做变更</li><li>红色：执行失败</li></ul><h3 id="ansible-console"><a href="#ansible-console" class="headerlink" title="ansible-console"></a>ansible-console</h3><p>此工具可交互执行命令，支持tab，ansible 2.0+新增<br>提示符格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">执行用户@当前操作的主机组 (当前组的主机数量)[f:并发数]$</span><br></pre></td></tr></table></figure><p>常用子命令：</p><ul><li>设置并发数： forks n 例如： forks 10</li><li>切换组： cd 主机组 例如： cd web</li><li>列出当前组主机列表： list</li><li>列出所有的内置命令： ?或help</li></ul><p>范例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#ansible-console</span><br><span class="line">Welcome to the ansible console.</span><br><span class="line">Type help or ? to list commands.</span><br><span class="line">root@all (3)[f:5]$ ping</span><br><span class="line">10.0.0.7 | SUCCESS =&gt; &#123;</span><br><span class="line">&quot;ansible_facts&quot;: &#123;</span><br><span class="line">&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;changed&quot;: false,</span><br><span class="line">&quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">10.0.0.6 | SUCCESS =&gt; &#123;</span><br><span class="line">&quot;ansible_facts&quot;: &#123;</span><br><span class="line">&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;changed&quot;: false,</span><br><span class="line">&quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">10.0.0.8 | SUCCESS =&gt; &#123;</span><br><span class="line">&quot;ansible_facts&quot;: &#123;</span><br><span class="line">&quot;discovered_interpreter_python&quot;: &quot;/usr/libexec/platform-python&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;changed&quot;: false,</span><br><span class="line">&quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">root@all (3)[f:5]$ list</span><br><span class="line">10.0.0.8</span><br><span class="line">10.0.0.7</span><br><span class="line">10.0.0.6</span><br><span class="line">root@all (3)[f:5]$ cd websrvs</span><br><span class="line">root@websrvs (2)[f:5]$ list</span><br><span class="line">10.0.0.7</span><br><span class="line">10.0.0.8</span><br><span class="line">root@websrvs (2)[f:5]$ forks 10</span><br><span class="line">root@websrvs (2)[f:10]$ cd appsrvs</span><br><span class="line">root@appsrvs (2)[f:5]$ yum name=httpd state=present</span><br><span class="line">root@appsrvs (2)[f:5]$ service name=httpd state=started</span><br></pre></td></tr></table></figure><h3 id="ansible-playbook"><a href="#ansible-playbook" class="headerlink" title="ansible-playbook"></a>ansible-playbook</h3><p>此工具用于执行编写好的 playbook 任务<br>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook hello.yml</span><br><span class="line">cat hello.yml</span><br><span class="line">---</span><br><span class="line">#hello world yml file</span><br><span class="line">- hosts: websrvs</span><br><span class="line">  remote_user: root</span><br><span class="line">  gather_facts: no</span><br><span class="line">  tasks:</span><br><span class="line">  - name: hello world</span><br><span class="line">    command: /usr/bin/wall hello world</span><br></pre></td></tr></table></figure><h3 id="ansible-vault"><a href="#ansible-vault" class="headerlink" title="ansible-vault"></a>ansible-vault</h3><p>此工具可以用于加密解密yml文件<br>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-vault [create|decrypt|edit|encrypt|rekey|view]</span><br></pre></td></tr></table></figure><p>范例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ansible-vault encrypt hello.yml #加密</span><br><span class="line">ansible-vault decrypt hello.yml #解密</span><br><span class="line">ansible-vault view hello.yml #查看</span><br><span class="line">ansible-vault edit hello.yml #编辑加密文件</span><br><span class="line">ansible-vault rekey hello.yml #修改口令</span><br><span class="line">ansible-vault create new.yml #创建新文件</span><br><span class="line">#执行加密的playbook,交互式输入密码</span><br><span class="line">chmod 600 hello.yml</span><br><span class="line">ansible-playbook --ask-vault-pass hello.yml</span><br><span class="line">#从pass.txt文件中读取密码</span><br><span class="line">ansible-playbook --vault-password-file pass.txt hello.yml</span><br><span class="line">#从配置文件中取得密码</span><br><span class="line">#vi /etc/ansible/ansible.cfg</span><br><span class="line">[defaults]</span><br><span class="line">ault-password-file=pass.txt</span><br><span class="line">#可以直接执行加密文件</span><br><span class="line">ansible-playbook hello.yml</span><br></pre></td></tr></table></figure><h3 id="ansible-galaxy"><a href="#ansible-galaxy" class="headerlink" title="ansible-galaxy"></a>ansible-galaxy</h3><p>Galaxy 是一个免费网站, 类似于github网站, 网站上发布了很多的共享的roles角色。<br>Ansible 提供了ansible-galaxy命令行工具连接 <a href="https://galaxy.ansible.com/">https://galaxy.ansible.com</a> 网站下载相应的roles, 进行init(初始化、search( 查拘、install(安装、 remove(移除)等操作。</p><p><img src="/../image.assets/1677156776774.png" alt="1677156776774"></p><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#搜索项目</span><br><span class="line">[root@ansible ~]#ansible-galaxy search lamp</span><br><span class="line">#列出所有已安装的galaxy</span><br><span class="line">ansible-galaxy list</span><br><span class="line">#安装galaxy,默认下载到~/.ansible/roles下</span><br><span class="line">ansible-galaxy install geerlingguy.mysql</span><br><span class="line">ansible-galaxy install geerlingguy.redis</span><br><span class="line">#删除galaxy</span><br><span class="line">ansible-galaxy remove geerlingguy.redis</span><br></pre></td></tr></table></figure><h2 id="Ansible常用模块"><a href="#Ansible常用模块" class="headerlink" title="Ansible常用模块"></a>Ansible常用模块</h2><p>2015年12月只270多个模块<br>2016年12年26日ansible 1.9.2 有540个模块<br>2018年01月12日ansible 2.3.8 有1378个模块<br>2018年05月28日ansible 2.5.3 有1562个模块<br>2018年07月15日ansible 2.6.3 有1852个模块<br>2018年11月19日ansible 2.7.2 有2080个模块<br>2020年03月02日ansible 2.9.5 有3387个模块<br>2021年12月22日ansible 2.11.8 有6141个模块<br>2022年06月04日ansible 2.12.6 有6763个模块<br>虽然模块众多，但最常用的模块也就2，30个而已，针对特定业务只需要熟悉10几个模块即可<br>常用模块帮助文档参考：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://docs.ansible.com/ansible/2.9/modules/modules_by_category.html</span><br><span class="line">https://docs.ansible.com/ansible/2.9/modules/list_of_all_modules.html</span><br><span class="line">https://docs.ansible.com/ansible/latest/modules/list_of_all_modules.html</span><br><span class="line">https://docs.ansible.com/ansible/latest/modules/modules_by_category.html</span><br></pre></td></tr></table></figure><h3 id="Command-模块"><a href="#Command-模块" class="headerlink" title="Command 模块"></a>Command 模块</h3><p>功能：在远程主机执行命令，此为默认模块，可忽略 -m 选项<br>注意：此命令不支持 $VARNAME &lt; &gt; | ; &amp; 等，可用shell模块实现<br>注意：此模块不具有幂等性<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chdir=dir #执行命令前,先切换至目录dir</span><br><span class="line">creates=file #当file不存在时才会执行</span><br><span class="line">removes=file #当file存在时才会执行</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#ansible websrvs -m command -a &#x27;chdir=/etc cat centos-release&#x27;</span><br><span class="line">10.0.0.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">CentOS Linux release 7.7.1908 (Core)</span><br><span class="line">10.0.0.8 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">CentOS Linux release 8.1.1911 (Core)</span><br><span class="line">[root@ansible ~]#ansible websrvs -m command -a &#x27;chdir=/etc creates=/data/f1.txt cat centos-release&#x27;</span><br><span class="line">10.0.0.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">CentOS Linux release 7.7.1908 (Core)</span><br><span class="line">10.0.0.8 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">skipped, since /data/f1.txt exists</span><br><span class="line">[root@ansible ~]#ansible websrvs -m command -a &#x27;chdir=/etc removes=/data/f1.txt cat centos-release&#x27;</span><br><span class="line">10.0.0.7 | SUCCESS | rc=0 &gt;&gt;</span><br><span class="line">skipped, since /data/f1.txt does not exist</span><br><span class="line">10.0.0.8 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">CentOS Linux release 8.1.1911 (Core)</span><br><span class="line">ansible websrvs -m command -a &#x27;service vsftpd start&#x27;</span><br><span class="line">ansible websrvs -m command -a &#x27;echo magedu |passwd --stdin wang&#x27;</span><br><span class="line">ansible websrvs -m command -a &#x27;rm -rf /data/&#x27;</span><br><span class="line">ansible websrvs -m command -a &#x27;echo hello &gt; /data/hello.log&#x27;</span><br><span class="line"></span><br><span class="line">ansible websrvs -m command -a &quot;echo $HOSTNAME&quot;</span><br></pre></td></tr></table></figure><h3 id="Shell-模块"><a href="#Shell-模块" class="headerlink" title="Shell 模块"></a>Shell 模块</h3><p>功能：和command相似，用shell执行命令,支持各种符号,比如:*,$, &gt; , 相当于增强版的command模块<br>注意：此模块不具有幂等性,建议能不能就用此模块,最好使用专用模块<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chdir=dir #执行命令前,先切换至目录dir</span><br><span class="line">creates=file #当file不存在时才会执行</span><br><span class="line">removes=file #当file存在时才会执行</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#ansible websrvs -m shell -a &quot;echo $HOSTNAME&quot;</span><br><span class="line">10.0.0.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">ansible</span><br><span class="line">10.0.0.8 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">ansible</span><br><span class="line">[root@ansible ~]#ansible websrvs -m shell -a &#x27;echo $HOSTNAME&#x27;</span><br><span class="line">10.0.0.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">centos7.wangxiaochun.com</span><br><span class="line">10.0.0.8 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">centos8.localdomain</span><br><span class="line">[root@ansible ~]#ansible websrvs -m shell -a &#x27;echo centos | passwd --stdin wang&#x27;</span><br><span class="line">10.0.0.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">Changing password for user wang.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">10.0.0.8 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">Changing password for user wang.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@ansible ~]#ansible websrvs -m shell -a &#x27;ls -l /etc/shadow&#x27;</span><br><span class="line">10.0.0.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">---------- 1 root root 889 Mar 2 14:34 /etc/shadow</span><br><span class="line">10.0.0.8 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">---------- 1 root root 944 Mar 2 14:34 /etc/shadow</span><br><span class="line">[root@ansible ~]#ansible websrvs -m shell -a &#x27;echo hello &gt; /data/hello.log&#x27;</span><br><span class="line">10.0.0.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">10.0.0.8 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">[root@ansible ~]#ansible websrvs -m shell -a &#x27;cat /data/hello.log&#x27;</span><br><span class="line">10.0.0.7 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">hello</span><br><span class="line">10.0.0.8 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p>注意：调用bash执行命令 类似 cat &#x2F;tmp&#x2F;test.md | awk -F’|’ ‘{print $1,$2}’ &amp;&gt; &#x2F;tmp&#x2F;example.txt 这些复杂命令，即使使用shell也可能会失败，解决办法：写到脚本时，copy到远程，执行，再把需要的结果拉回执行命令的机器<br>范例：将shell模块代替command，设为模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#vim /etc/ansible/ansible.cfg</span><br><span class="line">#修改下面一行</span><br><span class="line">module_name = shell</span><br></pre></td></tr></table></figure><h3 id="Script-模块"><a href="#Script-模块" class="headerlink" title="Script 模块"></a>Script 模块</h3><p>功能：在远程主机上运行ansible服务器上的脚本(无需执行权限)<br>注意：此模块不具有幂等性<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chdir=dir #执行命令前,先切换至目录dir</span><br><span class="line">cmd #指定ansible主机的命令</span><br><span class="line">creates=file #当file不存在时才会执行</span><br><span class="line">removes=file #当file存在时才会执行</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible websrvs -m script -a /data/test.sh</span><br></pre></td></tr></table></figure><h3 id="Copy-模块"><a href="#Copy-模块" class="headerlink" title="Copy 模块"></a>Copy 模块</h3><p>功能：复制ansible服务器主控端或远程的本机的文件到远程主机<br>注意: src&#x3D;file 如果是没指明路径,则为当前目录或当前目录下的files目录下的file文件<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">src #控制端的源文件路径</span><br><span class="line">dest #被控端的文件路径</span><br><span class="line">owner #属主</span><br><span class="line">group #属组</span><br><span class="line">mode #权限</span><br><span class="line">backup #是否备份</span><br><span class="line">validate #验证成功才会执行copy</span><br><span class="line">remote_src #no是默认值,表示src文件在ansible主机,yes表示src文件在远程主机</span><br></pre></td></tr></table></figure><p>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#如目标存在，默认覆盖，此处指定先备</span><br><span class="line">ansible websrvs -m copy -a &quot;src=/root/test1.sh dest=/tmp/test2.sh owner=wang mode=600 backup=yes&quot;</span><br><span class="line">#指定内容，直接生成目标文件</span><br><span class="line">ansible websrvs -m copy -a &quot;content=&#x27;wang 123456\nxiao 654321\n&#x27; dest=/etc/rsync.pas owner=root group=root mode=0600&quot;</span><br><span class="line">#复制/etc目录自身,注意/etc/后面没有/</span><br><span class="line">ansible websrvs -m copy -a &quot;src=/etc dest=/backup&quot;</span><br><span class="line">#复制/etc/下的文件，不包括/etc/目录自身,注意/etc/后面有/</span><br><span class="line">ansible websrvs -m copy -a &quot;src=/etc/ dest=/backup&quot;</span><br><span class="line">#复制/etc/suders,并校验语法</span><br><span class="line">ansible websrvs -m copy -a &quot;src=/etc/suders dest=/etc/sudoers.edit remote_src=yes validate=/usr/sbin/visudo -csf %s&quot;</span><br></pre></td></tr></table></figure><h3 id="Get-url-模块"><a href="#Get-url-模块" class="headerlink" title="Get_url 模块"></a>Get_url 模块</h3><p>功能: 用于将文件从http、https或ftp下载到被管理机节点上<br>常用参数如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">url #下载文件的URL,支持HTTP，HTTPS或FTP协议</span><br><span class="line">dest #下载到目标路径（绝对路径），如果目标是一个目录，就用原文件名，如果目标设置了名称就用目标</span><br><span class="line">设置的名称</span><br><span class="line">owner #指定属主</span><br><span class="line">group #指定属组</span><br><span class="line">mode #指定权限</span><br><span class="line">force #如果yes，dest不是目录，将每次下载文件，如果内容改变替换文件。如果no，则只有在目标不存</span><br><span class="line">在时才会下载</span><br><span class="line">checksum #对目标文件在下载后计算摘要，以确保其完整性</span><br><span class="line">#示例: checksum=&quot;sha256:D98291AC[...]B6DC7B97&quot;,</span><br><span class="line">checksum=&quot;sha256:http://example.com/path/sha256sum.txt&quot;</span><br><span class="line">url_username #用于HTTP基本认证的用户名。 对于允许空密码的站点，此参数可以不使用`url_password&#x27;</span><br><span class="line">url_password #用于HTTP基本认证的密码。 如果未指定`url_username&#x27;参数，则不会使用`url_password&#x27;参数</span><br><span class="line">validate_certs #如果“no”，SSL证书将不会被验证。 适用于自签名证书在私有网站上使用</span><br><span class="line">timeout #URL请求的超时时间,秒为单位</span><br></pre></td></tr></table></figure><p>范例: 下载并MD5验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#ansible websrvs -m get_url -a &#x27;url=http://nginx.org/download/nginx-1.18.0.tar.gz dest=/usr/local/src/nginx.tar.gz checksum=&quot;md5:b2d33d24d89b8b1f87ff5d251aa27eb8&quot;&#x27;</span><br></pre></td></tr></table></figure><h3 id="Fetch-模块"><a href="#Fetch-模块" class="headerlink" title="Fetch 模块"></a>Fetch 模块</h3><p>功能：从远程主机提取文件至ansible的主控端，copy相反，目前不支持目录<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">src #被控制端的源文件路径,只支持文件</span><br><span class="line">dest #ansible控制端的目录路径</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible websrvs -m fetch -a &#x27;src=/root/test.sh dest=/data/scripts&#x27;</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#ansible all -m fetch -a &#x27;src=/etc/redhat-release</span><br><span class="line">dest=/data/os&#x27;</span><br><span class="line">[root@ansible ~]#tree /data/os/</span><br><span class="line">/data/os/</span><br><span class="line">├── 10.0.0.6</span><br><span class="line">│ └── etc</span><br><span class="line">│ └── redhat-release</span><br><span class="line">├── 10.0.0.7</span><br><span class="line">│ └── etc</span><br><span class="line">│ └── redhat-release</span><br><span class="line">└── 10.0.0.8</span><br><span class="line">└── etc</span><br><span class="line">└── redhat-release</span><br><span class="line">6 directories, 3 files</span><br></pre></td></tr></table></figure><h3 id="File-模块"><a href="#File-模块" class="headerlink" title="File 模块"></a>File 模块</h3><p>功能：设置文件属性,创建文件,目录和软链接等<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">path #在被控端创建的路径</span><br><span class="line">owner #属主</span><br><span class="line">group #属组</span><br><span class="line">mode #权限</span><br><span class="line">state #状态</span><br><span class="line">=touch #创建文件</span><br><span class="line">=directory #创建目录</span><br><span class="line">=link #软链接</span><br><span class="line">=hard #硬链接</span><br><span class="line">recurse #yes表示递归授权</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#创建空文件</span><br><span class="line">ansible all -m file -a &#x27;path=/data/test.txt state=touch&#x27;</span><br><span class="line">ansible all -m file -a &#x27;path=/data/test.txt state=absent&#x27;</span><br><span class="line">ansible all -m file -a &quot;path=/root/test.sh owner=wang mode=755&quot;</span><br><span class="line">#创建目录</span><br><span class="line">ansible all -m file -a &quot;path=/data/mysql state=directory owner=mysql group=mysql&quot;</span><br><span class="line">#创建软链接</span><br><span class="line">ansible all -m file -a &#x27;src=/data/testfile path|dest|name=/data/testfile-link state=link&#x27;</span><br><span class="line">#创建目录</span><br><span class="line">ansible all -m file -a &#x27;path=/data/testdir state=directory&#x27;</span><br><span class="line">#递归修改目录属性,但不递归至子目录</span><br><span class="line">ansible all -m file -a &quot;path=/data/mysql state=directory owner=mysql group=mysql&quot;</span><br><span class="line">#递归修改目录及子目录的属性</span><br><span class="line">ansible all -m file -a &quot;path=/data/mysql state=directory owner=mysql group=mysql recurse=yes&quot;</span><br></pre></td></tr></table></figure><h3 id="stat-模块"><a href="#stat-模块" class="headerlink" title="stat 模块"></a>stat 模块</h3><p>功能：检查文件或文件系统的状态<br>注意：对于Windows目标，请改用win_stat模块</p><p>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path #文件/对象的完整路径（必须）</span><br></pre></td></tr></table></figure><p>常用的返回值判断：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exists： 判断是否存在</span><br><span class="line">isuid： 调用用户的ID与所有者ID是否匹配</span><br></pre></td></tr></table></figure><p>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#ansible 127.0.0.1 -m stat -a &#x27;path=/etc/passwd&#x27;</span><br><span class="line">127.0.0.1 | SUCCESS =&gt; &#123;</span><br><span class="line">&quot;changed&quot;: false,</span><br><span class="line">&quot;stat&quot;: &#123;</span><br><span class="line">&quot;atime&quot;: 1614601466.7493012,</span><br><span class="line">&quot;attr_flags&quot;: &quot;&quot;,</span><br><span class="line">&quot;attributes&quot;: [],</span><br><span class="line">&quot;block_size&quot;: 4096,</span><br><span class="line">&quot;blocks&quot;: 8,</span><br><span class="line">&quot;charset&quot;: &quot;us-ascii&quot;,</span><br><span class="line">&quot;checksum&quot;: &quot;8f7a9a996d24de98bf1eab4a047f8e89e9c708cf&quot;,</span><br><span class="line">&quot;ctime&quot;: 1614334259.4498665,</span><br><span class="line">&quot;dev&quot;: 2050,</span><br><span class="line">&quot;device_type&quot;: 0,</span><br><span class="line">&quot;executable&quot;: false,</span><br><span class="line">&quot;exists&quot;: true,</span><br><span class="line">&quot;gid&quot;: 0,</span><br><span class="line">&quot;gr_name&quot;: &quot;root&quot;,</span><br><span class="line">&quot;inode&quot;: 134691833,</span><br><span class="line">&quot;isblk&quot;: false,</span><br><span class="line">&quot;ischr&quot;: false,</span><br><span class="line">&quot;isdir&quot;: false,</span><br><span class="line">&quot;isfifo&quot;: false,</span><br><span class="line">&quot;isgid&quot;: false,</span><br><span class="line">&quot;islnk&quot;: false,</span><br><span class="line">&quot;isreg&quot;: true,</span><br><span class="line">&quot;issock&quot;: false,</span><br><span class="line">&quot;isuid&quot;: false,</span><br><span class="line">&quot;mimetype&quot;: &quot;text/plain&quot;,</span><br><span class="line">&quot;mode&quot;: &quot;0000&quot;,</span><br><span class="line">&quot;mtime&quot;: 1614334259.4498665,</span><br><span class="line">&quot;nlink&quot;: 1,</span><br><span class="line">&quot;path&quot;: &quot;/etc/passwd&quot;,</span><br><span class="line">&quot;pw_name&quot;: &quot;root&quot;,</span><br><span class="line">&quot;readable&quot;: true,</span><br><span class="line">&quot;rgrp&quot;: false,</span><br><span class="line">&quot;roth&quot;: false,</span><br><span class="line">&quot;rusr&quot;: false,</span><br><span class="line">&quot;size&quot;: 1030,</span><br><span class="line">&quot;uid&quot;: 0,</span><br><span class="line">&quot;version&quot;: &quot;671641160&quot;,</span><br><span class="line">&quot;wgrp&quot;: false,</span><br><span class="line">&quot;woth&quot;: false,</span><br><span class="line">&quot;writeable&quot;: true,</span><br><span class="line">&quot;wusr&quot;: false,</span><br><span class="line">&quot;xgrp&quot;: false,</span><br><span class="line">&quot;xoth&quot;: false,</span><br><span class="line">&quot;xusr&quot;: false</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- name: install | Check if file is already configured.</span><br><span class="line">  stat: path=&#123;&#123; nginx_file_path &#125;&#125;</span><br><span class="line">  connection: local</span><br><span class="line">  register: nginx_file_result</span><br><span class="line">- name: install | Download nginx file</span><br><span class="line">  get_url: url=&#123;&#123; nginx_file_url &#125;&#125; dest=&#123;&#123; software_files_path &#125;&#125;</span><br><span class="line">  validate_certs=no</span><br><span class="line">  connection: local</span><br><span class="line">  when:，not. nginx_file_result.stat.exists</span><br></pre></td></tr></table></figure><p>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ansible]#cat stat.yml</span><br><span class="line">---</span><br><span class="line">- hosts: websrvs</span><br><span class="line">  tasks:</span><br><span class="line">  - name: check file</span><br><span class="line">    stat: path=/data/mysql</span><br><span class="line">    register: st</span><br><span class="line">  - name: debug</span><br><span class="line">    debug:</span><br><span class="line">      msg: &quot;/data/mysql is not exist&quot;</span><br><span class="line">    when: not st.stat.exists</span><br><span class="line">[root@ansible ansible]#ansible-playbook stat.yml</span><br><span class="line">PLAY [websrvs]</span><br><span class="line">********************************************************************************</span><br><span class="line">***************************************</span><br><span class="line">TASK [Gathering Facts]</span><br><span class="line">********************************************************************************</span><br><span class="line">*******************************</span><br><span class="line">ok: [10.0.0.7]</span><br><span class="line">ok: [10.0.0.8]</span><br><span class="line">TASK [check file]</span><br><span class="line">********************************************************************************</span><br><span class="line">************************************</span><br><span class="line">ok: [10.0.0.7]</span><br><span class="line">ok: [10.0.0.8]</span><br><span class="line">TASK [debug]</span><br><span class="line">********************************************************************************</span><br><span class="line">*****************************************</span><br><span class="line">ok: [10.0.0.7] =&gt; &#123;</span><br><span class="line">&quot;msg&quot;: &quot;/data/mysql is not exist&quot;</span><br><span class="line">&#125;</span><br><span class="line">ok: [10.0.0.8] =&gt; &#123;</span><br><span class="line">&quot;msg&quot;: &quot;/data/mysql is not exist&quot;</span><br><span class="line">&#125;</span><br><span class="line">PLAY RECAP</span><br><span class="line">********************************************************************************</span><br><span class="line">*******************************************</span><br><span class="line">10.0.0.7 : ok=3 changed=0 unreachable=0 failed=0</span><br><span class="line">skipped=0 rescued=0 ignored=0</span><br><span class="line">10.0.0.8 : ok=3 changed=0 unreachable=0 failed=0</span><br><span class="line">skipped=0 rescued=0 ignored=0</span><br></pre></td></tr></table></figure><h3 id="unarchive-模块"><a href="#unarchive-模块" class="headerlink" title="unarchive 模块"></a>unarchive 模块</h3><p>功能：解包解压缩<br>实现有两种用法：</p><ul><li>将ansible主机上的压缩包传到远程主机后解压缩至特定目录，设置remote_src&#x3D;no,此为默认值,可省略</li><li>将远程本主机上或非ansible的其它主机的某个压缩包解压缩到远程主机本机的指定路径下，需要设置remote_src&#x3D;yes</li></ul><p>常见参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">remote_src #和copy功能一样且选项互斥，yes表示源文件在远程被控主机或其它非ansible的其它主机上，no表示文件在ansible主机上,默认值为no, 此选项代替copy选项</span><br><span class="line">copy #默认为yes，当copy=yes，拷贝的文件是从ansible主机复制到远程主机上，如果设置为copy=no，会在远程主机上寻找src源文件,此选项已废弃</span><br><span class="line">src #源路径，可以是ansible主机上的路径，也可以是远程主机(被管理端或者第三方主机)上的路径，如果是远程主机上的路径，则需要设置remote_src=yes</span><br><span class="line">dest #远程主机上的目标路径</span><br><span class="line">mode #设置解压缩后的文件权限</span><br><span class="line">creates=/path/file #当绝对路径/path/file不存在时才会执行</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m unarchive -a &#x27;src=/data/foo.tgz dest=/var/lib/foo owner=wang group=bin&#x27;</span><br><span class="line"></span><br><span class="line">ansible all -m unarchive -a &#x27;src=/tmp/foo.zip dest=/data  mode=0777&#x27;</span><br><span class="line"></span><br><span class="line">ansible all -m unarchive -a &#x27;src=https://example.com/example.zip dest=/data &#x27;</span><br><span class="line"></span><br><span class="line">ansible websrvs -m unarchive -a &#x27;src=https://releases.ansible.com/ansible/ansible-2.1.6.0-0.1.rc1.tar.gz dest=/data/ owner=root remote_src=yes&#x27;</span><br><span class="line"></span><br><span class="line">ansible websrvs -m unarchive -a &#x27;src=http://nginx.org/download/nginx- 1.18.0.tar.gz dest=/usr/local/src/ remote_src=yes&#x27;&#x27;</span><br></pre></td></tr></table></figure><h3 id="Archive-模块"><a href="#Archive-模块" class="headerlink" title="Archive 模块"></a>Archive 模块</h3><p>功能：打包压缩保存在被管理节点</p><p>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">path #压缩的文件或目录</span><br><span class="line">dest #压缩后的文件</span><br><span class="line">format #压缩格式,支持gz,bz2,xz,tar,zip</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible websrvs -m archive -a &#x27;path=/var/log/ dest=/data/log.tar.bz2 format=bz2 owner=wang mode=0600&#x27;</span><br></pre></td></tr></table></figure><h3 id="Hostname-模块"><a href="#Hostname-模块" class="headerlink" title="Hostname 模块"></a>Hostname 模块</h3><p>功能：管理主机名<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name #修改后的主机名称</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible node1 -m hostname -a &quot;name=websrv&quot;</span><br><span class="line">ansible 10.0.0.18 -m hostname -a &#x27;name=node18.wang.org&#x27;</span><br></pre></td></tr></table></figure><h3 id="Cron-模块"><a href="#Cron-模块" class="headerlink" title="Cron 模块"></a>Cron 模块</h3><p>功能：计划任务<br>支持时间：minute，hour，day，month，weekday<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name #描述脚本的作用</span><br><span class="line">minute #分钟</span><br><span class="line">hour #小时</span><br><span class="line">weekday #周</span><br><span class="line">user #任务由哪个用户运行；默认root</span><br><span class="line">job #任务</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#备份数据库脚本</span><br><span class="line">[root@centos8 ~]#cat /root/mysql_backup.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">mysqldump -A -F --single-transaction --master-data=2 -q -uroot |gzip &gt; /data/mysql_`date +%F_%T`.sql.gz</span><br><span class="line">#创建任务</span><br><span class="line">ansible 10.0.0.8 -m cron -a &#x27;hour=2 minute=30 weekday=1-5 name=&quot;backup mysql&quot; job=/root/mysql_backup.sh&#x27;</span><br><span class="line"></span><br><span class="line">ansible websrvs -m cron -a &quot;minute=*/5 job=&#x27;/usr/sbin/ntpdate ntp.aliyun.com &amp;&gt;/dev/null&#x27; name=Synctime&quot;</span><br><span class="line"></span><br><span class="line">#禁用计划任务</span><br><span class="line">ansible websrvs -m cron -a &quot;minute=*/5 job=&#x27;/usr/sbin/ntpdate 172.20.0.1 &amp;&gt;/dev/null&#x27; name=Synctime disabled=yes&quot;</span><br><span class="line"></span><br><span class="line">#启用计划任务</span><br><span class="line">ansible websrvs -m cron -a &quot;minute=*/5 job=&#x27;/usr/sbin/ntpdate 172.20.0.1 &amp;&gt; /dev/null&#x27; name=Synctime disabled=no&quot;</span><br><span class="line"></span><br><span class="line">#删除任务</span><br><span class="line">ansible websrvs -m cron -a &quot;name=&#x27;backup mysql&#x27; state=absent&quot;</span><br><span class="line">ansible websrvs -m cron -a &#x27;state=absent name=Synctime&#x27;</span><br></pre></td></tr></table></figure><h3 id="Yum-和-Apt-模块"><a href="#Yum-和-Apt-模块" class="headerlink" title="Yum 和 Apt 模块"></a>Yum 和 Apt 模块</h3><p>功能：管理软件包<br>yum 管理软件包，只支持RHEL，CentOS，fedora，不支持Ubuntu其它版本<br>apt 模块管理 Debian 相关版本的软件包<br>yum常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">name #软件包名称</span><br><span class="line">state #状态</span><br><span class="line">=present #安装,此为默认值</span><br><span class="line">=absent #删除</span><br><span class="line">=latest #最新版</span><br><span class="line">list #列出指定包</span><br><span class="line">enablerepo #启用哪个仓库安装</span><br><span class="line">disablerepo #不使用哪些仓库的包</span><br><span class="line">exclude #排除指定的包</span><br><span class="line">validate #是否检验,默认为yes</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#ansible websrvs -m yum -a &#x27;name=httpd state=present&#x27;</span><br><span class="line">#安装zabbix agent rpm包</span><br><span class="line"></span><br><span class="line">[root@ansible ~]#ansible websrvs -m yum -a &#x27;name=https://mirrors.tuna.tsinghua.edu.cn/zabbix/zabbix/5.0/rhel/8/x86_64/zabbix-agent2-5.0.24-1.el8.x86_64.rpm state=present validate_certs=no&#x27;</span><br><span class="line"></span><br><span class="line">#启用epel源进行安装</span><br><span class="line">[root@ansible ~]#ansible websrvs -m yum -a &#x27;name=nginx state=present enablerepo=epel&#x27;</span><br><span class="line"></span><br><span class="line">#升级除kernel和foo开头以外的所有包</span><br><span class="line">[root@ansible ~]#ansible websrvs -m yum -a &#x27;name=* state=lastest exclude=kernel*,foo*&#x27;</span><br><span class="line"></span><br><span class="line">#删除</span><br><span class="line">[root@ansible ~]#ansible websrvs -m yum -a &#x27;name=httpd state=absent&#x27;</span><br><span class="line">[root@ansible ~]#ansible websrvs -m yum -a &#x27;name=sl,cowsay&#x27;</span><br></pre></td></tr></table></figure><h3 id="yum-repository-模块"><a href="#yum-repository-模块" class="headerlink" title="yum_repository 模块"></a>yum_repository 模块</h3><p>功能: 此模块实现yum的仓库配置管理<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name #仓库id</span><br><span class="line">description #仓库描述名称,对应配置文件中的name=</span><br><span class="line">baseurl #仓库的地址</span><br><span class="line">gpgcheck #验证开启</span><br><span class="line">gpgkey #仓库公钥路径</span><br><span class="line">state=absen  #删除</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ansible websrvs -m yum_repository -a &#x27;name=ansible_nginx description=&quot;nginx repo&quot; baseurl=&quot;http://nginx.org/packages/centos/$releasever/$basearch/&quot; gpgcheck=yes gpgkey=&quot;https://nginx.org/keys/nginx_signing.key&quot;&#x27;</span><br><span class="line"></span><br><span class="line">[root@rocky8 ~]#cat /etc/yum.repos.d/ansible_nginx.repo</span><br><span class="line">[ansible_nginx]</span><br><span class="line">baseurl = http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck = 1</span><br><span class="line">gpgkey = https://nginx.org/keys/nginx_signing.key</span><br><span class="line">name = nginx repo</span><br></pre></td></tr></table></figure><h3 id="Service-模块"><a href="#Service-模块" class="headerlink" title="Service 模块"></a>Service 模块</h3><p>此模块和sytemd功能相似,选项很多相同<br>功能：管理服务<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">name #服务名称</span><br><span class="line">state #服务状态</span><br><span class="line">=started #启动</span><br><span class="line">=stopped #停止</span><br><span class="line">=restarted #重启</span><br><span class="line">=reloaded #重载</span><br><span class="line">enabled #开启自启动</span><br><span class="line">daemon_reload #加载新的配置文件,适用于systemd模块</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m service -a &#x27;name=httpd state=started enabled=yes&#x27;</span><br><span class="line">ansible all -m service -a &#x27;name=httpd state=stopped&#x27;</span><br><span class="line">ansible all -m service -a &#x27;name=httpd state=reloaded&#x27;</span><br><span class="line">ansible all -m shell -a &quot;sed -i &#x27;s/^Listen 80/Listen 8080/&#x27;</span><br><span class="line">/etc/httpd/conf/httpd.conf&quot;</span><br><span class="line">ansible all -m service -a &#x27;name=httpd state=restarted&#x27;</span><br><span class="line">#重启动指定网卡服务</span><br><span class="line">ansible all -m service -a &#x27;name=network state=absent args=eth0&#x27;</span><br></pre></td></tr></table></figure><h3 id="User-模块"><a href="#User-模块" class="headerlink" title="User 模块"></a>User 模块</h3><p>功能：管理用户<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">name #创建的名称</span><br><span class="line">uid #指定uid</span><br><span class="line">group #指定基本组</span><br><span class="line">shell #登录shell类型默认/bin/bash</span><br><span class="line">create_home #是否创建家目录</span><br><span class="line">password #设定对应的密码，必须是加密后的字符串才行，否则不生效</span><br><span class="line">system #yes表示系统用户</span><br><span class="line">groups #附加组</span><br><span class="line">append #追加附加组使用,yes表示增加新的附加组</span><br><span class="line">state #absen删除</span><br><span class="line">remove #yes表示删除用户时将家目录一起删除</span><br><span class="line">generate_ssh_key #创建私钥</span><br><span class="line">ssh_keyu_bits #私钥位数</span><br><span class="line">ssh_key_file #私钥文件路径</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#创建用户</span><br><span class="line">ansible all -m user -a &#x27;name=user1 comment=&quot;test user&quot; uid=2048 home=/app/user1group=root&#x27;</span><br><span class="line">ansible all -m user -a &#x27;name=nginx comment=nginx uid=88 group=nginxgroups=&quot;root,daemon&quot; shell=/sbin/nologin system=yes create_home=nohome=/data/nginx non_unique=yes&#x27;</span><br><span class="line">#remove=yes表示删除用户及家目录等数据,默认remove=no</span><br><span class="line">ansible all -m user -a &#x27;name=nginx state=absent remove=yes&#x27;</span><br><span class="line">#生成123456加密的密码</span><br><span class="line">ansible localhost -m debug -a &quot;msg=&#123;&#123; &#x27;123456&#x27;| password_hash(&#x27;sha512&#x27;,&#x27;salt&#x27;)&#125;&#125;&quot; localhost | SUCCESS =&gt; &#123; &quot;msg&quot;: &quot;$6$salt$MktMKPZJ6t59GfxcJU20DwcwQzfMvOlHFVZiOVD71w.&quot;</span><br><span class="line">&#125;</span><br><span class="line">#用上面创建的密码创建用户</span><br><span class="line">ansible websrvs -m user -a &#x27;name=www group=www system=yes shell=/sbin/nlogin password=&quot;$6$salt$MktMKPZJ6t59GfxcJU20DwcwQzfMvOlHFVZiOVD71w.&quot;&#x27;</span><br><span class="line">#创建用户test,并生成4096bit的私钥</span><br><span class="line">ansible websrvs -m user -a &#x27;name=test generate_ssh_key=yes ssh_key_bits=4096 ssh_key_file=.ssh/id_rsa&#x27;</span><br></pre></td></tr></table></figure><h3 id="Group-模块"><a href="#Group-模块" class="headerlink" title="Group 模块"></a>Group 模块</h3><p>功能：管理组<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name #指定组名称</span><br><span class="line">gid #指定gid</span><br><span class="line">state</span><br><span class="line">=present #创建,默认</span><br><span class="line">=absent #删除</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#创建组</span><br><span class="line">ansible websrvs -m group -a &#x27;name=nginx gid=88 system=yes&#x27;</span><br><span class="line">#删除组</span><br><span class="line">ansible websrvs -m group -a &#x27;name=nginx state=absent&#x27;</span><br></pre></td></tr></table></figure><h3 id="Lineinfile-模块"><a href="#Lineinfile-模块" class="headerlink" title="Lineinfile 模块"></a>Lineinfile 模块</h3><p>ansible在使用sed进行替换时，经常会遇到需要转义的问题，而且ansible在遇到特殊符号进行替换时，<br>会存在问题，无法正常进行替换 。</p><p>ansible自身提供了两个模块：lineinfile模块和replace模块，可以方便的进行替换一般在ansible当中去修改某个文件的单行进行替换的时候需要使用lineinfile模块<br>功能：相当于sed，主要用于修改一行的文件内容<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">path #被控端文件的路径</span><br><span class="line">regexp #正则匹配语法格式,表示被替换的内容</span><br><span class="line">line #替换为的内容</span><br><span class="line">state #absent表示删除</span><br><span class="line">insertafter #插入到替换内容前面,如和regexp同时存在,只在没找到与regexp匹配时才使用</span><br><span class="line">insertafter</span><br><span class="line">insertbefore #插入到替换内容后面,如和regexp同时存在,只在没找到与regexp匹配时才使用</span><br><span class="line">insertafter</span><br><span class="line">backrefs #支持后面引用,yes和no</span><br><span class="line">backup #修改前先备份</span><br><span class="line">create #如果文件不存在,则创建,默认不存在会出错</span><br><span class="line">mode #指定权限</span><br><span class="line">owner #指定用户</span><br><span class="line">group #指定组</span><br><span class="line">#注意</span><br><span class="line">regexp参数 ：使用正则表达式匹配对应的行，当替换文本时，如果有多行文本都能被匹配，则只有最后面被</span><br><span class="line">匹配到的那行文本才会被替换，当删除文本时，如果有多行文本都能被匹配，这么这些行都会被删除。</span><br></pre></td></tr></table></figure><p>注意: 如果想进行多行匹配进行替换需要使用replace模块<br>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#修改监听端口</span><br><span class="line">ansible websrvs -m lineinfile -a &quot;path=/etc/httpd/conf/httpd.conf regexp=&#x27;^Listen&#x27; line=&#x27;Listen 8080&#x27;&quot;</span><br><span class="line"></span><br><span class="line">#修改SELinux</span><br><span class="line">ansible all -m lineinfile -a &quot;path=/etc/selinux/config regexp=&#x27;^SELINUX=&#x27;line=&#x27;SELINUX=disabled&#x27;&quot;</span><br><span class="line"></span><br><span class="line">#添加网关</span><br><span class="line">ansible webservers -m lineinfile -a &#x27;path=/etc/sysconfig/network-scripts/ifcfg-eth0 line=&quot;GATEWAY=10.0.0.254&quot;&#x27;</span><br><span class="line"></span><br><span class="line">#给主机增加一个网关，但需要增加到NAME=下面</span><br><span class="line">ansible webservers -m lineinfile -a &#x27;path=/etc/sysconfig/network-scripts/ifcfg-eth0 insertafter=&quot;^NAME=&quot; line=&quot;GATEWAY=10.0.0.254&quot;&#x27;</span><br><span class="line">#效果如下</span><br><span class="line">cat /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">DEVICE=eth0</span><br><span class="line">NAME=eth0</span><br><span class="line">GATEWAY=10.0.0.254</span><br><span class="line">#给主机增加一个网关，但需要增加到NAME=上面</span><br><span class="line">ansible webservers -m lineinfile -a &#x27;path=/etc/sysconfig/network-scripts/ifcfg-</span><br><span class="line">eth0 insertbefore=&quot;^NAME=&quot; line=&quot;GATEWAY=10.0.0.254&quot;&#x27;</span><br><span class="line">#效果如下</span><br><span class="line">cat /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">DEVICE=eth0</span><br><span class="line">GATEWAY=10.0.0.254</span><br><span class="line">NAME=eth0</span><br><span class="line">#删除网关</span><br><span class="line">ansible webservers -m lineinfile -a &#x27;path=/etc/sysconfig/network-scripts/ifcfg-eth0 regexp=&quot;^GATEWAY&quot; state=absent&#x27;</span><br><span class="line">#删除#开头的行</span><br><span class="line">ansible all -m lineinfile -a &#x27;dest=/etc/fstab state=absent regexp=&quot;^#&quot;&#x27;</span><br></pre></td></tr></table></figure><h3 id="Replace-模块"><a href="#Replace-模块" class="headerlink" title="Replace 模块"></a>Replace 模块</h3><p>该模块有点类似于sed命令，主要也是基于正则进行匹配和替换，建议使用<br>功能: 多行修改替换<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">path #被控端文件的路径</span><br><span class="line">regexp #正则匹配语法格式,表示被替换的内容</span><br><span class="line">replace #替换为的内容</span><br><span class="line">after #插入到替换内容前面,</span><br><span class="line">before #插入到替换内容后面</span><br><span class="line">backup #修改前先备份</span><br><span class="line">mode #指定权限</span><br><span class="line">owner #指定用户</span><br><span class="line">group #指定组</span><br></pre></td></tr></table></figure><p>范例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m replace -a &quot;path=/etc/fstab regexp=&#x27;^(UUID.*)&#x27; replace=&#x27;#\1&#x27;&quot;</span><br><span class="line">ansible all -m replace -a &quot;path=/etc/fstab regexp=&#x27;^#(UUID.*)&#x27; replace=&#x27;\1&#x27;&quot;</span><br></pre></td></tr></table></figure><h3 id="SELinux-模块"><a href="#SELinux-模块" class="headerlink" title="SELinux 模块"></a>SELinux 模块</h3><p>功能: 该模块管理 SELInux 策略<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">policy #指定SELINUXTYPE=targeted</span><br><span class="line">state #指定SELINUX=disabled</span><br></pre></td></tr></table></figure><p>范例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky ansible-apps]# ansible 192.168.32.132 -m selinux -a &#x27;state=disabled&#x27;</span><br><span class="line">192.168.32.132 | FAILED! =&gt; &#123;</span><br><span class="line">    &quot;msg&quot;: &quot;The module selinux was redirected to ansible.posix.selinux, which could not be loaded.&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># ansible版本2.13.3出现如下错误</span><br><span class="line"> &quot;msg&quot;: &quot;The module selinux was redirected to ansible.posix.selinux, which could not be loaded.&quot;</span><br><span class="line"> </span><br><span class="line"> # 解决方法</span><br><span class="line"> [root@rocky ansible-apps]# ansible-galaxy collection install ansible.posix</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 再次执行，显示成功</span><br><span class="line">[root@rocky ansible-apps]# ansible 192.168.32.132 -m selinux -a &#x27;state=disabled&#x27;</span><br><span class="line">[WARNING]: SELinux state temporarily changed from &#x27;enforcing&#x27; to &#x27;permissive&#x27;. State change will take effect next reboot.</span><br><span class="line">192.168.32.132 | CHANGED =&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;/usr/libexec/platform-python&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;changed&quot;: true,</span><br><span class="line">    &quot;configfile&quot;: &quot;/etc/selinux/config&quot;,</span><br><span class="line">    &quot;msg&quot;: &quot;Config SELinux state changed from &#x27;enforcing&#x27; to &#x27;disabled&#x27;&quot;,</span><br><span class="line">    &quot;policy&quot;: &quot;targeted&quot;,</span><br><span class="line">    &quot;reboot_required&quot;: true,</span><br><span class="line">    &quot;state&quot;: &quot;disabled&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="reboot-模块"><a href="#reboot-模块" class="headerlink" title="reboot 模块"></a>reboot 模块</h3><p>功能: 重启<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msg #重启提示</span><br><span class="line">pre_reboot_delay #重启前延迟时间的秒数</span><br><span class="line">post_reboot_delay #重启后延迟时间的秒数后,再验证系统正常启动</span><br><span class="line">reboot_timeout #重启后延迟时间再执行测试成功与否的命令</span><br><span class="line">test_command #执行测试成功与否的命令</span><br></pre></td></tr></table></figure><p>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#ansible websrvs -m reboot -a &#x27;msg=&quot;host will be reboot&quot;&#x27;</span><br></pre></td></tr></table></figure><h3 id="mount-模块"><a href="#mount-模块" class="headerlink" title="mount 模块"></a>mount 模块</h3><p>功能: 挂载和卸载文件系统<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">src #源设备路径，或网络地址</span><br><span class="line">path #挂载至本地哪个路径下</span><br><span class="line">fstype #设备类型； nfs</span><br><span class="line">opts #挂载的选项</span><br><span class="line">state #挂载还是卸载</span><br><span class="line">=present #永久挂载，但没有立即生效</span><br><span class="line">=absent #卸载临时挂载,并删除永久挂载</span><br><span class="line">=mounted #临时挂载</span><br><span class="line">=unmounted #临时卸载</span><br></pre></td></tr></table></figure><p>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#修改fstab文件永久挂载,但不立即生效</span><br><span class="line">mount websrvs -m mount -a &#x27;src=&quot;UUID=b3e48f45-f933-4c8e-a700-22a159ec9077&quot; path=/home fstype=xfs opts=noatime state=present&#x27;</span><br><span class="line">#临时取消挂载</span><br><span class="line">mount websrvs -m mount -a &#x27;path=/home fstype=xfs opts=noatime state=unmounted&#x27;</span><br><span class="line">#永久挂载,并立即生效</span><br><span class="line">ansible websrvs -m mount -a &#x27;src=10.0.0.8:/data/wordpress path=/var/www/html/wp- content/uploads opts=&quot;_netdev&quot; state=mounted&#x27;</span><br><span class="line">#永久卸载,并立即生效</span><br><span class="line">ansible websrvs -m mount -a &#x27;src=10.0.0.8:/data/wordpress path=/var/www/html/wp- content/uploads state=absent&#x27;</span><br></pre></td></tr></table></figure><h3 id="Setup-模块"><a href="#Setup-模块" class="headerlink" title="Setup 模块"></a>Setup 模块</h3><p>功能： setup 模块来收集主机的系统信息，这些 facts 信息可以直接以变量的形式使用，但是如果主机<br>较多，会影响执行速度<br>可以使用 gather_facts: no 来禁止 Ansible 收集 facts 信息<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filter #指定过滤条件</span><br></pre></td></tr></table></figure><p>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m setup</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_nodename&quot;</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_hostname&quot;  #  主机名称</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_domain&quot;</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_memtotal_mb&quot;</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_memory_mb&quot;</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_memfree_mb&quot;</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_os_family&quot;</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_distribution&quot;</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_distribution_major_version&quot;</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_distribution_version&quot;</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_processor_vcpus&quot;</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_all_ipv4_addresses&quot;</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_architecture&quot;</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_uptime_seconds&quot;</span><br><span class="line">ansible all -m setup -a &quot;filter=ansible_processor*&quot;</span><br><span class="line">ansible all -m setup -a &#x27;filter=ansible_env&#x27;</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#ansible all -m setup -a &#x27;filter=ansible_python_version&#x27;</span><br><span class="line">10.0.0.7 | SUCCESS =&gt; &#123;</span><br><span class="line">&quot;ansible_facts&quot;: &#123;</span><br><span class="line">&quot;ansible_python_version&quot;: &quot;2.7.5&quot;,</span><br><span class="line">&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;changed&quot;: false</span><br><span class="line">&#125;</span><br><span class="line">10.0.0.6 | SUCCESS =&gt; &#123;</span><br><span class="line">&quot;ansible_facts&quot;: &#123;</span><br><span class="line">&quot;ansible_python_version&quot;: &quot;2.6.6&quot;,</span><br><span class="line">&quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;changed&quot;: false</span><br><span class="line">&#125;</span><br><span class="line">10.0.0.8 | SUCCESS =&gt; &#123;</span><br><span class="line">&quot;ansible_facts&quot;: &#123;</span><br><span class="line">&quot;ansible_python_version&quot;: &quot;3.6.8&quot;,</span><br><span class="line">&quot;discovered_interpreter_python&quot;: &quot;/usr/libexec/platform-python&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;changed&quot;: false</span><br><span class="line">&#125;</span><br><span class="line">[root@ansible ~]#</span><br></pre></td></tr></table></figure><p>范例：取IP地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#取所有IP</span><br><span class="line">ansible 10.0.0.101 -m setup -a &#x27;filter=ansible_all_ipv4_addresses&#x27;</span><br><span class="line">10.0.0.101 | SUCCESS =&gt; &#123;</span><br><span class="line">&quot;ansible_facts&quot;: &#123;</span><br><span class="line">&quot;ansible_all_ipv4_addresses&quot;: [</span><br><span class="line">&quot;192.168.0.1&quot;,</span><br><span class="line">&quot;192.168.0.2&quot;,</span><br><span class="line">&quot;192.168.64.238&quot;,</span><br><span class="line">&quot;192.168.13.36&quot;,</span><br><span class="line">&quot;10.0.0.101&quot;,</span><br><span class="line">&quot;172.16.1.0&quot;,</span><br><span class="line">&quot;172.17.0.1&quot;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">&quot;changed&quot;: false</span><br><span class="line">&#125;</span><br><span class="line">#取默认IP</span><br><span class="line">ansible all -m setup -a &#x27;filter=&quot;ansible_default_ipv4&quot;&#x27;</span><br><span class="line">10.0.0.101 | SUCCESS =&gt; &#123;</span><br><span class="line">&quot;ansible_facts&quot;: &#123;</span><br><span class="line">&quot;ansible_default_ipv4&quot;: &#123;</span><br><span class="line">&quot;address&quot;: &quot;10.0.0.101&quot;,</span><br><span class="line">&quot;alias&quot;: &quot;eth0&quot;,</span><br><span class="line">&quot;broadcast&quot;: &quot;10.0.0.255&quot;,</span><br><span class="line">&quot;gateway&quot;: &quot;10.0.0.2&quot;,</span><br><span class="line">&quot;interface&quot;: &quot;eth0&quot;,</span><br><span class="line">&quot;macaddress&quot;: &quot;00:0c:29:e8:c7:9b&quot;,</span><br><span class="line">&quot;mtu&quot;: 1500,</span><br><span class="line">&quot;netmask&quot;: &quot;255.255.255.0&quot;,</span><br><span class="line">&quot;network&quot;: &quot;10.0.0.0&quot;,</span><br><span class="line">&quot;type&quot;: &quot;ether&quot;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;changed&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="debug-模块"><a href="#debug-模块" class="headerlink" title="debug 模块"></a>debug 模块</h3><p>功能: 此模块可以用于输出信息,并且通过 msg 定制输出的信息内容,功能类似于echo命令<br>注意: msg后面的变量有时需要加 “ “ 引起来<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msg #指定命令输出的信息</span><br><span class="line">var #指定变量名,和msg互斥</span><br><span class="line">verbosity #详细度</span><br></pre></td></tr></table></figure><p>范例: debug 模块默认输出Hello world</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@ansible ~]#ansible 10.0.0.18 -m debug</span><br><span class="line">10.0.0.18 | SUCCESS =&gt; &#123;</span><br><span class="line">&quot;msg&quot;: &quot;Hello world!&quot;</span><br><span class="line">&#125;</span><br><span class="line">[root@ansible ansible]#cat debug.yml</span><br><span class="line">---</span><br><span class="line">- hosts: websrvs</span><br><span class="line">tasks:</span><br><span class="line">- name: output Hello world</span><br><span class="line">debug:</span><br><span class="line">#默认没有指定msg,默认输出&quot;Hello world!&quot;</span><br><span class="line">[root@ansible ansible]#ansible-playbook debug.yml</span><br><span class="line">.....</span><br><span class="line">TASK [output variables]</span><br><span class="line">********************************************************************************</span><br><span class="line">******************************</span><br><span class="line">ok: [10.0.0.7] =&gt; &#123;</span><br><span class="line">&quot;msg&quot;: &quot;Hello world!&quot;</span><br><span class="line">&#125;</span><br><span class="line">ok: [10.0.0.8] =&gt; &#123;</span><br><span class="line">&quot;msg&quot;: &quot;Hello world!&quot;</span><br><span class="line">&#125;</span><br><span class="line">PLAY RECAP</span><br><span class="line">********************************************************************************</span><br><span class="line">*******************************************</span><br><span class="line">10.0.0.7 : ok=2 changed=0 unreachable=0 failed=0</span><br><span class="line">skipped=0 rescued=0 ignored=0</span><br><span class="line">10.0.0.8 : ok=2 changed=0 unreachable=0 failed=0</span><br><span class="line">skipped=0 rescued=0 ignored=0</span><br></pre></td></tr></table></figure><p>范例: 利用debug 模块输出变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#cat debug.yaml</span><br><span class="line">---</span><br><span class="line">- hosts: websrvs</span><br><span class="line">tasks:</span><br><span class="line">- name: output variables</span><br><span class="line">debug:</span><br><span class="line">msg: Host &quot;&#123;&#123; ansible_nodename &#125;&#125;&quot; Ip &quot;&#123;&#123; ansible_default_ipv4.address</span><br><span class="line">&#125;&#125;&quot;</span><br><span class="line">[root@centos8 ~]#ansible-playbook debug.yaml</span><br><span class="line">PLAY [websrvs]</span><br><span class="line">********************************************************************************</span><br><span class="line">***************************************</span><br><span class="line">TASK [Gathering Facts]</span><br><span class="line">********************************************************************************</span><br><span class="line">*******************************</span><br><span class="line">ok: [10.0.0.7]</span><br><span class="line">ok: [10.0.0.8]</span><br><span class="line">TASK [output variables]</span><br><span class="line">********************************************************************************</span><br><span class="line">******************************</span><br><span class="line">ok: [10.0.0.7] =&gt; &#123;</span><br><span class="line">&quot;msg&quot;: &quot;Host \&quot;centos7.wangxiaochun.com\&quot; Ip \&quot;10.0.0.7\&quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line">ok: [10.0.0.8] =&gt; &#123;</span><br><span class="line">&quot;msg&quot;: &quot;Host \&quot;centos8.wangxiaochun.com\&quot; Ip \&quot;10.0.0.8\&quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line">PLAY RECAP</span><br><span class="line">********************************************************************************</span><br><span class="line">*******************************************</span><br><span class="line">10.0.0.7 : ok=2 changed=0 unreachable=0 failed=0</span><br><span class="line">skipped=0 rescued=0 ignored=0</span><br><span class="line">10.0.0.8 : ok=2 changed=0 unreachable=0 failed=0</span><br><span class="line">skipped=0 rescued=0 ignored=0</span><br></pre></td></tr></table></figure><p>范例: 显示字符串特定字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># cat debug.yml</span><br><span class="line">- hosts: all</span><br><span class="line">  gather_facts: no</span><br><span class="line">  vars:</span><br><span class="line">    a: &quot;12345&quot;</span><br><span class="line">  tasks:</span><br><span class="line">  - debug:</span><br><span class="line">    msg:</span><br><span class="line">      - &quot;&#123;&#123;a[0]&#125;&#125;&quot;</span><br><span class="line">      - &quot;&#123;&#123;a[1]&#125;&#125;&quot;</span><br><span class="line">      - &quot;&#123;&#123;a[2]&#125;&#125;&quot;</span><br><span class="line">#定义了一个字符串变量a，如果想要获取a字符串的第3个字符，则可以使用”a[2]”获取，索引从0开始，执行上例playbook，debug的输出信息如下：</span><br><span class="line">TASK [debug] *************************</span><br><span class="line">ok: [test1] =&gt; &#123;</span><br><span class="line">&quot;msg&quot;: &quot;1&quot;</span><br><span class="line">&quot;msg&quot;: &quot;2&quot;</span><br><span class="line">&quot;msg&quot;: &quot;3&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="sysctl-模块"><a href="#sysctl-模块" class="headerlink" title="sysctl 模块"></a>sysctl 模块</h3><p>功能: 修改内核参数<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name #内核参数</span><br><span class="line">value #指定值</span><br><span class="line">state #是否保存在sysctl.conf文件中,默认present</span><br><span class="line">sysctl_set #使用sysctl -w 验证值生效</span><br></pre></td></tr></table></figure><p>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible websrvs -m sysctl -a &#x27;name=net.ipv4.ip_forward value=1 state=present&#x27;</span><br></pre></td></tr></table></figure><p>范例: 内核参数优化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">- name: Change Port Range</span><br><span class="line">  sysctl:</span><br><span class="line">    name: net.ipv4.ip_local_port_range</span><br><span class="line">value: &#x27;1024 65000&#x27;</span><br><span class="line">sysctl_set: yes</span><br><span class="line">- name: Enabled Forward</span><br><span class="line">  sysctl:</span><br><span class="line">name: net.ipv4.ip_forward</span><br><span class="line">value: &#x27;1&#x27;</span><br><span class="line">sysctl_set: yes</span><br><span class="line">- name: Enabled tcp_reuse</span><br><span class="line">  sysctl:</span><br><span class="line">    name: net.ipv4.tcp_tw_reuse</span><br><span class="line">    value: &#x27;1&#x27;</span><br><span class="line">    sysctl_set: yes</span><br><span class="line">- name: Chanage tcp tw_buckets</span><br><span class="line">  sysctl:</span><br><span class="line">    name: net.ipv4.tcp_max_tw_buckets</span><br><span class="line">    value: &#x27;5000&#x27;</span><br><span class="line">    sysctl_set: yes</span><br><span class="line">- name: Chanage tcp_syncookies</span><br><span class="line">  sysctl:</span><br><span class="line">    name: net.ipv4.tcp_syncookies</span><br><span class="line">    value: &#x27;1&#x27;</span><br><span class="line">    sysctl_set: yes</span><br><span class="line">- name: Chanage tcp max_syn_backlog</span><br><span class="line">  sysctl:</span><br><span class="line">    name: net.ipv4.tcp_max_syn_backlog</span><br><span class="line">    value: &#x27;8192&#x27;</span><br><span class="line">    sysctl_set: yes</span><br><span class="line">- name: Chanage tcp Established Maxconn</span><br><span class="line">  sysctl:</span><br><span class="line">    name: net.core.somaxconn</span><br><span class="line">    value: &#x27;32768&#x27;</span><br><span class="line">    sysctl_set: yes</span><br><span class="line">    state: present</span><br><span class="line">- name: Chanage tcp_syn_retries</span><br><span class="line">  sysctl:</span><br><span class="line">    name: net.ipv4.tcp_syn_retries</span><br><span class="line">    value: &#x27;2&#x27;</span><br><span class="line">    sysctl_set: yes</span><br><span class="line">    state: present</span><br><span class="line">- name: Chanage net.ipv4.tcp_synack_retries</span><br><span class="line">  sysctl:</span><br><span class="line">    name: net.ipv4.tcp_synack_retries</span><br><span class="line">    value: &#x27;2&#x27;</span><br><span class="line">    sysctl_set: yes</span><br><span class="line">    state: presen</span><br></pre></td></tr></table></figure><h3 id="pam-limits"><a href="#pam-limits" class="headerlink" title="pam_limits"></a>pam_limits</h3><p>功能: 管理资源限制<br>范例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- name: Change Limit /etc/security/limit.conf</span><br><span class="line">  pam_limits:</span><br><span class="line">  domain: &quot;*&quot;</span><br><span class="line">    limit_type: &quot;&#123;&#123; item.limit_type &#125;&#125;&quot;</span><br><span class="line">    limit_item: &quot;&#123;&#123; item.limit_item &#125;&#125;&quot;</span><br><span class="line">    value: &quot;&#123;&#123; item.value &#125;&#125;&quot;</span><br><span class="line">  loop:</span><br><span class="line">    - &#123; limit_type: &#x27;soft&#x27;, limit_item: &#x27;nofile&#x27;,value: &#x27;100000&#x27; &#125;</span><br><span class="line">    - &#123; limit_type: &#x27;hard&#x27;, limit_item: &#x27;nofile&#x27;,value: &#x27;10000&#x27; &#125;</span><br></pre></td></tr></table></figure><h3 id="apt-repository-模块"><a href="#apt-repository-模块" class="headerlink" title="apt_repository 模块"></a>apt_repository 模块</h3><p>功能: 此模块实现apt的仓库配置管理<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">repo #仓库信息</span><br><span class="line">state #添加或删除</span><br><span class="line">update_cache #是否apt update,默认yes</span><br><span class="line">filename #仓库文件,默认放在/etc/apt/sources.list.d/file.list</span><br></pre></td></tr></table></figure><p>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ansible ubuntu-servers -m apt_repository -a &#x27;repo=&quot;deb</span><br><span class="line">http://archive.canonical.com/ubuntu focal partner&quot; filename=google-chrome&#x27;</span><br><span class="line">[root@ubuntu2004 ~]#cat /etc/apt/sources.list.d/google-chrome.list</span><br><span class="line">deb http://archive.canonical.com/ubuntu focal partner</span><br></pre></td></tr></table></figure><h3 id="apt-key-模块"><a href="#apt-key-模块" class="headerlink" title="apt_key 模块"></a>apt_key 模块</h3><p>功能: 添加和删除apt key<br>常见选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url #key路径</span><br><span class="line">state #添加或删除</span><br></pre></td></tr></table></figure><p>范例: 生成ceph仓库配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#先导入key,注意先后顺序</span><br><span class="line">ansible ubuntu-servers -m apt_key -a</span><br><span class="line">&#x27;url=https://download.ceph.com/keys/release.asc state=present&#x27;</span><br><span class="line">#再生成apt配置,如果不导入key此步会出错</span><br><span class="line">ansible ubuntu-servers -m apt_repository -a &#x27;repo=&quot;deb</span><br><span class="line">http://mirror.tuna.tsinghua.edu.cn/ceph/debian-pacific focal main&quot;</span><br><span class="line">filename=ansible_ceph&#x27;</span><br><span class="line">#验证结果</span><br><span class="line">[root@ubuntu2004 ~]#cat /etc/apt/sources.list.d/ansible_ceph.list</span><br><span class="line">deb http://mirror.tuna.tsinghua.edu.cn/ceph/debian-pacific focal main</span><br></pre></td></tr></table></figure><h3 id="其它模块"><a href="#其它模块" class="headerlink" title="其它模块"></a>其它模块</h3><p>ansible 还提供了很多针对各种应用的模块,比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">nginx_status_info</span><br><span class="line">nginx_status_facts</span><br><span class="line">mysql_db #需要安装MySQL-python包</span><br><span class="line">mysql_user #需要安装MySQL-python包</span><br><span class="line">redis</span><br><span class="line">mongodb*</span><br><span class="line">postgresql*</span><br><span class="line">haproxy</span><br><span class="line">git</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ansible </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>常用shell脚本</title>
      <link href="/2023/01/11/%E5%B8%B8%E7%94%A8shell%E8%84%9A%E6%9C%AC/"/>
      <url>/2023/01/11/%E5%B8%B8%E7%94%A8shell%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h3 id="显示系统信息"><a href="#显示系统信息" class="headerlink" title="显示系统信息"></a>显示系统信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">HOSTNAME=`hostname`</span></span><br><span class="line">IP=`ip a show ens33 | grep &quot;inet&quot; | grep -v &quot;inet6&quot; | awk &#x27;&#123;print $2&#125;&#x27; | cut -d&#x27;/&#x27; -f1`</span><br><span class="line">SYSTEM=`cat /etc/centos-release`</span><br><span class="line">CORE=`uname -r`</span><br><span class="line">CPU=`cat /proc/cpuinfo | grep &#x27;model name&#x27; |uniq | cut -d: -f2`</span><br><span class="line">MEMORY=`free -mh | grep -i &quot;mem&quot; | awk &#x27;&#123;print$2&#125;&#x27;`</span><br><span class="line">DISKNUM=`fdisk -l | grep -i &quot;/dev&quot; | grep -i &quot;disk&quot; | wc -l`</span><br><span class="line">systemname=(&quot;HOSTNAME&quot; &quot;IP&quot; &quot;SYSTEM VERSION&quot; &quot;CORE VERSION&quot; &quot;CPU&quot; &quot;MEMORY SIZE&quot;)</span><br><span class="line">systeminfo=(&quot;$HOSTNAME&quot; &quot;$IP&quot; &quot;$SYSTEM&quot; &quot;$CORE&quot; &quot;$CPU&quot; &quot;$MEMORY&quot;)</span><br><span class="line">for s in `seq 1 $DISKNUM`;do</span><br><span class="line">    eval DISK$s=`fdisk -l | grep -i &quot;/dev&quot; | grep -i &quot;disk&quot; | head -$s | tail -1|  awk &#x27;&#123;print $2$3$4&#125;&#x27; | cut -d&#x27;,&#x27; -f1`</span><br><span class="line">    eval systeminfo[$(($s+5))]=&#x27;$&#x27;DISK$s</span><br><span class="line">    systemname[$(($s+5))]=&quot;DISK$s SIZE&quot;</span><br><span class="line">done</span><br><span class="line">for i in $&#123;!systeminfo[*]&#125;;do</span><br><span class="line">    echo &quot;--------------------------------------------------------------&quot;</span><br><span class="line">    printf &quot;|%-15s| %-43s|\n&quot; &quot;$&#123;systemname[$i]&#125;&quot; &quot;$&#123;systeminfo[$i]&#125;&quot;</span><br><span class="line">done</span><br><span class="line">echo &quot;--------------------------------------------------------------&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx核心配置文件</title>
      <link href="/2023/01/10/Nginx%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
      <url>/2023/01/10/Nginx%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx核心配置文件"><a href="#Nginx核心配置文件" class="headerlink" title="Nginx核心配置文件"></a>Nginx核心配置文件</h1><h2 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a>配置文件说明</h2><p>nginx官网文档说明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://nginx.org/en/docs/</span><br></pre></td></tr></table></figure><p>tengine帮助文档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://tengine.taobao.org/nginx_docs/cn/docs</span><br></pre></td></tr></table></figure><p> Nginx的配置文件的组成部分： </p><p>主配置文件：nginx.conf </p><p>子配置文件: include conf.d&#x2F;*.conf </p><p>fastcgi， uwsgi，scgi 等协议相关的配置文件 mime.types：支持的mime类型，MIME(Multipurpose Internet Mail Extensions)多用途互联网邮 件扩展类型，MIME消息能包含文本、图像、音频、视频以及其他应用程序专用的数据，是设定某 种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动 使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。 MIME参考文档：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME</a>_ Types </p><p>nginx 配置文件格式说明 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">配置文件由指令与指令块构成</span><br><span class="line">每条指令以;分号结尾，指令与值之间以空格符号分隔</span><br><span class="line">可以将多条指令放在同一行,用分号分隔即可,但可读性差,不推荐</span><br><span class="line">指令块以&#123; &#125;大括号将多条指令组织在一起,且可以嵌套指令块</span><br><span class="line">include语句允许组合多个配置文件以提升可维护性</span><br><span class="line">使用#符号添加注释，提高可读性</span><br><span class="line">使用$符号使用变量</span><br><span class="line">部分指令的参数支持正则表达式</span><br></pre></td></tr></table></figure><p>Nginx主配置文件的配置指令方式</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">directive value [value2 ...];</span><br><span class="line">注意</span><br><span class="line">(1) 指令必须以分号结尾</span><br><span class="line">(2) 支持使用配置变量</span><br><span class="line"> 内建变量：由Nginx模块引入，可直接引用</span><br><span class="line"> 自定义变量：由用户使用set命令定义,格式: set variable_name value;</span><br><span class="line"> 引用变量：$variable_name</span><br></pre></td></tr></table></figure><p>主配置文件结构：四部分</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">main block：主配置段，即全局配置段，对http,mail都有效</span><br><span class="line">#事件驱动相关的配置</span><br><span class="line">event &#123;</span><br><span class="line"> ...</span><br><span class="line">&#125;  </span><br><span class="line">#http/https 协议相关配置段</span><br><span class="line">http &#123;</span><br><span class="line"> ...</span><br><span class="line">&#125;          </span><br><span class="line">#默认配置文件不包括下面两个块</span><br><span class="line">#mail 协议相关配置段</span><br><span class="line">mail &#123;</span><br><span class="line"> ...</span><br><span class="line">&#125;    </span><br><span class="line">#stream 服务器相关配置段</span><br><span class="line">stream &#123;</span><br><span class="line"> ...</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>默认的nginx.conf配置文件格式说明</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#全局配置端，对全局生效，主要设置nginx的启动用户/组，启动的工作进程数量，工作模式，Nginx的PID</span><br><span class="line">路径，日志路径等。</span><br><span class="line">user nginx nginx;</span><br><span class="line">worker_processes  1;   #启动工作进程数数量</span><br><span class="line">events &#123; #events设置快，主要影响nginx服务器与用户的网络连接，比如是否允许同时接受多个网络连</span><br><span class="line">接，使用哪种事件驱动模型处理请求，每个工作进程可以同时支持的最大连接数，是否开启对多工作进程下的</span><br><span class="line">网络连接进行序列化等。</span><br><span class="line">     worker_connections  1024;   #设置单个nginx工作进程可以接受的最大并发，作为web服务器</span><br><span class="line">的时候最大并发数为worker_connections * worker_processes，作为反向代理的时候为</span><br><span class="line">(worker_connections * worker_processes)/2</span><br><span class="line">&#125;</span><br><span class="line">http &#123; #http块是Nginx服务器配置中的重要部分，缓存、代理和日志格式定义等绝大多数功能和第三方模</span><br><span class="line">块都可以在这设置，http块可以包含多个server块，而一个server块中又可以包含多个location块，</span><br><span class="line">server块可以配置文件引入、MIME-Type定义、日志自定义、是否启用sendfile、连接超时时间和单个链</span><br><span class="line">接的请求上限等。</span><br><span class="line">   include       mime.types;</span><br><span class="line">   default_type application/octet-stream;</span><br><span class="line">   sendfile       on; #作为web服务器的时候打开sendfile加快静态文件传输，指定是否使用</span><br><span class="line">sendfile系统调用来传输文件,sendfile系统调用在两个文件描述符之间直接传递数据(完全在内核中操</span><br><span class="line">作)，从而避免了数据在内核缓冲区和用户缓冲区之间的拷贝，操作效率很高，被称之为零拷贝，硬盘 &gt;&gt;</span><br><span class="line">kernel buffer (快速拷贝到kernelsocket buffer) &gt;&gt;协议栈。</span><br><span class="line">   keepalive_timeout  65;  #长连接超时时间，单位是秒</span><br><span class="line">   server &#123; #设置一个虚拟机主机，可以包含自己的全局快，同时也可以包含多个location模块。比如</span><br><span class="line">本虚拟机监听的端口、本虚拟机的名称和IP配置，多个server 可以使用一个端口，比如都使用80端口提供</span><br><span class="line">web服务、</span><br><span class="line">       listen       80;  #配置server监听的端口</span><br><span class="line">       server_name localhost; #本server的名称，当访问此名称的时候nginx会调用当前</span><br><span class="line">serevr内部的配置进程匹配。</span><br><span class="line">       location / &#123; #location其实是server的一个指令，为nginx服务器提供比较多而且灵活的指</span><br><span class="line">令，都是在location中体现的，主要是基于nginx接受到的请求字符串，对用户请求的UIL进行匹配，并对特</span><br><span class="line">定的指令进行处理，包括地址重定向、数据缓存和应答控制等功能都是在这部分实现，另外很多第三方模块的</span><br><span class="line">配置也是在location模块中配置。</span><br><span class="line">           root   html; #相当于默认页面的目录名称，默认是安装目录的相对路径，可以使用绝对路</span><br><span class="line">径配置。</span><br><span class="line">           index index.html index.htm; #默认的页面文件名称</span><br><span class="line">       &#125;</span><br><span class="line">       error_page   500 502 503 504 /50x.html; #错误页面的文件名称</span><br><span class="line">       location = /50x.html &#123; #location处理对应的不同错误码的页面定义到/50x.html，这个</span><br><span class="line">跟对应其server中定义的目录下。</span><br><span class="line">           root   html;  #定义默认页面所在的目录</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">#和邮件相关的配置</span><br><span class="line">#mail &#123;</span><br><span class="line">#               ...</span><br><span class="line">#       &#125;         mail 协议相关配置段</span><br><span class="line">#tcp代理配置，1.9版本以上支持</span><br><span class="line">#stream &#123;</span><br><span class="line">#               ...</span><br><span class="line">#       &#125;       stream 服务器相关配置段</span><br><span class="line">#导入其他路径的配置文件</span><br><span class="line">#include /apps/nginx/conf.d/*.conf</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><p> Main 全局配置段常见的配置指令分类 </p><ul><li>正常运行必备的配置</li><li>优化性能相关的配置</li><li>用于调试及定位问题相关的配置</li><li>事件驱动相关的配置</li></ul><p>全局配置说明: </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">user nginx nginx; #启动Nginx工作进程的用户和组</span><br><span class="line">worker_processes [number | auto]; #启动Nginx工作进程的数量,一般设为和CPU核心数相同</span><br><span class="line">worker_cpu_affinity 00000001 00000010 00000100 00001000 | auto ; #将Nginx工作进程绑</span><br><span class="line">定到指定的CPU核心，默认Nginx是不进行进程绑定的，绑定并不是意味着当前nginx进程独占以一核心CPU，</span><br><span class="line">但是可以保证此进程不会运行在其他核心上，这就极大减少了nginx的工作进程在不同的cpu核心上的来回跳</span><br><span class="line">转，减少了CPU对进程的资源分配与回收以及内存管理等，因此可以有效的提升nginx服务器的性能。</span><br><span class="line"></span><br><span class="line">CPU MASK: 00000001：0号CPU</span><br><span class="line">          00000010：1号CPU</span><br><span class="line">  10000000：7号CPU</span><br><span class="line">#示例:</span><br><span class="line">worker_cpu_affinity 0001 0010 0100 1000;第0号---第3号CPU</span><br><span class="line">worker_cpu_affinity 0101 1010;</span><br><span class="line">#示例</span><br><span class="line">worker_processes  4;</span><br><span class="line">worker_cpu_affinity 00000010 00001000 00100000 10000000;</span><br><span class="line">[root@centos8 ~]# ps axo pid,cmd,psr | grep nginx</span><br><span class="line">31093 nginx: master process /apps   1</span><br><span class="line">34474 nginx: worker process         1</span><br><span class="line">34475 nginx: worker process         3</span><br><span class="line">34476 nginx: worker process         5</span><br><span class="line">34477 nginx: worker process         7</span><br><span class="line">35751 grep nginx</span><br><span class="line">#auto 绑定CPU</span><br><span class="line">#The special value auto (1.9.10) allows binding worker processes automatically to</span><br><span class="line">available CPUs:</span><br><span class="line">worker_processes auto;</span><br><span class="line">worker_cpu_affinity auto;</span><br><span class="line">#The optional mask parameter can be used to limit the CPUs available for</span><br><span class="line">automatic binding:</span><br><span class="line">worker_cpu_affinity auto 01010101;</span><br><span class="line">#错误日志记录配置，语法：error_log file [debug | info | notice | warn | error | crit</span><br><span class="line">| alert | emerg]</span><br><span class="line">#error_log logs/error.log;</span><br><span class="line">#error_log logs/error.log notice;</span><br><span class="line">error_log /usr/local/src/nginx/logs/error.log error;</span><br><span class="line">#pid文件保存路径</span><br><span class="line">pid       /usr/local/src/nginx/logs/nginx.pid;</span><br><span class="line">worker_priority 0; #工作进程优先级，-20~20(19)</span><br><span class="line">worker_rlimit_nofile 65536; #所有worker进程能打开的文件数量上限,包括:Nginx的所有连接（例</span><br><span class="line">如与代理服务器的连接等），而不仅仅是与客户端的连接,另一个考虑因素是实际的并发连接数不能超过系统级</span><br><span class="line">别的最大打开文件数的限制.最好与ulimit -n 或者limits.conf的值保持一致,</span><br><span class="line">daemon off;  #前台运行Nginx服务用于测试、或者以容器运行时，需要设为off</span><br><span class="line">master_process off|on; #是否开启Nginx的master-worker工作模式，仅用于开发调试场景,默认为</span><br><span class="line">on</span><br><span class="line">events &#123;</span><br><span class="line">   worker_connections  65536;  #设置单个工作进程的最大并发连接数</span><br><span class="line">   use epoll; #使用epoll事件驱动，Nginx支持众多的事件驱动，比如:select、poll、epoll，只</span><br><span class="line">能设置在events模块中设置。</span><br><span class="line">   accept_mutex on; #on为同一时刻一个请求轮流由worker进程处理,而防止被同时唤醒所有</span><br><span class="line">worker,避免多个睡眠进程被唤醒的设置，默认为off，新请求会唤醒所有worker进程,此过程也称为&quot;惊</span><br><span class="line">群&quot;，因此nginx刚安装完以后要进行适当的优化。建议设置为on</span><br><span class="line">   multi_accept on; #on时Nginx服务器的每个工作进程可以同时接受多个新的网络连接，此指令默认</span><br><span class="line">为off，即默认为一个工作进程只能一次接受一个新的网络连接，打开后几个同时接受多个。建议设置为on</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>范例：实现nginx高并发配置</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#ulimit -n 102400</span><br><span class="line">[root@centos7 ~]#while true;do ab -c 5000 -n 10000 http://10.0.0.8/;sleep</span><br><span class="line">0.5;done</span><br><span class="line">#默认配置不支持高并发,会出现以下错误日志</span><br><span class="line">[root@centos8 conf]#tail /usr/local/src/nginx/logs/error.log</span><br><span class="line">2020/09/24 21:19:33 [crit] 41006#0: *1105860 open() &quot;/apps/nginx/html/50x.html&quot;</span><br><span class="line">failed (24: Too many open files), client: 10.0.0.7, server: localhost, request:</span><br><span class="line">&quot;GET / HTTP/1.0&quot;, host: &quot;10.0.0.8&quot;</span><br><span class="line">2020/09/24 21:19:33 [crit] 41006#0: accept4() failed (24: Too many open files)</span><br><span class="line">2020/09/24 21:19:33 [crit] 41006#0: *1114177 open()</span><br><span class="line">&quot;/apps/nginx/html/index.html&quot; failed (24: Too many open files), client: 10.0.0.7,</span><br><span class="line">server: localhost, request: &quot;GET / HTTP/1.0&quot;, host: &quot;10.0.0.8&quot;</span><br><span class="line">#如果systemd启动,则需要修改nginx.service文件中加LimitNOFILE=100000,才能有效</span><br><span class="line">#如果非systemd启动,可以修改下面pam限制</span><br><span class="line">[root@centos8 ~]#vim /etc/security/limits.conf</span><br><span class="line">*               soft   nofile          1000000</span><br><span class="line">*               hard   nofile          1000000</span><br><span class="line">[root@centos8 ~]#vim /apps/nginx/conf/nginx.conf</span><br><span class="line">worker_rlimit_nofile 100000;</span><br><span class="line">[root@centos8 ~]#systemctl restart nginx</span><br><span class="line">[root@centos8 ~]# watch -n1 &#x27;ps -axo pid,cmd,nice | grep nginx #验证进程优先级</span><br></pre></td></tr></table></figure><h2 id="http配置块"><a href="#http配置块" class="headerlink" title="http配置块"></a>http配置块</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line"> ...</span><br><span class="line"> ...  #各server的公共配置</span><br><span class="line"> server &#123;    #每个server用于定义一个虚拟主机,第一个server为默认虚拟服务器</span><br><span class="line"> ...</span><br><span class="line"> &#125;</span><br><span class="line"> server &#123;    </span><br><span class="line"> ...</span><br><span class="line"> server_name   #虚拟主机名</span><br><span class="line"> root     #主目录</span><br><span class="line"> alias     #路径别名</span><br><span class="line"> location [OPERATOR] URL &#123;     #指定URL的特性</span><br><span class="line"> ...</span><br><span class="line"> if CONDITION &#123;</span><br><span class="line"> ...</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>http配置协议说明</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">   include       mime.types; #导入支持的文件类型,是相对于/usr/local/src/nginx/conf的目录</span><br><span class="line">   default_type application/octet-stream; #除mime.types中文件类型外,设置其它文件默认</span><br><span class="line">类型，访问其它类型时会提示下载不匹配的类型文件</span><br><span class="line">#日志配置部分</span><br><span class="line">    #log_format main &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">    #                 &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">    #                 &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line">    #access_log logs/access.log main;</span><br><span class="line">#自定义优化参数</span><br><span class="line">   sendfile       on;</span><br><span class="line">    #tcp_nopush     on; #在开启了sendfile的情况下，合并请求后统一发送给客户端,必须开启</span><br><span class="line">sendfile</span><br><span class="line">    #tcp_nodelay   off; #在开启了keepalived模式下的连接是否启用TCP_NODELAY选项，当为</span><br><span class="line">off时，延迟0.2s发送，默认On时，不延迟发送，立即发送用户响应报文。</span><br><span class="line">    #keepalive_timeout 0;</span><br><span class="line">   keepalive_timeout  65 65; #设置会话保持时间,第二个值为响应首部:keepAlived:timeout=65,可以和第一个值不同</span><br><span class="line">    #gzip on; #开启文件压缩</span><br><span class="line">   server &#123;</span><br><span class="line">       listen       80; #设置监听地址和端口</span><br><span class="line">       server_name localhost; #设置server name，可以以空格隔开写多个并支持正则表达式，</span><br><span class="line">如:*.magedu.com www.magedu.* ~^www\d+\.magedu\.com$ default_server</span><br><span class="line">        #charset koi8-r; #设置编码格式，默认是俄语格式，建议改为utf-8</span><br><span class="line">        #access_log logs/host.access.log main;</span><br><span class="line">       location / &#123;</span><br><span class="line">           root   html;</span><br><span class="line">           index index.html index.htm;</span><br><span class="line">       &#125;</span><br><span class="line">        #error_page 404             /404.html;</span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">       error_page   500 502 503 504 /50x.html; #定义错误页面</span><br><span class="line">       location = /50x.html &#123;</span><br><span class="line">           root   html;</span><br><span class="line">       &#125;</span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123; #以http的方式转发php请求到指定web服务器</span><br><span class="line">        #   proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123; #以fastcgi的方式转发php请求到php处理</span><br><span class="line">        #   root           html;</span><br><span class="line">        #   fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        #   fastcgi_index index.php;</span><br><span class="line">        #   fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name;</span><br><span class="line">        #   include       fastcgi_params;</span><br><span class="line">        #&#125;</span><br><span class="line">         # deny access to .htaccess files, if Apache&#x27;s document root</span><br><span class="line">        # concurs with nginx&#x27;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht &#123; #拒绝web形式访问指定文件，如很多的网站都是通过.htaccess文件来</span><br><span class="line">改变自己的重定向等功能。</span><br><span class="line">        #   deny all;</span><br><span class="line">        #&#125;</span><br><span class="line">       location ~ /passwd.html &#123;</span><br><span class="line">           deny all;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server &#123; #自定义虚拟server</span><br><span class="line">    #   listen       8000;</span><br><span class="line">    #   listen       somename:8080;</span><br><span class="line">    #   server_name somename alias another.alias;</span><br><span class="line">    #   location / &#123;</span><br><span class="line">    #       root   html;</span><br><span class="line">    #       index index.html index.htm; #指定默认网页文件，此指令由</span><br><span class="line">ngx_http_index_module模块提供</span><br><span class="line">    #   &#125;</span><br><span class="line">    #&#125;</span><br><span class="line">    # HTTPS server</span><br><span class="line">    #</span><br><span class="line">    #server &#123; #https服务器配置</span><br><span class="line">    #   listen       443 ssl;</span><br><span class="line">    #   server_name localhost;</span><br><span class="line">    #   ssl_certificate     cert.pem;</span><br><span class="line">    #   ssl_certificate_key cert.key;</span><br><span class="line">    #   ssl_session_cache   shared:SSL:1m;</span><br><span class="line">    #   ssl_session_timeout 5m;</span><br><span class="line">    #   ssl_ciphers HIGH:!aNULL:!MD5;</span><br><span class="line">    #   ssl_prefer_server_ciphers on;</span><br><span class="line">    #   location / &#123;</span><br><span class="line">    #       root   html;</span><br><span class="line">    #       index index.html index.htm;</span><br><span class="line">    #   &#125;</span><br><span class="line">    #&#125;</span><br></pre></td></tr></table></figure><h2 id="MIME"><a href="#MIME" class="headerlink" title="MIME"></a>MIME</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#在响应报文中将指定的文件扩展名映射至MIME对应的类型</span><br><span class="line">include           /etc/nginx/mime.types;</span><br><span class="line">default_type     application/octet-stream;#除mime.types中的类型外，指定其它文件的默认</span><br><span class="line">MIME类型，浏览器一般会提示下载</span><br><span class="line">types &#123;</span><br><span class="line">   text/html html;</span><br><span class="line">   image/gif gif;</span><br><span class="line">   image/jpeg jpg;</span><br><span class="line">&#125;</span><br><span class="line">#MIME参考文档：</span><br><span class="line">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_Types</span><br></pre></td></tr></table></figure><p>范例：识别PHP为text</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 conf]# vim /usr/local/src/nginx/html/test.php</span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件</span></span><br><span class="line">[root@centos7 conf]# vim /usr/local/src/nginx/conf/nginx.conf</span><br><span class="line">http &#123;</span><br><span class="line">   include       mime.types;</span><br><span class="line">   default_type text/html; # 加入次行</span><br><span class="line">......</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">或者修改为下面</span></span><br><span class="line">   include       mime.types;</span><br><span class="line">   default_type application/octet-stream;</span><br><span class="line">   types&#123;</span><br><span class="line">       text/plain php;  #加此行</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="指定响应报文server首部"><a href="#指定响应报文server首部" class="headerlink" title="指定响应报文server首部"></a>指定响应报文server首部</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#是否在响应报文中的Content-Type显示指定的字符集，默认off不显示</span><br><span class="line">charset charset | off;</span><br><span class="line">#示例</span><br><span class="line">charset utf-8;</span><br><span class="line">#是否在响应报文的Server首部显示nginx版本</span><br><span class="line">server_tokens on | off | build | string;</span><br></pre></td></tr></table></figure><p>修改server字段</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">如果想自定义响应报文的nginx版本信息，需要修改源码文件，重新编译</span><br><span class="line">如果server_tokens on，修改 src/core/nginx.h 修改第13-14行，如下示例</span><br><span class="line">#define NGINX_VERSION     &quot;1.68.9&quot;</span><br><span class="line">#define NGINX_VER         &quot;test/&quot; NGINX_VERSION</span><br><span class="line">如果server_tokens off，修改 src/http/ngx_http_header_filter_module.c</span><br><span class="line">第49行，如下示例：</span><br><span class="line">static char ngx_http_server_string[] = &quot;Server: nginx&quot; CRLF;</span><br><span class="line">把其中的nginx改为自己想要的文字即可,如：test</span><br></pre></td></tr></table></figure><h2 id="root-与-alias"><a href="#root-与-alias" class="headerlink" title="root 与 alias"></a>root 与 alias</h2><p>root：指定web的家目录，在定义location的时候，文件的绝对路径等于 root+location </p><p>alias：定义路径别名，会把访问的路径重新定义到其指定的路径,文档映射的另一种机制;仅能用于 location上下文,此指令使用较少 </p><p> 注意：location中使用root指令和alias指令的意义不同 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root 给定的路径对应于location中的/uri 左侧的/</span><br><span class="line">alias 给定的路径对应于location中的/uri 的完整路径</span><br></pre></td></tr></table></figure><h2 id="location-的详细使用"><a href="#location-的详细使用" class="headerlink" title="location 的详细使用"></a>location 的详细使用</h2><p>在一个server中location配置段可存在多个，用于实现从uri到文件系统的路径映射；ngnix会根据用户请 求的URI来检查定义的所有location，按一定的优先级找出一个最佳匹配，而后应用其配置 </p><p>在没有使用正则表达式的时候，nginx会先在server中的多个location选取匹配度最高的一个uri，uri是 用户请求的字符串，即域名后面的web文件路径，然后使用该location模块中的正则url和字符串，如果 匹配成功就结束搜索，并使用此location处理此请求。</p><p>location 官方帮助:  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://nginx.org/en/docs/http/ngx_http_core_module.html#location</span><br></pre></td></tr></table></figure><p>语法规则</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#语法规则：</span><br><span class="line">location [ = | ~ | ~* | ^~ ] uri &#123; ... &#125;</span><br><span class="line">=   #用于标准uri前，需要请求字串与uri精确匹配，大小敏感,如果匹配成功就停止向下匹配并立即处理请</span><br><span class="line">求</span><br><span class="line">^~  #用于标准uri前，表示包含正则表达式,并且匹配以指定的正则表达式开头,对uri的最左边部分做匹配</span><br><span class="line">检查，不区分字符大小写</span><br><span class="line">~   #用于标准uri前，表示包含正则表达式,并且区分大小写</span><br><span class="line">~*  #用于标准uri前，表示包含正则表达式,并且不区分大写</span><br><span class="line">不带符号 #匹配起始于此uri的所有的uri</span><br><span class="line">\   #用于标准uri前，表示包含正则表达式并且转义字符。可以将 . * ?等转义为普通符号</span><br><span class="line">#匹配优先级从高到低：</span><br><span class="line">=, ^~, ~/~*, 不带符号</span><br></pre></td></tr></table></figure><p>官网案例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">location = / &#123;</span><br><span class="line">   [ configuration A ]</span><br><span class="line">&#125;</span><br><span class="line">location / &#123;</span><br><span class="line">   [ configuration B ]</span><br><span class="line">&#125;</span><br><span class="line">location /documents/ &#123;</span><br><span class="line">   [ configuration C ]</span><br><span class="line">&#125;</span><br><span class="line">location ^~ /images/ &#123;</span><br><span class="line">   [ configuration D ]</span><br><span class="line">&#125;</span><br><span class="line">location ~* \.(gif|jpg|jpeg)$ &#123;</span><br><span class="line">   [ configuration E ]</span><br><span class="line">&#125;</span><br><span class="line">The “/” request will match configuration A(?), the “/index.html” request will</span><br><span class="line">match configuration B,</span><br><span class="line">the “/documents/document.html” request will match configuration C, the</span><br><span class="line">“/images/1.gif” request will match configuration D, and the “/documents/1.jpg”</span><br><span class="line">request will match configuration E.</span><br></pre></td></tr></table></figure><ul><li>精确匹配图片</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name localhost;</span><br><span class="line">root /data/web;</span><br><span class="line">index index.html *.html;</span><br><span class="line">location = /test.jpg &#123;</span><br><span class="line">  root /data/image;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>匹配案例-文件名后缀</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name localhost;</span><br><span class="line">root /data/web;</span><br><span class="line">index index.html *.html;</span><br><span class="line">location ~* \.(gif|jpg|jpeg|bmp|png|tiff|tif|ico|wmf|js|css)$ &#123;</span><br><span class="line">  root /data/web1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>匹配案例-优先级</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name localhost;</span><br><span class="line">        root /data/web;</span><br><span class="line">        index index.html *.html;</span><br><span class="line">        location = /test2.jpg &#123;</span><br><span class="line">          root /data/web2;</span><br><span class="line">          index index.html;</span><br><span class="line">&#125;</span><br><span class="line">        location ~* \.(gif|jpg|jpeg|bmp|png|tiff|tif|ico|wmf|js|css)$ &#123;</span><br><span class="line">          root /data/web1;</span><br><span class="line">          index index.html;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">#匹配优先级：=, ^~, ～/～*，/</span><br><span class="line">location优先级：(location =) &gt; (location ^~ 路径) &gt; (location ~,~* 正则顺序) &gt;</span><br><span class="line">(location 完整路径) &gt; (location 部分起始路径) &gt; (/)</span><br></pre></td></tr></table></figure><h2 id="Nginx-四层访问控制"><a href="#Nginx-四层访问控制" class="headerlink" title="Nginx 四层访问控制"></a>Nginx 四层访问控制</h2><p> 访问控制基于模块ngx_http_access_module实现，可以通过匹配客户端源IP地址进行限制 注意: 如果能在防火墙设备控制,最好就不要在nginx上配置,可以更好的节约资源 </p><p>官方帮助: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://nginx.org/en/docs/http/ngx_http_access_module.html</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">location = /login/ &#123;</span><br><span class="line">   root /data/nginx/html/pc;</span><br><span class="line">   allow 10.0.0.0/24;</span><br><span class="line">   deny all;</span><br><span class="line"> &#125;</span><br><span class="line">location /about &#123;</span><br><span class="line">   alias /data/nginx/html/pc;</span><br><span class="line">   index index.html;  </span><br><span class="line">   deny  192.168.1.1;   # 禁止该IP访问</span><br><span class="line">   allow 192.168.1.0/24;  # 允许该网段访问</span><br><span class="line">   allow 10.1.1.0/16;</span><br><span class="line">   allow 2001:0db8::/32;</span><br><span class="line">   deny all;  #按先小范围到大范围排序</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="Nginx-账户认证功能"><a href="#Nginx-账户认证功能" class="headerlink" title="Nginx 账户认证功能"></a>Nginx 账户认证功能</h2><p> 由 ngx_http_auth_basic_module 模块提供此功能 </p><p>官方帮助: </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html#auth_basic</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#CentOS安装包</span><br><span class="line">[root@centos7 ~]#yum -y install httpd-tools</span><br><span class="line">#Ubuntu安装包</span><br><span class="line">[root@Ubuntu ~]#apt -y install apache2-utils</span><br><span class="line"></span><br><span class="line">#创建用户</span><br><span class="line">#-b 非交互式方式提交密码</span><br><span class="line">[root@centos7 ~]# htpasswd -cb /usr/local/src/nginx/conf.d/passwd admin 123456</span><br><span class="line">Adding password for user admin</span><br><span class="line"></span><br><span class="line">[root@centos7 conf.d]# cat passwd </span><br><span class="line">admin:$apr1$/MugqAsJ$MbWcOmC5U9WTZlgK5MJeU.</span><br><span class="line">[root@centos7 conf.d]# </span><br><span class="line"></span><br><span class="line">#安全加固</span><br><span class="line">[root@centos7 ~]# chown nginx.nginx /usr/local/src/nginx/conf.d/passwd</span><br><span class="line">[root@centos7 ~]# chmod 600 /usr/local/src/nginx/conf.d/passwd</span><br><span class="line"></span><br><span class="line"># 修改配置文件</span><br><span class="line">server&#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name localhost;</span><br><span class="line">        root /data/web;</span><br><span class="line">        index index.html *.html;</span><br><span class="line">        location /about &#123;</span><br><span class="line">          alias /data/web1;</span><br><span class="line">          index index.html *.html;</span><br><span class="line">          auth_basic           &quot;login password&quot;;</span><br><span class="line">          auth_basic_user_file /usr/local/src/nginx/conf.d/passwd;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="检测文件是否存在"><a href="#检测文件是否存在" class="headerlink" title="检测文件是否存在"></a>检测文件是否存在</h2><p> try_files 会按顺序检查文件是否存在，返回第一个找到的文件或文件夹（结尾加斜线表示为文件夹）， 如果所有文件或文件夹都找不到，会进行一个内部重定向到最后一个参数。只有最后一个参数可以引起 一个内部重定向，之前的参数只设置内部URI的指向。最后一个参数是回退URI且必须存在，否则会出现 内部500错误。</p><p> 语法格式</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Syntax: try_files file ... uri;</span><br><span class="line">try_files file ... =code;</span><br><span class="line">Default: —</span><br><span class="line">Context: server, location</span><br></pre></td></tr></table></figure><p>范例： 如果不存在页面, 就转到default.html页面 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">listen 80;</span><br><span class="line">server_name localhost;</span><br><span class="line"> root /data/web;</span><br><span class="line">index index.html *.html;</span><br><span class="line">location / &#123;</span><br><span class="line">#如果不存在页面, 就转到default.html页面 </span><br><span class="line"> # try_files $uri  $uri.html $uri/index.html /about/default.html;</span><br><span class="line"> # 返回自定义状态码 489</span><br><span class="line">  try_files $uri $uri/index.html $uri.html =489;</span><br><span class="line">  index index.html *.html;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="长连接配置"><a href="#长连接配置" class="headerlink" title="长连接配置"></a>长连接配置</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">keepalive_timeout timeout [header_timeout];  #设定保持连接超时时长，0表示禁止长连接，默</span><br><span class="line">认为75s，通常配置在http字段作为站点全局配置</span><br><span class="line">keepalive_requests number;  #在一次长连接上所允许请求的资源的最大数量，默认为1000次,建议适</span><br><span class="line">当调大,比如:500</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">keepalive_requests 3;</span><br><span class="line">keepalive_timeout  65 60;</span><br><span class="line">#开启长连接后，返回客户端的会话保持时间为60s，单次长连接累计请求达到指定次数请求或65秒就会被断</span><br><span class="line">开，第二个数字60为发送给客户端应答报文头部中显示的超时时间设置为60s：如不设置客户端将不显示超时</span><br><span class="line">时间。</span><br><span class="line">Keep-Alive:timeout=60  #浏览器收到的服务器返回的报文</span><br><span class="line">#如果设置为0表示关闭会话保持功能，将如下显示：</span><br><span class="line">Connection:close  #浏览器收到的服务器返回的报文</span><br></pre></td></tr></table></figure><h2 id="作为下载服务器配置"><a href="#作为下载服务器配置" class="headerlink" title="作为下载服务器配置"></a>作为下载服务器配置</h2><p> nginx_http_autoindex_module 模块处理以斜杠字符 “&#x2F;“ 结尾的请求，并生成目录列表,可以做为下载服务 配置使用 官方文档: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://nginx.org/en/docs/http/ngx_http_autoindex_module.html#autoindex</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Syntax:autoindex on | off;</span><br><span class="line">Default:</span><br><span class="line">autoindex off;</span><br><span class="line">Context:http, server, location</span><br></pre></td></tr></table></figure><p>相关指令</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">autoindex on | off;#自动文件索引功能，默为off</span><br><span class="line">autoindex_exact_size on | off;  #计算文件确切大小（单位bytes），off 显示大概大小（单位</span><br><span class="line">K、M)，默认on</span><br><span class="line">autoindex_localtime on | off ; #显示本机时间而非GMT(格林威治)时间，默认off</span><br><span class="line">autoindex_format html | xml | json | jsonp; #显示索引的页面文件风格，默认html</span><br><span class="line">limit_rate rate; #限制响应客户端传输速率(除GET和HEAD以外的所有方法)，单位B/s,即</span><br><span class="line">bytes/second，默认值0,表示无限制,此指令由ngx_http_core_module提供</span><br><span class="line">set $limit_rate 4k; #也可以通变量限速,单位B/s,同时设置,此项优级高.Rate limit can also</span><br><span class="line">be set in the $limit_rate variable, however, since version 1.17.0, this method is</span><br><span class="line">not recommended:</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 配置文件</span><br><span class="line">location /download &#123;</span><br><span class="line">   autoindex on;    #自动索引功能</span><br><span class="line">   autoindex_exact_size   on; #计算文件确切大小（单位bytes），此为默认值,off只显示大概大</span><br><span class="line">小（单位kb、mb、gb）  </span><br><span class="line">   autoindex_localtime   on; #on表示显示本机时间而非GMT(格林威治)时间,默为为off显示GMT</span><br><span class="line">时间</span><br><span class="line">   limit_rate 1024k;   #限速,默认不限速</span><br><span class="line">   root /data/web/download;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">keepalive_disable none | browser ...;  </span><br><span class="line">#对哪种浏览器禁用长连接</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">limit_except method ... &#123; ... &#125;，仅用于location</span><br><span class="line">#禁止客户端使用除了指定的请求方法之外的其它方法,如果使用会出现403错误</span><br><span class="line">method:GET, HEAD, POST, PUT, DELETE，MKCOL, COPY, MOVE, OPTIONS, PROPFIND,</span><br><span class="line">PROPPATCH, LOCK, UNLOCK, PATCH</span><br><span class="line">limit_except GET &#123;</span><br><span class="line"> allow 192.168.0.0/24;</span><br><span class="line"> allow 10.0.0.1;</span><br><span class="line"> deny all;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#除了GET和HEAD 之外其它方法仅允许192.168.1.0/24网段主机使用</span><br><span class="line">location /upload &#123;</span><br><span class="line">       root /data/nginx/html/pc;</span><br><span class="line">       index index.html;</span><br><span class="line">       limit_except GET &#123;</span><br><span class="line">           allow  10.0.0.6;</span><br><span class="line">           deny all;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx平滑升级</title>
      <link href="/2023/01/07/Nginx%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7/"/>
      <url>/2023/01/07/Nginx%E5%B9%B3%E6%BB%91%E5%8D%87%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="平滑升级流程"><a href="#平滑升级流程" class="headerlink" title="平滑升级流程"></a>平滑升级流程</h1><p><img src="/../image.assets/1673076066017.png" alt="1673076066017"></p><p><img src="/../image.assets/1673076087140.png" alt="1673076087140"></p><ul><li>将旧Nginx二进制文件换成新Nginx程序文件（注意先备份)</li><li>向master进程发送USR2信号启动新nginx进程</li><li>master进程修改pid文件名加上后缀.oldbin,成为nginx.pid.oldbin</li><li>master进程用新Nginx文件启动新master进程及worker子进程成为旧master的子进程,系统中将有新旧两个Nginx主进程和对应的worker子进程并存<br>当前新的请求仍然由旧Nginx的worker进程进行处理,将新生成的master进程的PID存放至新生成的<br>pid文件nginx.pid</li><li>向旧的Nginx服务进程发送WINCH信号，使旧的Nginx worker进程平滑停止</li><li>向旧master进程发送QUIT信号，关闭旧master，并删除Nginx.pid.oldbin文件</li><li>如果发现升级有问题,可以回滚∶向旧master发送HUP，向新master发送QUIT</li></ul><h1 id="范例：Nginx1-18-0版本升级到1-20-2"><a href="#范例：Nginx1-18-0版本升级到1-20-2" class="headerlink" title="范例：Nginx1.18.0版本升级到1.20.2"></a>范例：Nginx1.18.0版本升级到1.20.2</h1><h2 id="Nginx1-18-0编译安装"><a href="#Nginx1-18-0编译安装" class="headerlink" title="Nginx1.18.0编译安装"></a>Nginx1.18.0编译安装</h2><p>官方源码包下载地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://nginx.org/en/download.html</span><br></pre></td></tr></table></figure><p>范例：编译安装</p><ul><li><p>系统centos8.5</p></li><li><p>Nginx版本：1.18.0</p></li><li><p>安装扩展依赖</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]# yum -y install gcc pcre-devel openssl-devel zlib-devel</span><br></pre></td></tr></table></figure><ul><li>创建用户和组</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd nginx</span><br><span class="line">useradd -s /sbin/nologin -g nginx nginx</span><br></pre></td></tr></table></figure><ul><li>下载安装包并解压</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]# cd /usr/local/src/</span><br><span class="line">[root@centos8 ~]# wget https://nginx.org/download/nginx-1.18.0.tar.gz</span><br><span class="line">[root@centos8 src]# tar xf nginx-1.18.0.tar.gz </span><br><span class="line">[root@centos8 src]# cd nginx-1.18.0</span><br></pre></td></tr></table></figure><ul><li>安装</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 nginx-1.18.0]# ./configure --prefix=/usr/local/src/nginx/ \  # 安装位置</span><br><span class="line">--user=nginx \   # 运行的用户</span><br><span class="line">--group=nginx \</span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_v2_module \</span><br><span class="line">--with-http_realip_module \</span><br><span class="line">--with-http_stub_status_module \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line">--with-pcre \</span><br><span class="line">--with-stream \</span><br><span class="line">--with-stream_ssl_module</span><br><span class="line"></span><br><span class="line">[root@centos8 nginx-1.18.0]#make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ul><li>修改权限</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 /]# chown -R nginx.nginx /usr/local/src/nginx/</span><br></pre></td></tr></table></figure><ul><li>nginx安装完成后有四个主要的目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 /]# ll /usr/local/src/nginx/</span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x. 2 nginx nginx 4096 Jan  4 15:17 conf</span><br><span class="line">drwxr-xr-x. 2 nginx nginx   40 Jan  4 15:17 html</span><br><span class="line">drwxr-xr-x. 2 nginx nginx    6 Jan  4 15:17 logs</span><br><span class="line">drwxr-xr-x. 2 nginx nginx   19 Jan  4 15:17 sbin</span><br><span class="line">[root@centos8 /]# </span><br><span class="line">conf：保存nginx所有的配置文件，其中nginx.conf是nginx服务器的最核心最主要的配置文件，其他</span><br><span class="line">的.conf则是用来配置nginx相关的功能的，例如fastcgi功能使用的是fastcgi.conf和</span><br><span class="line">fastcgi_params两个文件，配置文件一般都有一个样板配置文件，是以.default为后缀，使用时可将其复</span><br><span class="line">制并将default后缀去掉即可。</span><br><span class="line">html目录中保存了nginx服务器的web文件，但是可以更改为其他目录保存web文件,另外还有一个50x的web</span><br><span class="line">文件是默认的错误页面提示页面。</span><br><span class="line">logs：用来保存nginx服务器的访问日志错误日志等日志，logs目录可以放在其他</span><br></pre></td></tr></table></figure><ul><li>验证版本及编译参数</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 /]# ln -s /usr/local/src/nginx/sbin/nginx /usr/bin/</span><br><span class="line">[root@centos8 /]# nginx -V</span><br><span class="line">nginx version: nginx/1.18.0</span><br><span class="line">built by gcc 8.5.0 20210514 (Red Hat 8.5.0-4) (GCC) </span><br><span class="line">built with OpenSSL 1.1.1k  FIPS 25 Mar 2021</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/usr/local/src/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module</span><br><span class="line">[root@centos8 /]# </span><br></pre></td></tr></table></figure><ul><li>创建Nginx启动文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">复制同一版本的nginx的yum安装生成的service文件</span></span><br><span class="line">[root@centos8 ~]# vim /lib/systemd/system/nginx.service </span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=nginx - high performance web server </span><br><span class="line">Documentation=http://nginx.org/en/docs/</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service] </span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/usr/local/src/nginx/logs/nginx.pid</span><br><span class="line">ExecStartPre=/usr/local/src//nginx/sbin/nginx -t -c /usr/local/src/nginx/conf/nginx.conf</span><br><span class="line">ExecStart=/usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID </span><br><span class="line">ExecStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">[Install] </span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>验证启动文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#systemctl daemon-reload</span><br><span class="line">[root@centos8 ~]#systemctl enable --now nginx</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/nginx.service → /usr/lib/systemd/system/nginx.service.</span><br><span class="line">[root@centos8 ~]# </span><br></pre></td></tr></table></figure><ul><li>查看Nginx运行状态</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]# systemctl status nginx</span><br><span class="line">● nginx.service - nginx - high performance web server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/nginx.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Wed 2023-01-04 17:53:00 CST; 2 days ago</span><br><span class="line">     Docs: http://nginx.org/en/docs/</span><br><span class="line"> Main PID: 1595 (nginx)</span><br><span class="line">    Tasks: 2 (limit: 11218)</span><br><span class="line">   Memory: 9.1M</span><br><span class="line">   CGroup: /system.slice/nginx.service</span><br><span class="line">           ├─1595 nginx: master process /usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf</span><br><span class="line">           └─1596 nginx: worker process</span><br><span class="line"></span><br><span class="line">Jan 04 17:53:00 centos8 systemd[1]: Starting nginx - high performance web server...</span><br><span class="line">Jan 04 17:53:00 centos8 nginx[1592]: nginx: the configuration file /usr/local/src/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">Jan 04 17:53:00 centos8 nginx[1592]: nginx: configuration file /usr/local/src/nginx/conf/nginx.conf test is successful</span><br><span class="line">Jan 04 17:53:00 centos8 systemd[1]: nginx.service: Failed to parse PID from file /usr/local/src/nginx/logs/nginx.pid: Invalid argument</span><br><span class="line">Jan 04 17:53:00 centos8 systemd[1]: Started nginx - high performance web server.</span><br><span class="line">[root@centos8 ~]# </span><br></pre></td></tr></table></figure><h2 id="编译Nginx1-20-2"><a href="#编译Nginx1-20-2" class="headerlink" title="编译Nginx1.20.2"></a>编译Nginx1.20.2</h2><ul><li>下载Nginx1.20.2</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]# cd /usr/local/src/</span><br><span class="line">[root@centos8 src]# wget https://nginx.org/download/nginx-1.20.2.tar.gz</span><br><span class="line">[root@centos8 src]# tar xf nginx-1.20.2.tar.gz</span><br></pre></td></tr></table></figure><ul><li>查看旧版本Nginx编译选项</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 src]# nginx -V</span><br><span class="line">nginx version: nginx/1.18.0</span><br><span class="line">built by gcc 8.5.0 20210514 (Red Hat 8.5.0-4) (GCC) </span><br><span class="line">built with OpenSSL 1.1.1k  FIPS 25 Mar 2021</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/usr/local/src/nginx/ --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module</span><br><span class="line">[root@centos8 src]# </span><br></pre></td></tr></table></figure><ul><li>编译新版本，使用旧版本相同的编译参数选项</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 src]# cd nginx-1.20.2</span><br><span class="line">[root@centos8 nginx-1.20.2]# ./configure --prefix=/usr/local/src/nginx/ --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只需要make无需make install</span></span><br><span class="line">[root@centos8 nginx-1.20.2]# make</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译完的软件存在objs/nginx</span></span><br><span class="line">[root@centos8 nginx-1.20.2]# ll objs/</span><br><span class="line">total 7684</span><br><span class="line">-rw-r--r--. 1 root root   18498 Jan  7 15:29 autoconf.err</span><br><span class="line">-rw-r--r--. 1 root root   53217 Jan  7 15:29 Makefile</span><br><span class="line">-rwxr-xr-x. 1 root root 7697296 Jan  7 15:31 nginx</span><br><span class="line">-rw-r--r--. 1 root root    5557 Jan  7 15:31 nginx.8</span><br><span class="line">-rw-r--r--. 1 root root    7906 Jan  7 15:29 ngx_auto_config.h</span><br><span class="line">-rw-r--r--. 1 root root     657 Jan  7 15:29 ngx_auto_headers.h</span><br><span class="line">-rw-r--r--. 1 root root    8758 Jan  7 15:29 ngx_modules.c</span><br><span class="line">-rw-r--r--. 1 root root   60056 Jan  7 15:31 ngx_modules.o</span><br><span class="line">drwxr-xr-x. 9 root root      91 Jan  7 15:29 src</span><br><span class="line">[root@centos8 nginx-1.20.2]# </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看两个Nginx版本</span></span><br><span class="line">[root@centos8 nginx-1.20.2]# ./objs/nginx -v</span><br><span class="line">nginx version: nginx/1.20.2</span><br><span class="line">[root@centos8 nginx-1.20.2]# /usr/local/src/nginx/sbin/nginx -v</span><br><span class="line">nginx version: nginx/1.18.0</span><br><span class="line">[root@centos8 nginx-1.20.2]#</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份旧版本Nginx</span></span><br><span class="line">[root@centos8 nginx-1.20.2]# cp /usr/local/src/nginx/sbin/nginx /usr/local/src/nginx/sbin/nginx.old</span><br><span class="line">[root@centos8 nginx-1.20.2]# ll /usr/local/src/nginx/sbin/</span><br><span class="line">total 14776</span><br><span class="line">-rwxr-xr-x. 1 root root 7562368 Jan  4 17:39 nginx</span><br><span class="line">-rwxr-xr-x. 1 root root 7562368 Jan  7 15:36 nginx.old</span><br><span class="line">[root@centos8 nginx-1.20.2]# </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">把新版本的nginx命令复制过去覆盖旧版本程序文件,注意:需要加 -f 选项强制覆盖,否则会提示Text file busy</span></span><br><span class="line">[root@centos8 nginx-1.20.2]# cp -f objs/nginx /usr/local/src/nginx/sbin/</span><br><span class="line">cp: overwrite &#x27;/usr/local/src/nginx/sbin/nginx&#x27;? y</span><br><span class="line">[root@centos8 nginx-1.20.2]#</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检测是否存在问题，必须做的</span></span><br><span class="line">[root@centos8 nginx-1.20.2]# /usr/local/src/nginx/sbin/nginx -t</span><br><span class="line">nginx: the configuration file /usr/local/src/nginx//conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /usr/local/src/nginx//conf/nginx.conf test is successful</span><br><span class="line">[root@centos8 nginx-1.20.2]# </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">发送信号USR2 平滑升级可执行程序,将存储有旧版本主进程PID的文件重命名为nginx.pid.oldbin，并启动新的nginx</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">此时两个master的进程都在运行,只是旧的master不在监听,由新的master监听80</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">此时Nginx开启一个新的master进程，这个master进程会生成新的worker进程，这就是升级后的Nginx进程，此时老的进程不会自动退出，但是当接收到新的请求不作处理而是交给新的进程处理。</span></span><br><span class="line"></span><br><span class="line">[root@centos8 nginx-1.20.2]# kill -USR2 `cat /usr/local/src/nginx/logs/nginx.pid `</span><br><span class="line">[root@centos8 nginx-1.20.2]# </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">可以看到两个master,新的master是旧版master的子进程,并生成新版的worker进程</span></span><br><span class="line">[root@centos8 nginx-1.20.2]# ps aux | grep nginx</span><br><span class="line">root        1595  0.0  0.1  42452  2724 ?        Ss   Jan05   0:00 nginx: master process /usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf</span><br><span class="line">nginx       1596  0.0  0.2  77120  4612 ?        S    Jan05   0:00 nginx: worker process</span><br><span class="line">root        8328  0.0  0.3  42484  5860 ?        S    15:44   0:00 nginx: master process /usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf</span><br><span class="line">nginx       8329  0.0  0.2  77240  4652 ?        S    15:44   0:00 nginx: worker process</span><br><span class="line">root        8333  0.0  0.0  12136  1120 pts/0    S+   15:45   0:00 grep --color=auto nginx</span><br><span class="line">[root@centos8 nginx-1.20.2]# </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">先关闭旧nginx的worker进程,而不关闭nginx主进程方便回滚</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">向原Nginx主进程发送WINCH信号，它会逐步关闭旗下的工作进程（主进程不退出），这时所有请求都会由新版Nginx处理</span></span><br><span class="line"></span><br><span class="line">[root@centos8 nginx-1.20.2]# kill -WINCH `cat /usr/local/src/nginx/logs/nginx.pid.oldbin` </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果旧版worker进程有用户的请求,会一直等待处理完后才会关闭</span></span><br><span class="line">[root@centos8 nginx-1.20.2]# ps aux | grep nginx</span><br><span class="line">root        1595  0.0  0.1  42452  2724 ?        Ss   Jan05   0:00 nginx: master process /usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf</span><br><span class="line">root        8328  0.0  0.3  42484  5860 ?        S    15:44   0:00 nginx: master process /usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf</span><br><span class="line">nginx       8329  0.0  0.2  77240  5032 ?        S    15:44   0:00 nginx: worker process</span><br><span class="line">root        8346  0.0  0.0  12136  1144 pts/0    S+   15:48   0:00 grep --color=auto nginx</span><br><span class="line">[root@centos8 nginx-1.20.2]# </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">经过一段时间测试，新版本服务没问题，最后发送QUIT信号,退出老的master</span></span><br><span class="line">[root@centos8 nginx-1.20.2]# kill -QUIT `cat /usr/local/src/nginx/logs/nginx.pid.oldbin`</span><br><span class="line">[root@centos8 nginx-1.20.2]# </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看版本是否升级成功</span></span><br><span class="line">[root@centos8 nginx-1.20.2]# nginx -v</span><br><span class="line">nginx version: nginx/1.20.2</span><br><span class="line">[root@centos8 nginx-1.20.2]# </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">回滚</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果升级的版本发现问题需要回滚,可以发送HUP信号,重新拉起旧版本的worker</span></span><br><span class="line">[root@centos8 nginx-1.20.2]# kill -HUB `cat /usr/local/src/nginx/logs/nginx.pid.oldbin`</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">最后关闭新版的master</span></span><br><span class="line">[root@centos8 nginx-1.20.2]# kill -QUIT `cat /usr/local/src/nginx/logs/nginx.pid`</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-compose部署MySql</title>
      <link href="/2023/01/06/docker-compose%E9%83%A8%E7%BD%B2MySQL/"/>
      <url>/2023/01/06/docker-compose%E9%83%A8%E7%BD%B2MySQL/</url>
      
        <content type="html"><![CDATA[<h1 id="CentOS-Docker-安装"><a href="#CentOS-Docker-安装" class="headerlink" title="CentOS Docker 安装"></a>CentOS Docker 安装</h1><p>Docker 支持以下的 64 位 CentOS 版本：</p><ul><li>CentOS 7</li><li>CentOS 8</li><li>更高版本…</li></ul><h2 id="官方安装脚本自动安装"><a href="#官方安装脚本自动安装" class="headerlink" title="官方安装脚本自动安装"></a>官方安装脚本自动安装</h2><p>安装命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><p>也可以使用国内 daocloud 一键安装命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><h1 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h1><p>Compose 简介<br>Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML 文件配置中创建并启动所有服务。<br>Compose 安装<br>Linux 上我们可以从 Github 上下载它的二进制包来使用，最新发行的版本地址：<a href="https://github.com/docker/compose/releases%E3%80%82">https://github.com/docker/compose/releases。</a></p><p>运行以下命令以下载 Docker Compose 的当前稳定版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L &quot;https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>要安装其他版本的 Compose，请替换 v2.2.2。</p><p>Docker Compose 存放在 GitHub，不太稳定。</p><p>你可以也通过执行下面的命令，高速安装 Docker Compose。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/v2.4.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>将可执行权限应用于二进制文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>创建软链：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br></pre></td></tr></table></figure><p>测试是否安装成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# docker-compose version</span><br><span class="line">Docker Compose version v2.4.1</span><br></pre></td></tr></table></figure><h1 id="docker-compose一键部署mysql"><a href="#docker-compose一键部署mysql" class="headerlink" title="docker-compose一键部署mysql"></a>docker-compose一键部署mysql</h1><ul><li>创建安装目录,根据实际情况修改<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdr mysql</span><br><span class="line">cd mysql</span><br><span class="line">mkdir -p data/db</span><br><span class="line">mkdir etc</span><br></pre></td></tr></table></figure></li><li>编写docker-compose.yml<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd mysql</span><br><span class="line">vim docker-compose.yml</span><br></pre></td></tr></table></figure>docker-compose.yml内容如下<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3.1&#x27;</span><br><span class="line">services:</span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql:5.7 #mysql版本</span><br><span class="line">    container_name: $&#123;MYSQL_NAME&#125;</span><br><span class="line">    volumes:</span><br><span class="line">      - ./data/db:/var/lib/mysql</span><br><span class="line">      - ./etc/my.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - $&#123;MYSQL_PORT&#125;:3306</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: $&#123;MYSQL_ROOT_PASSWD&#125; #访问密码</span><br><span class="line">      secure_file_priv:</span><br></pre></td></tr></table></figure></li><li>创建MySQL配置文件<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd mysql/etc</span><br><span class="line">vim my.cnf</span><br></pre></td></tr></table></figure>my.cnf文件内容如下<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line">server-id=1</span><br><span class="line">pid-file        = /var/run/mysqld/mysqld.pid</span><br><span class="line">socket          = /var/run/mysqld/mysqld.sock</span><br><span class="line">datadir         = /var/lib/mysql</span><br><span class="line">sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</span><br><span class="line">symbolic-links=0</span><br><span class="line">secure_file_priv =</span><br><span class="line">wait_timeout=120</span><br><span class="line">interactive_timeout=120</span><br><span class="line">default-time_zone = &#x27;+8:00&#x27;</span><br><span class="line">skip-external-locking</span><br><span class="line">skip-name-resolve</span><br><span class="line">open_files_limit = 10240</span><br><span class="line">max_connections = 1000</span><br><span class="line">max_connect_errors = 6000</span><br><span class="line">table_open_cache = 800</span><br><span class="line">max_allowed_packet = 40m</span><br><span class="line">sort_buffer_size = 2M</span><br><span class="line">join_buffer_size = 1M</span><br><span class="line">thread_cache_size = 32</span><br><span class="line">query_cache_size = 64M</span><br><span class="line">transaction_isolation = READ-COMMITTED</span><br><span class="line">tmp_table_size = 128M</span><br><span class="line">max_heap_table_size = 128M</span><br><span class="line">log-bin = mysql-bin</span><br><span class="line">sync-binlog = 1</span><br><span class="line">binlog_format = ROW</span><br><span class="line">binlog_cache_size = 1M</span><br><span class="line">key_buffer_size = 128M</span><br><span class="line">read_buffer_size = 2M</span><br><span class="line">read_rnd_buffer_size = 4M</span><br><span class="line">bulk_insert_buffer_size = 64M</span><br><span class="line">lower_case_table_names = 1</span><br><span class="line">explicit_defaults_for_timestamp=true</span><br><span class="line">skip_name_resolve = ON</span><br><span class="line">event_scheduler = ON</span><br><span class="line">log_bin_trust_function_creators = 1</span><br><span class="line">innodb_buffer_pool_size = 512M</span><br><span class="line">innodb_flush_log_at_trx_commit = 1</span><br><span class="line">innodb_file_per_table = 1</span><br><span class="line">innodb_log_buffer_size = 4M</span><br><span class="line">innodb_log_file_size = 256M</span><br><span class="line">innodb_max_dirty_pages_pct = 90</span><br><span class="line">innodb_read_io_threads = 4</span><br><span class="line">innodb_write_io_threads = 4</span><br></pre></td></tr></table></figure></li><li>编写重启脚本<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd mysql</span><br><span class="line">vim restart.sh</span><br></pre></td></tr></table></figure></li></ul><p>restart.sh文件内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">docker-compose stop</span><br><span class="line">docker-compose rm -f</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><ul><li>编写.env文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim .env</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">容器名称</span></span><br><span class="line">MYSQL_NAME=docker-mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启用端口</span></span><br><span class="line">MYSQL_PORT=3306</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root密码</span></span><br><span class="line">MYSQL_ROOT_PASSWD=123456</span><br></pre></td></tr></table></figure><ul><li>验证</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行启动脚本</span></span><br><span class="line">bash restart.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看运行的容器</span></span><br><span class="line">docker ps</span><br><span class="line">CONTAINER ID   IMAGE                    COMMAND                  CREATED         STATUS         PORTS                                                  NAMES</span><br><span class="line">36d09017f331   mysql:5.7                &quot;docker-entrypoint.s…&quot;   2 minutes ago   Up 2 minutes   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   docker-mysql</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在线一键安装Nginx脚本</title>
      <link href="/2023/01/04/%E5%9C%A8%E7%BA%BF%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85Nginx%E8%84%9A%E6%9C%AC/"/>
      <url>/2023/01/04/%E5%9C%A8%E7%BA%BF%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85Nginx%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">#********************************************************************</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Author:yuankun</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Date: 2023-01-04</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">FileName：install_nginx.sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Description：The <span class="built_in">test</span> script</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">********************************************************************</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装资源下载路径</span></span><br><span class="line">SRC_DIR=/usr/local/src/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载地址</span></span><br><span class="line">NGINX_URL=http://nginx.org/download/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装版本</span></span><br><span class="line">NGINX_FILE=nginx-1.20.2</span><br><span class="line">TAR=.tar.gz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装路径</span></span><br><span class="line">NGINX_INSTALL_DIR=/usr/local/src/nginx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看CPU核心数</span></span><br><span class="line">CPUS=`lscpu |awk &#x27;/^CPU\(s\)/&#123;print $2&#125;&#x27;`</span><br><span class="line"></span><br><span class="line">. /etc/os-release</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">颜色</span></span><br><span class="line">color () &#123;</span><br><span class="line">    RES_COL=60</span><br><span class="line">    MOVE_TO_COL=&quot;echo -en \\033[$&#123;RES_COL&#125;G&quot;</span><br><span class="line">    SETCOLOR_SUCCESS=&quot;echo -en \\033[1;32m&quot;</span><br><span class="line">    SETCOLOR_FAILURE=&quot;echo -en \\033[1;31m&quot;</span><br><span class="line">    SETCOLOR_WARNING=&quot;echo -en \\033[1;33m&quot;</span><br><span class="line">    SETCOLOR_NORMAL=&quot;echo -en \E[0m&quot;</span><br><span class="line">    echo -n &quot;$1&quot; &amp;&amp; $MOVE_TO_COL</span><br><span class="line">    echo -n &quot;[&quot;</span><br><span class="line">    if [ $2 = &quot;success&quot; -o $2 = &quot;0&quot; ] ;then</span><br><span class="line">        $&#123;SETCOLOR_SUCCESS&#125;</span><br><span class="line">        echo -n $&quot;  OK  &quot;    </span><br><span class="line">    elif [ $2 = &quot;failure&quot; -o $2 = &quot;1&quot;  ] ;then </span><br><span class="line">        $&#123;SETCOLOR_FAILURE&#125;</span><br><span class="line">        echo -n $&quot;FAILED&quot;</span><br><span class="line">    else</span><br><span class="line">        $&#123;SETCOLOR_WARNING&#125;</span><br><span class="line">        echo -n $&quot;WARNING&quot;</span><br><span class="line">    fi</span><br><span class="line">    $&#123;SETCOLOR_NORMAL&#125;</span><br><span class="line">    echo -n &quot;]&quot;</span><br><span class="line">    echo </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">os_type () &#123;</span><br><span class="line">   awk -F&#x27;[ &quot;]&#x27; &#x27;/^NAME/&#123;print $2&#125;&#x27; /etc/os-release</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">os_version () &#123;</span><br><span class="line">   awk -F&#x27;&quot;&#x27; &#x27;/^VERSION_ID/&#123;print $2&#125;&#x27; /etc/os-release</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">check () &#123;</span><br><span class="line">    [ -e $&#123;NGINX_INSTALL_DIR&#125; ] &amp;&amp; &#123; color &quot;nginx 已安装,请卸载后再安装&quot; 1; exit; &#125;</span><br><span class="line">    cd  $&#123;SRC_DIR&#125;</span><br><span class="line">    if [  -e $&#123;NGINX_FILE&#125;$&#123;TAR&#125; ];then</span><br><span class="line">        color &quot;相关文件已准备好&quot; 0</span><br><span class="line">    else</span><br><span class="line">        color &#x27;开始下载 nginx 源码包&#x27; 0</span><br><span class="line">        wget $&#123;NGINX_URL&#125;$&#123;NGINX_FILE&#125;$&#123;TAR&#125; </span><br><span class="line">        [ $? -ne 0 ] &amp;&amp; &#123; color &quot;下载 $&#123;NGINX_FILE&#125;$&#123;TAR&#125;文件失败&quot; 1; exit; &#125; </span><br><span class="line">    fi</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">install () &#123;</span><br><span class="line">    color &quot;开始安装 nginx&quot; 0</span><br><span class="line">    if id nginx  &amp;&gt; /dev/null;then</span><br><span class="line">        color &quot;nginx 用户已存在&quot; 1 </span><br><span class="line">    else</span><br><span class="line">        useradd -s /sbin/nologin -r  nginx</span><br><span class="line">        color &quot;创建 nginx 用户&quot; 0 </span><br><span class="line">    fi</span><br><span class="line">    color &quot;开始安装 nginx 依赖包&quot; 0</span><br><span class="line">    if [ $ID == &quot;centos&quot; ] ;then</span><br><span class="line">    if [[ $VERSION_ID =~ ^7 ]];then</span><br><span class="line">            yum -y -q  install make gcc pcre-devel openssl-devel zlib-devel perl-ExtUtils-Embed</span><br><span class="line">elif [[ $VERSION_ID =~ ^8 ]];then</span><br><span class="line">            yum -y -q install make gcc-c++ libtool pcre pcre-devel zlib zlib-devel openssl openssl-devel perl-ExtUtils-Embed </span><br><span class="line">else </span><br><span class="line">            color &#x27;不支持此系统!&#x27;  1</span><br><span class="line">            exit</span><br><span class="line">        fi</span><br><span class="line">    elif [ $ID == &quot;rocky&quot;  ];then</span><br><span class="line">    yum -y -q install make gcc-c++ libtool pcre pcre-devel zlib zlib-devel openssl openssl-devel perl-ExtUtils-Embed </span><br><span class="line">else</span><br><span class="line">        apt update &amp;&gt; /dev/null</span><br><span class="line">        apt -y install make gcc libpcre3 libpcre3-dev openssl libssl-dev zlib1g-dev &amp;&gt; /dev/null</span><br><span class="line">    fi</span><br><span class="line">    cd $SRC_DIR</span><br><span class="line">    tar xf $&#123;NGINX_FILE&#125;$&#123;TAR&#125;</span><br><span class="line">    NGINX_DIR=`echo $&#123;NGINX_FILE&#125;$&#123;TAR&#125;| sed -nr &#x27;s/^(.*[0-9]).*/\1/p&#x27;`</span><br><span class="line">    cd $&#123;NGINX_DIR&#125; &amp;&amp; pwd</span><br><span class="line">    ./configure --prefix=$&#123;NGINX_INSTALL_DIR&#125; --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module</span><br><span class="line">    make -j $CPUS &amp;&amp; make install </span><br><span class="line">    [ $? -eq 0 ] &amp;&amp; color &quot;nginx 编译安装成功&quot; 0 ||  &#123; color &quot;nginx 编译安装失败,退出!&quot; 1 ;exit; &#125;</span><br><span class="line">    echo &quot;PATH=$&#123;NGINX_INSTALL_DIR&#125;/sbin:$&#123;PATH&#125;&quot; &gt; /etc/profile.d/nginx.sh</span><br><span class="line">    cat &gt; /lib/systemd/system/nginx.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=The nginx HTTP and reverse proxy server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=$&#123;NGINX_INSTALL_DIR&#125;/logs/nginx.pid</span><br><span class="line">ExecStartPre=/bin/rm -f $&#123;NGINX_INSTALL_DIR&#125;/logs/nginx.pid</span><br><span class="line">ExecStartPre=$&#123;NGINX_INSTALL_DIR&#125;/sbin/nginx -t</span><br><span class="line">ExecStart=$&#123;NGINX_INSTALL_DIR&#125;/sbin/nginx</span><br><span class="line">ExecReload=/bin/kill -s HUP \$MAINPID</span><br><span class="line">KillSignal=SIGQUIT</span><br><span class="line">TimeoutStopSec=5</span><br><span class="line">KillMode=process</span><br><span class="line">PrivateTmp=true</span><br><span class="line">LimitNOFILE=100000</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br><span class="line">    systemctl daemon-reload</span><br><span class="line">    systemctl enable --now nginx &amp;&gt; /dev/null </span><br><span class="line">    systemctl is-active nginx &amp;&gt; /dev/null ||  &#123; color &quot;nginx 启动失败,退出!&quot; 1 ; exit; &#125;</span><br><span class="line">    color &quot;nginx 安装完成&quot; 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">check</span><br><span class="line">install</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx安装和命令使用</title>
      <link href="/2023/01/01/nginx/"/>
      <url>/2023/01/01/nginx/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx安装"><a href="#Nginx安装" class="headerlink" title="Nginx安装"></a>Nginx安装</h1><h2 id="Nginx版本和安装方式"><a href="#Nginx版本和安装方式" class="headerlink" title="Nginx版本和安装方式"></a>Nginx版本和安装方式</h2><p>Nginx版本</p><ul><li>Mainline version 主要开发版本,一般为奇数版本号,比如1.19</li><li>Stable version 当前最新稳定版,一般为偶数版本,如:1.20</li><li>Legacy versions 旧的稳定版,一般为偶数版本,如:1.18</li></ul><p>Nginx安装可以使用yum或源码安装，但是推荐使用源码编译安装</p><ul><li>yum的版本比较旧</li><li>编译安装可以更方便自定义相关路径</li><li>使用源码编译可以自定义相关功能，更方便业务的上的使用</li></ul><h2 id="基于yum安装Nginx"><a href="#基于yum安装Nginx" class="headerlink" title="基于yum安装Nginx"></a>基于yum安装Nginx</h2><p>查看系统和EPEL的nginx版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">centos和rocky系统</span></span><br><span class="line">[root@centos8 ~]# yum list nginx</span><br><span class="line">Repository extras is listed more than once in the configuration</span><br><span class="line">Last metadata expiration check: 0:28:13 ago on Wed 04 Jan 2023 11:51:31 AM CST.</span><br><span class="line">Available Packages</span><br><span class="line">nginx.x86_64                                            1:1.14.1-9.module_el8.0.0+184+e34fea82                                             AppStream</span><br><span class="line">nginx.x86_64                                            1:1.14.1-9.module_el8.0.0+184+e34fea82                                             appstream</span><br><span class="line">[root@centos8 ~]# </span><br><span class="line">[root@centos8 ~]# dnf list nginx</span><br><span class="line">Repository extras is listed more than once in the configuration</span><br><span class="line">Last metadata expiration check: 0:28:55 ago on Wed 04 Jan 2023 11:51:31 AM CST.</span><br><span class="line">Available Packages</span><br><span class="line">nginx.x86_64                                            1:1.14.1-9.module_el8.0.0+184+e34fea82                                             AppStream</span><br><span class="line">nginx.x86_64                                            1:1.14.1-9.module_el8.0.0+184+e34fea82                                             appstream</span><br><span class="line">[root@centos8 ~]# </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ubuntu系统</span></span><br><span class="line">root@ubuntu2004:~# apt list nginx</span><br><span class="line">Listing... Done</span><br><span class="line">nginx/focal-updates,focal-security 1.18.0-0ubuntu1.4 all</span><br><span class="line">N: There is 1 additional version. Please use the &#x27;-a&#x27; switch to see it</span><br><span class="line">root@ubuntu2004:~# </span><br></pre></td></tr></table></figure><p>centos、rocky系统yum安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">centos、rocky系统安装nginx后未启动，使用如下命令启动</span></span><br><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure><p>ubuntu系统安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update;apt install nginx</span><br></pre></td></tr></table></figure><h3 id="官方包源安装Nginx"><a href="#官方包源安装Nginx" class="headerlink" title="官方包源安装Nginx"></a>官方包源安装Nginx</h3><p>系统和EPEL源的中 nignx版本较旧,可以安装官方源的最新版本<br>官方包链接:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://nginx.org/en/linux_packages.html</span><br></pre></td></tr></table></figure><p>官方 yum 源链接:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://nginx.org/en/linux_packages.html  #RHEL-CentOS</span><br></pre></td></tr></table></figure><p>通过官方 yum 源安装nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]# vim /etc/yum.repos.d/nginx.repo</span><br><span class="line">[nginx-stable]</span><br><span class="line">name=nginx stable repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/$releasever/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://nginx.org/keys/nginx_signing.key</span><br><span class="line">module_hotfixes=true</span><br><span class="line"></span><br><span class="line">[root@centos8 ~]# yum clean all</span><br><span class="line">42 files removed</span><br><span class="line">[root@centos8 ~]# yum makecache</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有的版本</span></span><br><span class="line"><span class="meta prompt_">[root@centos8]# </span><span class="language-bash">yum list nginx --showduplicates</span></span><br><span class="line">nginx stable repo                                                                                       462  B/s |  47 kB     01:44    </span><br><span class="line">Available Packages</span><br><span class="line">nginx.x86_64                                     1.16.0-1.el8.ngx                                                           nginx-stable</span><br><span class="line">nginx.x86_64                                     1:1.14.1-9.module+el8.4.0+542+81547229                                     appstream   </span><br><span class="line">nginx.x86_64                                     1:1.16.1-1.el8.ngx                                                         nginx-stable</span><br><span class="line">nginx.x86_64                                     1:1.18.0-1.el8.ngx                                                         nginx-stable</span><br><span class="line">nginx.x86_64                                     1:1.18.0-2.el8.ngx                                                         nginx-stable</span><br><span class="line">nginx.x86_64                                     1:1.20.0-1.el8.ngx                                                         nginx-stable</span><br><span class="line">nginx.x86_64                                     1:1.20.1-1.el8.ngx                                                         nginx-stable</span><br><span class="line">nginx.x86_64                                     1:1.20.2-1.el8.ngx                                                         nginx-stable</span><br><span class="line">nginx.x86_64                                     1:1.22.0-1.el8.ngx                                                         nginx-stable</span><br><span class="line">nginx.x86_64                                     1:1.22.1-1.el8.ngx                                                         nginx-stable </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装指定版本</span></span><br><span class="line">[root@centos8 ~]#yum -y install nginx-1.18.0</span><br></pre></td></tr></table></figure><h3 id="检查安装"><a href="#检查安装" class="headerlink" title="检查安装"></a>检查安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql nginx</span><br></pre></td></tr></table></figure><h3 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]# nginx -h</span><br><span class="line">····</span><br><span class="line">····</span><br><span class="line">····</span><br><span class="line">Options:</span><br><span class="line">-?,-h : this help</span><br><span class="line">-v : show version and exit</span><br><span class="line">-V : show version and configure options then exit #显示版本和编译参数</span><br><span class="line">-t : test configuration and exit #测试配置文件是否异常</span><br><span class="line">-T : test configuration, dump it and exit #测试并打印</span><br><span class="line">-q : suppress non-error messages during configuration testing #静默模式</span><br><span class="line">-s signal : send signal to a master process: stop, quit, reopen, reload #发送信号,reload信号 会生成新的worker,但master不会重新生成</span><br><span class="line">-p prefix : set prefix path (default: /etc/nginx/)#指定Nginx 目录</span><br><span class="line">-c filename : set configuration file (default: /etc/nginx/nginx.conf)#配置文件路径</span><br><span class="line">-g directives : set global directives out of configuration file#设置全局指令,注意和配置文件不要同时配置,否则冲突</span><br></pre></td></tr></table></figure><h3 id="验证配置文件"><a href="#验证配置文件" class="headerlink" title="验证配置文件"></a>验证配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]# nginx -t</span><br><span class="line">nginx: the configuration file /etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /etc/nginx/nginx.conf test is successful</span><br><span class="line">[root@centos8 ~]# </span><br></pre></td></tr></table></figure><h3 id="启动文件"><a href="#启动文件" class="headerlink" title="启动文件"></a>启动文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]# cat /lib/systemd/system/nginx.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=The nginx HTTP and reverse proxy server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/nginx.pid</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Nginx will fail to start <span class="keyword">if</span> /run/nginx.pid already exists but has the wrong</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">SELinux context. This might happen when running `nginx -t` from the cmdline.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">https://bugzilla.redhat.com/show_bug.cgi?<span class="built_in">id</span>=1268621</span></span><br><span class="line">ExecStartPre=/usr/bin/rm -f /run/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t</span><br><span class="line">ExecStart=/usr/sbin/nginx</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">KillSignal=SIGQUIT</span><br><span class="line">TimeoutStopSec=5</span><br><span class="line">KillMode=mixed</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">[root@centos8 ~]# </span><br></pre></td></tr></table></figure><h3 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now nginx</span><br></pre></td></tr></table></figure><h2 id="Nginx编译安装"><a href="#Nginx编译安装" class="headerlink" title="Nginx编译安装"></a>Nginx编译安装</h2><p>官方源码包下载地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://nginx.org/en/download.html</span><br></pre></td></tr></table></figure><p>范例：编译安装</p><ul><li><p>系统centos8.5</p></li><li><p>Nginx版本：1.18.0</p></li><li><p>安装扩展依赖</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]# yum -y install gcc pcre-devel openssl-devel zlib-devel</span><br></pre></td></tr></table></figure><ul><li>创建用户和组</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd nginx</span><br><span class="line">useradd -s /sbin/nologin -g nginx nginx</span><br></pre></td></tr></table></figure><ul><li>下载安装包并解压</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]# cd /usr/local/src/</span><br><span class="line">[root@centos8 ~]# wget https://nginx.org/download/nginx-1.18.0.tar.gz</span><br><span class="line">[root@centos8 src]# tar xf nginx-1.18.0.tar.gz </span><br><span class="line">[root@centos8 src]# cd nginx-1.18.0</span><br></pre></td></tr></table></figure><ul><li>安装</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 nginx-1.18.0]# ./configure --prefix=/usr/local/src/nginx/ \  # 安装位置</span><br><span class="line">--user=nginx \   # 运行的用户</span><br><span class="line">--group=nginx \</span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_v2_module \</span><br><span class="line">--with-http_realip_module \</span><br><span class="line">--with-http_stub_status_module \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line">--with-pcre \</span><br><span class="line">--with-stream \</span><br><span class="line">--with-stream_ssl_module</span><br><span class="line"></span><br><span class="line">[root@centos8 nginx-1.18.0]#make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ul><li>修改权限</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 /]# chown -R nginx.nginx /usr/local/src/nginx/</span><br></pre></td></tr></table></figure><ul><li>nginx安装完成后有四个主要的目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 /]# ll /usr/local/src/nginx/</span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x. 2 nginx nginx 4096 Jan  4 15:17 conf</span><br><span class="line">drwxr-xr-x. 2 nginx nginx   40 Jan  4 15:17 html</span><br><span class="line">drwxr-xr-x. 2 nginx nginx    6 Jan  4 15:17 logs</span><br><span class="line">drwxr-xr-x. 2 nginx nginx   19 Jan  4 15:17 sbin</span><br><span class="line">[root@centos8 /]# </span><br><span class="line">conf：保存nginx所有的配置文件，其中nginx.conf是nginx服务器的最核心最主要的配置文件，其他</span><br><span class="line">的.conf则是用来配置nginx相关的功能的，例如fastcgi功能使用的是fastcgi.conf和</span><br><span class="line">fastcgi_params两个文件，配置文件一般都有一个样板配置文件，是以.default为后缀，使用时可将其复</span><br><span class="line">制并将default后缀去掉即可。</span><br><span class="line">html目录中保存了nginx服务器的web文件，但是可以更改为其他目录保存web文件,另外还有一个50x的web</span><br><span class="line">文件是默认的错误页面提示页面。</span><br><span class="line">logs：用来保存nginx服务器的访问日志错误日志等日志，logs目录可以放在其他</span><br></pre></td></tr></table></figure><ul><li>验证版本及编译参数</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 /]# ln -s /usr/local/src/nginx/sbin/nginx /usr/bin/</span><br><span class="line">[root@centos8 /]# nginx -V</span><br><span class="line">nginx version: nginx/1.18.0</span><br><span class="line">built by gcc 8.5.0 20210514 (Red Hat 8.5.0-4) (GCC) </span><br><span class="line">built with OpenSSL 1.1.1k  FIPS 25 Mar 2021</span><br><span class="line">TLS SNI support enabled</span><br><span class="line">configure arguments: --prefix=/usr/local/src/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre --with-stream --with-stream_ssl_module</span><br><span class="line">[root@centos8 /]# </span><br></pre></td></tr></table></figure><ul><li>创建Nginx启动文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">复制同一版本的nginx的yum安装生成的service文件</span></span><br><span class="line">[root@centos8 ~]# vim /lib/systemd/system/nginx.service </span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=nginx - high performance web server </span><br><span class="line">Documentation=http://nginx.org/en/docs/</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service] </span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/usr/local/src/nginx/logs/nginx.pid</span><br><span class="line">ExecStartPre=/usr/local/src//nginx/sbin/nginx -t -c /usr/local/src/nginx/conf/nginx.conf</span><br><span class="line">ExecStart=/usr/local/src/nginx/sbin/nginx -c /usr/local/src/nginx/conf/nginx.conf</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID </span><br><span class="line">ExecStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">[Install] </span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>验证启动文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#systemctl daemon-reload</span><br><span class="line">[root@centos8 ~]#systemctl enable --now nginx</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/nginx.service → /usr/lib/systemd/system/nginx.service.</span><br><span class="line">[root@centos8 ~]# </span><br></pre></td></tr></table></figure><h2 id="Nginx命令和信号"><a href="#Nginx命令和信号" class="headerlink" title="Nginx命令和信号"></a>Nginx命令和信号</h2><p>nginx 命令支持向其发送信号,实现不同功能<br>nginx 格式</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx [-?hvVtTq] [-s signal] [-c filename] [-p prefix] [-g directives]</span><br></pre></td></tr></table></figure><p>选项说明</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">帮助: -? -h</span><br><span class="line">使用指定的配置文件: -c</span><br><span class="line">指定配置指令:-g</span><br><span class="line">指定运行目录:-p</span><br><span class="line">测试配置文件是否有语法错误:-t -T</span><br><span class="line">打印nginx的版本信息、编译信息等:-v -V</span><br><span class="line">发送信号: -s 示例: nginx -s reload</span><br></pre></td></tr></table></figure><p>信号说明</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">立刻停止服务:stop,相当于信号SIGTERM,SIGINT </span><br><span class="line">优雅的停止服务:quit,相当于信号SIGQUIT       </span><br><span class="line">平滑重启，重新加载配置文件: reload,相当于信号SIGHUP    </span><br><span class="line">重新开始记录日志文件:reopen,相当于信号SIGUSR1,在切割日志时用途较大</span><br><span class="line">平滑升级可执行程序:发送信号SIGUSR2,在升级版本时使用</span><br><span class="line">优雅的停止工作进程:发送信号SIGWINCH,在升级版本时使用</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis一键安装脚本</title>
      <link href="/2022/12/17/Redis%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/"/>
      <url>/2022/12/17/Redis%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<ul><li>在线安装</li><li>系统</li></ul><p>Centos7.9 、Rockylinux8.5、Centos8.5、ubuntu20.04实测安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">#********************************************************************</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Author:          yuankun</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Date:            2022-12-17</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">FileName：       install_redis.sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">URL:             https://gzyuankun.github.io</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Description:     The <span class="built_in">test</span> script</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Copyright (C):   2020 All rights reserved</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">********************************************************************</span></span><br><span class="line">REDIS_VERSION=redis-6.2.5</span><br><span class="line">PASSWORD=123456</span><br><span class="line">INSTALL_DIR=/usr/local/src/redis</span><br><span class="line">CPUS=`lscpu |awk &#x27;/^CPU\(s\)/&#123;print $2&#125;&#x27;`</span><br><span class="line"></span><br><span class="line">. /etc/os-release</span><br><span class="line"></span><br><span class="line">color () &#123;</span><br><span class="line">    RES_COL=60</span><br><span class="line">    MOVE_TO_COL=&quot;echo -en \\033[$&#123;RES_COL&#125;G&quot;</span><br><span class="line">    SETCOLOR_SUCCESS=&quot;echo -en \\033[1;32m&quot;</span><br><span class="line">    SETCOLOR_FAILURE=&quot;echo -en \\033[1;31m&quot;</span><br><span class="line">    SETCOLOR_WARNING=&quot;echo -en \\033[1;33m&quot;</span><br><span class="line">    SETCOLOR_NORMAL=&quot;echo -en \E[0m&quot;</span><br><span class="line">    echo -n &quot;$1&quot; &amp;&amp; $MOVE_TO_COL</span><br><span class="line">    echo -n &quot;[&quot;</span><br><span class="line">    if [ $2 = &quot;success&quot; -o $2 = &quot;0&quot; ] ;then</span><br><span class="line">        $&#123;SETCOLOR_SUCCESS&#125;</span><br><span class="line">        echo -n $&quot;  OK  &quot;    </span><br><span class="line">    elif [ $2 = &quot;failure&quot; -o $2 = &quot;1&quot;  ] ;then </span><br><span class="line">        $&#123;SETCOLOR_FAILURE&#125;</span><br><span class="line">        echo -n $&quot;FAILED&quot;</span><br><span class="line">    else</span><br><span class="line">        $&#123;SETCOLOR_WARNING&#125;</span><br><span class="line">        echo -n $&quot;WARNING&quot;</span><br><span class="line">    fi</span><br><span class="line">    $&#123;SETCOLOR_NORMAL&#125;</span><br><span class="line">    echo -n &quot;]&quot;</span><br><span class="line">    echo </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">prepare()&#123;</span><br><span class="line">    if [ $ID = &quot;centos&quot; -o $ID = &quot;rocky&quot; ];then</span><br><span class="line">        yum  -y install gcc make systemd-devel</span><br><span class="line">    else</span><br><span class="line">    apt update </span><br><span class="line">    apt -y install  gcc make libjemalloc-dev libsystemd-dev</span><br><span class="line">    fi</span><br><span class="line">    if [ $? -eq 0 ];then</span><br><span class="line">        color &quot;安装软件包成功&quot;  0</span><br><span class="line">    else</span><br><span class="line">        color &quot;安装软件包失败，请检查网络配置&quot; 1</span><br><span class="line">        exit</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">install() &#123;   </span><br><span class="line">    if [ ! -f $&#123;REDIS_VERSION&#125;.tar.gz ];then</span><br><span class="line">        wget http://download.redis.io/releases/$&#123;REDIS_VERSION&#125;.tar.gz || &#123; color &quot;Redis 源码下载失败&quot; 1 ; exit; &#125;</span><br><span class="line">    fi</span><br><span class="line">    tar xf $&#123;REDIS_VERSION&#125;.tar.gz -C /usr/local/src</span><br><span class="line">    cd /usr/local/src/$&#123;REDIS_VERSION&#125;</span><br><span class="line">    make -j $CUPS USE_SYSTEMD=yes PREFIX=$&#123;INSTALL_DIR&#125; install &amp;&amp; color &quot;Redis 编译安装完成&quot; 0 || &#123; color &quot;Redis 编译安装失败&quot; 1 ;exit ; &#125;</span><br><span class="line"></span><br><span class="line">    ln -s $&#123;INSTALL_DIR&#125;/bin/redis-*  /usr/bin/</span><br><span class="line">    </span><br><span class="line">    mkdir -p $&#123;INSTALL_DIR&#125;/&#123;etc,log,data,run&#125;</span><br><span class="line">  </span><br><span class="line">    cp redis.conf  $&#123;INSTALL_DIR&#125;/etc/</span><br><span class="line"></span><br><span class="line">    sed -i -e &#x27;s/bind 127.0.0.1/bind 0.0.0.0/&#x27;  -e &quot;/# requirepass/a requirepass $PASSWORD&quot;  -e &quot;/^dir .*/c dir $&#123;INSTALL_DIR&#125;/data/&quot;  -e &quot;/logfile .*/c logfile $&#123;INSTALL_DIR&#125;/log/redis-6379.log&quot;  -e  &quot;/^pidfile .*/c  pidfile $&#123;INSTALL_DIR&#125;/run/redis_6379.pid&quot; $&#123;INSTALL_DIR&#125;/etc/redis.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    if id redis &amp;&gt; /dev/null ;then </span><br><span class="line">         color &quot;Redis 用户已存在&quot; 1 </span><br><span class="line">    else</span><br><span class="line">         useradd -r -s /sbin/nologin redis</span><br><span class="line">         color &quot;Redis 用户创建成功&quot; 0</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    chown -R redis.redis $&#123;INSTALL_DIR&#125;</span><br><span class="line"></span><br><span class="line">    cat &gt;&gt; /etc/sysctl.conf &lt;&lt;EOF</span><br><span class="line">net.core.somaxconn = 1024</span><br><span class="line">vm.overcommit_memory = 1</span><br><span class="line">EOF</span><br><span class="line">    sysctl -p </span><br><span class="line">    if [ $ID = &quot;centos&quot; -o $ID = &quot;rocky&quot; ];then</span><br><span class="line">        echo &#x27;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27; &gt;&gt; /etc/rc.d/rc.local</span><br><span class="line">        chmod +x /etc/rc.d/rc.local</span><br><span class="line">        /etc/rc.d/rc.local </span><br><span class="line">    else </span><br><span class="line">        echo -e &#x27;#!/bin/bash\necho never &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27; &gt;&gt; /etc/rc.local</span><br><span class="line">        chmod +x /etc/rc.local</span><br><span class="line">        /etc/rc.local</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat &gt; /lib/systemd/system/redis.service &lt;&lt;EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Redis persistent key-value database</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=$&#123;INSTALL_DIR&#125;/bin/redis-server $&#123;INSTALL_DIR&#125;/etc/redis.conf --supervised systemd</span><br><span class="line">ExecStop=/bin/kill -s QUIT \$MAINPID</span><br><span class="line">Type=notify</span><br><span class="line">User=redis</span><br><span class="line">Group=redis</span><br><span class="line">RuntimeDirectory=redis</span><br><span class="line">RuntimeDirectoryMode=0755</span><br><span class="line">LimitNOFILE=1000000</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line">     systemctl daemon-reload </span><br><span class="line">     systemctl enable --now  redis &amp;&gt; /dev/null </span><br><span class="line">     if [ $? -eq 0 ];then</span><br><span class="line">         color &quot;Redis 服务启动成功,Redis信息如下:&quot;  0 </span><br><span class="line">     else</span><br><span class="line">         color &quot;Redis 启动失败&quot; 1 </span><br><span class="line">         exit</span><br><span class="line">     fi</span><br><span class="line">     sleep 2</span><br><span class="line">     redis-cli -a $PASSWORD INFO Server 2&gt; /dev/null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">prepare </span><br><span class="line">install </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos系统yum源配置</title>
      <link href="/2022/12/17/centos%E7%B3%BB%E7%BB%9Fyum%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/12/17/centos%E7%B3%BB%E7%BB%9Fyum%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<ul><li><p>系统<br>Centos7.9</p></li><li><p>步骤</p></li></ul><p>1.备份</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master ~]# mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</span><br></pre></td></tr></table></figure><p>2.创建&#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo文件并复制如下内容</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[base]</span><br><span class="line">name=CentOS-$releasever - Base</span><br><span class="line">baseurl=http://mirrors.163.com/centos/$releasever/os/$basearch/</span><br><span class="line">        http://mirrors.aliyun.com/centos/$releasever/os/$basearch/</span><br><span class="line">        http://mirrors.cloud.tencent.com/centos/$releasever/os/$basearch/</span><br><span class="line">        http://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/os/$basearch/</span><br><span class="line">        http://mirrors.huaweicloud.com/centos/$releasever/os/$basearch/</span><br><span class="line">        http://mirror.centos.org/centos/$releasever/os/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">#released updates </span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-$releasever - Updates</span><br><span class="line">baseurl=http://mirrors.163.com/centos/$releasever/updates/$basearch/</span><br><span class="line">        http://mirrors.aliyun.com/centos/$releasever/updates/$basearch/</span><br><span class="line">        http://mirrors.cloud.tencent.com/centos/$releasever/updates/$basearch/</span><br><span class="line">        http://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/updates/$basearch/</span><br><span class="line">http://mirrors.huaweicloud.com/centos/$releasever/updates/$basearch/</span><br><span class="line">        http://mirror.centos.org/centos/$releasever/updates/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">#additional packages that may be useful</span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-$releasever - Extras</span><br><span class="line">baseurl=http://mirrors.163.com/centos/$releasever/extras/$basearch/</span><br><span class="line">        http://mirrors.aliyun.com/centos/$releasever/extras/$basearch/</span><br><span class="line">http://mirrors.cloud.tencent.com/centos/$releasever/extras/$basearch/</span><br><span class="line">        http://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/extras/$basearch/</span><br><span class="line">        http://mirrors.huaweicloud.com/centos/$releasever/extras/$basearch/</span><br><span class="line">http://mirror.centos.org/centos/$releasever/extras/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">#additional packages that extend functionality of existing packages</span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-$releasever - Plus</span><br><span class="line">baseurl=http://mirrors.163.com/centos/$releasever/centosplus/$basearch/</span><br><span class="line">        http://mirrors.aliyun.com/centos/$releasever/centosplus/$basearch/</span><br><span class="line">        http://mirrors.cloud.tencent.com/centos/$releasever/centosplus/$basearch/</span><br><span class="line">        http://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/centosplus/$basearch/</span><br><span class="line">        http://mirrors.huaweicloud.com/centos/$releasever/centosplus/$basearch/</span><br><span class="line">http://mirror.centos.org/centos/$releasever/centosplus/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p>3.清除缓存</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure><p>4.重新生成缓存</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis集群和高可用</title>
      <link href="/2022/12/13/Redis%E9%9B%86%E7%BE%A4%E5%92%8C%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
      <url>/2022/12/13/Redis%E9%9B%86%E7%BE%A4%E5%92%8C%E9%AB%98%E5%8F%AF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Redis单机服务存在数据和服务的单点问题,而且单机性能也存在着上限,可以利用Redis的集群相关技术来解决这些问题.</p><p><img src="/../image.assets/1671327877294.png" alt="1671327877294"></p><h1 id="主从复制实现"><a href="#主从复制实现" class="headerlink" title="主从复制实现"></a>主从复制实现</h1><h2 id="主从命令配置"><a href="#主从命令配置" class="headerlink" title="主从命令配置"></a>主从命令配置</h2><p><img src="/../image.assets/1670942266531.png" alt="1670942266531"></p><p>当配置Redis复制功能时，强烈建议打开主服务器的持久化功能。否则的话，由于延迟等问题，部署的主节点Redis服务应该要避免自动启动。</p><p>参考案例: 导致主从服务器数据全部丢失</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.假设节点A为主服务器，并且关闭了持久化。并且节点B和节点C从节点A复制数据</span><br><span class="line">2.节点A崩溃，然后由自动拉起服务重启了节点A.由于节点A的持久化被关闭了，所以重启之后没有任何数据</span><br><span class="line">3.节点B和节点C将从节点A复制数据，但是A的数据是空的，于是就把自身保存的数据副本删除。</span><br></pre></td></tr></table></figure><p>在关闭主服务器上的持久化，并同时开启自动拉起进程的情况下，即便使用Sentinel来实现Redis的高可用性，也是非常危险的。因为主服务器可能拉起得非常快，以至于Sentinel在配置的心跳时间间隔内没有检测到主服务器已被重启，然后还是会执行上面的数据丢失的流程。无论何时，数据安全都是极其重要的，所以应该禁止主服务器关闭持久化的同时自动启动。</p><h3 id="启用主从同步"><a href="#启用主从同步" class="headerlink" title="启用主从同步"></a>启用主从同步</h3><p>Redis Server 默认为 master节点，如果要配置为从节点,需要指定master服务器的IP,端口及连接密码在从节点执行 REPLICAOF MASTER_IP PORT 指令可以启用主从同步复制功能,早期版本使用 SLAVEOF指令</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; REPLICAOF MASTER_IP PORT #新版推荐使用</span><br><span class="line">127.0.0.1:6379&gt; SLAVEOF MasterIP Port #旧版使用，将被淘汰</span><br><span class="line">127.0.0.1:6379&gt; CONFIG SET masterauth &lt;masterpass&gt;</span><br></pre></td></tr></table></figure><ul><li>在master实现</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; AUTH 123456</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; INFO replication #查看当前角色默认为master</span><br><span class="line"># Replication</span><br><span class="line">role:master</span><br><span class="line">connected_slaves:0</span><br><span class="line">master_failover_state:no-failover</span><br><span class="line">master_replid:f945fd1714d8d3b78a149c8b2e0d57567ee6cb77</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:1361</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:1</span><br><span class="line">repl_backlog_histlen:1361</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure><ul><li>在slave实现</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">#在slave上设置master的IP和端口，4.0版之前的指令为slaveof</span><br><span class="line">127.0.0.1:6380&gt; REPLICAOF 127.0.0.1 6379  #仍可使用SLAVEOF MasterIP Port</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6380&gt; </span><br><span class="line"></span><br><span class="line">#在slave上设置master的密码</span><br><span class="line">127.0.0.1:6379&gt; CONFIG SET masterauth 123456</span><br><span class="line"></span><br><span class="line"># Replication #角色变为slave</span><br><span class="line">127.0.0.1:6380&gt; INFO replication</span><br><span class="line"># Replication</span><br><span class="line">role:slave</span><br><span class="line">master_host:127.0.0.1  #指向master</span><br><span class="line">master_port:6379</span><br><span class="line">master_link_status:up</span><br><span class="line">master_last_io_seconds_ago:1</span><br><span class="line">master_sync_in_progress:0</span><br><span class="line">slave_read_repl_offset:1515</span><br><span class="line">slave_repl_offset:1515</span><br><span class="line">slave_priority:100</span><br><span class="line">slave_read_only:1</span><br><span class="line">replica_announced:1</span><br><span class="line">connected_slaves:0</span><br><span class="line">master_failover_state:no-failover</span><br><span class="line">master_replid:f945fd1714d8d3b78a149c8b2e0d57567ee6cb77</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:1515</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:1362</span><br><span class="line">repl_backlog_histlen:154</span><br><span class="line">127.0.0.1:6380&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在master实现</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 添加值</span><br><span class="line">127.0.0.1:6379&gt; set class m48</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><ul><li>在slave验证是否同步过来</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 在slave执行</span><br><span class="line">127.0.0.1:6380&gt; get class</span><br><span class="line">&quot;m48&quot;</span><br><span class="line">127.0.0.1:6380&gt; </span><br><span class="line"></span><br><span class="line"># 可以看到已经同步成功</span><br></pre></td></tr></table></figure><ul><li>master实现</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#在master上可以看到所有slave信息</span><br><span class="line">127.0.0.1:6379&gt; info replication</span><br><span class="line"># Replication</span><br><span class="line">role:master</span><br><span class="line">connected_slaves:1</span><br><span class="line">slave0:ip=127.0.0.1,port=6380,state=online,offset=1907,lag=0</span><br><span class="line">master_failover_state:no-failover</span><br><span class="line">master_replid:f945fd1714d8d3b78a149c8b2e0d57567ee6cb77</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:1907</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:1</span><br><span class="line">repl_backlog_histlen:1907</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure><h3 id="删除主从同步"><a href="#删除主从同步" class="headerlink" title="删除主从同步"></a>删除主从同步</h3><ul><li>在slave实现</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 在从节点执行 REPLICAOF NO ONE 指令可以取消主从复制</span><br><span class="line">#取消复制,在slave上执行REPLICAOF NO ONE,会断开和master的连接不再主从复制, 但不会清除slave</span><br><span class="line">上已有的数据</span><br><span class="line">127.0.0.1:6380&gt; REPLICAOF no one</span><br></pre></td></tr></table></figure><h3 id="验证同步"><a href="#验证同步" class="headerlink" title="验证同步"></a>验证同步</h3><ul><li>查看master日志</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master ~]# tail -f /usr/local/src/redis/log/redis_6379.log </span><br><span class="line">945:M 13 Dec 2022 22:27:17.550 * Synchronization with replica 127.0.0.1:6380 succeeded</span><br><span class="line">945:M 13 Dec 2022 22:42:59.410 # Connection with replica 127.0.0.1:6380 lost.</span><br><span class="line">945:M 13 Dec 2022 22:46:34.373 * Replica 127.0.0.1:6380 asks for synchronization</span><br><span class="line">945:M 13 Dec 2022 22:46:34.373 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for &#x27;1200062e6b1065421dec8531ca2d96776029ab3d&#x27;, my replication IDs are &#x27;f945fd1714d8d3b78a149c8b2e0d57567ee6cb77&#x27; and &#x27;0000000000000000000000000000000000000000&#x27;)</span><br><span class="line">945:M 13 Dec 2022 22:46:34.373 * Starting BGSAVE for SYNC with target: disk</span><br><span class="line">945:M 13 Dec 2022 22:46:34.374 * Background saving started by pid 1690</span><br><span class="line">1690:C 13 Dec 2022 22:46:34.376 * DB saved on disk</span><br><span class="line">1690:C 13 Dec 2022 22:46:34.377 * RDB: 2 MB of memory used by copy-on-write</span><br><span class="line">945:M 13 Dec 2022 22:46:34.435 * Background saving terminated with success</span><br><span class="line">945:M 13 Dec 2022 22:46:34.435 * Synchronization with replica 127.0.0.1:6380 succeeded</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>查看slave日志</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master ~]# tail -f /usr/local/src/redis/log/redis_6380.log</span><br><span class="line">946:S 13 Dec 2022 22:46:34.436 * MASTER &lt;-&gt; REPLICA sync: Finished with success</span><br><span class="line">946:S 13 Dec 2022 22:46:34.437 * Background append only file rewriting started by pid 1691</span><br><span class="line">946:S 13 Dec 2022 22:46:34.470 * AOF rewrite child asks to stop sending diffs.</span><br><span class="line">1691:C 13 Dec 2022 22:46:34.470 * Parent agreed to stop sending diffs. Finalizing AOF...</span><br><span class="line">1691:C 13 Dec 2022 22:46:34.470 * Concatenating 0.00 MB of AOF diff received from parent.</span><br><span class="line">1691:C 13 Dec 2022 22:46:34.470 * SYNC append only file rewrite performed</span><br><span class="line">1691:C 13 Dec 2022 22:46:34.471 * AOF rewrite: 2 MB of memory used by copy-on-write</span><br><span class="line">946:S 13 Dec 2022 22:46:34.536 * Background AOF rewrite terminated with success</span><br><span class="line">946:S 13 Dec 2022 22:46:34.536 * Residual parent diff successfully flushed to the rewritten AOF (0.00 MB)</span><br><span class="line">946:S 13 Dec 2022 22:46:34.536 * Background AOF rewrite finished successfully</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="修改slave配置文件"><a href="#修改slave配置文件" class="headerlink" title="修改slave配置文件"></a>修改slave配置文件</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master ~]# vim /usr/local/src/redis/etc/redis6380.conf </span><br><span class="line"># replicaof &lt;masterip&gt; &lt;masterport&gt;</span><br><span class="line">replicaof 127.0.0.1 6379 #指定master的IP和端口号，我这里在同一台机器上安装了多实例</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># masterauth &lt;master-password&gt;</span><br><span class="line">masterauth 123456 #如果密码需要设置</span><br><span class="line"></span><br><span class="line">systemctl restart redis</span><br><span class="line"></span><br><span class="line">#在master上查看状态</span><br><span class="line">127.0.0.1:6379&gt; info replication</span><br><span class="line"># Replication</span><br><span class="line">role:master</span><br><span class="line">connected_slaves:2</span><br><span class="line">slave0:ip=127.0.0.1,port=6380,state=online,offset=3307,lag=1</span><br><span class="line">slave1:ip=127.0.0.1,port=6381,state=online,offset=3307,lag=1</span><br><span class="line">master_failover_state:no-failover</span><br><span class="line">master_replid:f945fd1714d8d3b78a149c8b2e0d57567ee6cb77</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:3307</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:1</span><br><span class="line">repl_backlog_histlen:3307</span><br><span class="line">127.0.0.1:6379&gt; </span><br><span class="line"></span><br><span class="line">#停止master的redis服务：systemctl stop redis,在slave上可以观察到以下现象</span><br><span class="line">127.0.0.1:6381&gt; info replication</span><br><span class="line"># Replication</span><br><span class="line">role:slave</span><br><span class="line">master_host:192.168.1.104</span><br><span class="line">master_port:6379</span><br><span class="line">master_link_status:down   #显示down，表示无法连接master</span><br><span class="line">master_last_io_seconds_ago:-1</span><br><span class="line">master_sync_in_progress:0</span><br><span class="line">slave_read_repl_offset:84</span><br><span class="line">slave_repl_offset:84</span><br><span class="line">master_link_down_since_seconds:14</span><br><span class="line">slave_priority:100</span><br><span class="line">slave_read_only:1</span><br><span class="line">replica_announced:1</span><br><span class="line">connected_slaves:0</span><br><span class="line">master_failover_state:no-failover</span><br><span class="line">master_replid:f6eefc841166e73282b4bab58527081653ddb0d1</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:84</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:15</span><br><span class="line">repl_backlog_histlen:70</span><br><span class="line">127.0.0.1:6381&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>slave 只读状态<br>验证Slave节点为只读状态, 不支持写入</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6381&gt; set ll aa</span><br><span class="line">(error) READONLY You can&#x27;t write against a read only replica.</span><br><span class="line">127.0.0.1:6381&gt; </span><br></pre></td></tr></table></figure><h1 id="Redis实现哨兵架构"><a href="#Redis实现哨兵架构" class="headerlink" title="Redis实现哨兵架构"></a>Redis实现哨兵架构</h1><p>以下案例实现一主两从的基于哨兵的高可用Redis架构</p><p><img src="/../image.assets/1671283453244.png" alt="1671283453244"></p><ul><li>先实现主从架构</li></ul><p>哨兵的前提是已经实现了Redis的主从复制<br>注意: master 的配置文件中masterauth 和slave 都必须相同<br>所有主从节点的 redis.conf 中关健配置<br>范例: 准备主从环境配置</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#在所有主从节点执行</span><br><span class="line">vim redis.conf</span><br><span class="line">bind 0.0.0.0</span><br><span class="line">masterauth &quot;123456&quot;</span><br><span class="line">requirepass &quot;123456&quot;</span><br><span class="line">#或者非交互执行</span><br><span class="line">[root@centos8 ~]#sed -i -e &#x27;s/bind 127.0.0.1/bind 0.0.0.0/&#x27; -e &#x27;s/^# masterauth</span><br><span class="line">.*/masterauth 123456/&#x27; -e &#x27;s/^# requirepass .*/requirepass 123456/&#x27;</span><br><span class="line">/etc/redis.conf</span><br><span class="line">#在所有从节点执行</span><br><span class="line">[root@centos8 ~]#echo &quot;replicaof 192.168.32.133 6379&quot; &gt;&gt; /etc/redis.conf</span><br><span class="line">#在所有主从节点执行</span><br><span class="line">[root@centos8 ~]#systemctl enable --now redis</span><br></pre></td></tr></table></figure><ul><li>配置slave1</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@redis-slave1 ~]#redis-cli -a 123456</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface</span><br><span class="line">may not be safe.</span><br><span class="line">127.0.0.1:6379&gt; REPLICAOF 192.168.32.133 6379</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; CONFIG SET masterauth &quot;123456&quot;</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><ul><li>配置slave2</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@redis-slave2 ~]#redis-cli -a 123456</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface</span><br><span class="line">may not be safe.</span><br><span class="line">127.0.0.1:6379&gt; REPLICAOF 192.168.32.133 6379</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; CONFIG SET masterauth &quot;123456&quot;</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><ul><li>编辑哨兵配置<br>sentinel配置<br>Sentinel实际上是一个特殊的redis服务器,有些redis指令支持,但很多指令并不支持.默认监听在<br>26379&#x2F;tcp端口.<br>哨兵服务可以和Redis服务器分开部署在不同主机，但为了节约成本一般会部署在一起<br>所有redis节点使用相同的以下示例的配置文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#如果是编译安装，在源码目录有sentinel.conf，复制到安装目录即可，</span><br><span class="line">如:/usr/local/src/redis/etc/sentinel.conf</span><br><span class="line">[root@centos8 ~]#cp redis-6.2.5/sentinel.conf /usr/local/src/redis/etc/</span><br><span class="line">[root@centos8 ~]#chown redis.redis /usr/local/src/redis/etc/sentinel.conf</span><br><span class="line">[root@centos8 ~]#vim /etc/redis-sentinel.conf</span><br><span class="line">bind 0.0.0.0</span><br><span class="line">port 26379</span><br><span class="line">daemonize yes</span><br><span class="line">pidfile &quot;redis-sentinel.pid&quot;</span><br><span class="line">logfile &quot;sentinel_26379.log&quot;</span><br><span class="line">dir &quot;/tmp&quot; #工作目录</span><br><span class="line">sentinel monitor mymaster 10.0.0.8 6379 2</span><br><span class="line">#mymaster是集群的名称，此行指定当前mymaster集群中master服务器的地址和端口</span><br><span class="line">#2为法定人数限制(quorum)，即有几个sentinel认为master down了就进行故障转移，一般此值是所有</span><br><span class="line">sentinel节点(一般总数是&gt;=3的 奇数,如:3,5,7等)的一半以上的整数值，比如，总数是3，即3/2=1.5，</span><br><span class="line">取整为2,是master的ODOWN客观下线的依据</span><br><span class="line">sentinel auth-pass mymaster 123456</span><br><span class="line"></span><br><span class="line">#mymaster集群中master的密码，注意此行要在上面行的下面</span><br><span class="line">sentinel down-after-milliseconds mymaster 30000</span><br><span class="line">#判断mymaster集群中所有节点的主观下线(SDOWN)的时间，单位：毫秒，建议3000</span><br><span class="line">sentinel parallel-syncs mymaster 1</span><br><span class="line"></span><br><span class="line">#发生故障转移后，可以同时向新master同步数据的slave的数量，数字越小总同步时间越长，但可以减轻新</span><br><span class="line">master的负载压力</span><br><span class="line">sentinel failover-timeout mymaster 180000</span><br><span class="line">#所有slaves指向新的master所需的超时时间，单位：毫秒</span><br><span class="line">sentinel deny-scripts-reconfig yes #禁止修改脚本</span><br><span class="line">logfile /var/log/redis/sentinel.log</span><br></pre></td></tr></table></figure><ul><li>三个哨兵服务器的配置都如下</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">port 26379</span><br><span class="line">daemonize no</span><br><span class="line">pidfile &quot;/var/run/redis-sentinel.pid&quot;</span><br><span class="line">logfile &quot;/var/log/redis/sentinel.log&quot;</span><br><span class="line">dir &quot;/tmp&quot;</span><br><span class="line">sentinel monitor mymaster 192.168.32.133 6379 2 #修改此行</span><br><span class="line">sentinel auth-pass mymaster 123456 #增加此行</span><br><span class="line">sentinel down-after-milliseconds mymaster 3000 #修改此行</span><br><span class="line">sentinel parallel-syncs mymaster 1</span><br><span class="line">sentinel failover-timeout mymaster 180000</span><br><span class="line">sentinel deny-scripts-reconfig yes</span><br><span class="line">#注意此行自动生成必须唯一,一般不需要修改，如果相同则修改此值需重启redis和sentinel服务</span><br><span class="line">sentinel myid 50547f34ed71fd48c197924969937e738a39975b</span><br><span class="line">.....</span><br><span class="line"># Generated by CONFIG REWRITE</span><br><span class="line">protected-mode no</span><br><span class="line">supervised systemd</span><br><span class="line">sentinel leader-epoch mymaster 0</span><br><span class="line">sentinel known-replica mymaster 10.0.0.28 6379</span><br><span class="line">sentinel known-replica mymaster 10.0.0.18 6379</span><br><span class="line">sentinel current-epoch 0</span><br></pre></td></tr></table></figure><ul><li>启动哨兵服务<br>将所有哨兵服务器都启动起来</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/src/redis/bin/redis-sentinel /usr/local/src/redis/etc/sentinel.conf</span><br></pre></td></tr></table></figure><ul><li>将服务写成service文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vim /lib/systemd/system/redis-sentinel.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Redis Sentinel</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/src/redis/bin/redis-sentinel /usr/local/src/redis/etc/sentinel.conf --supervised systemd</span><br><span class="line">ExecStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">User=redis</span><br><span class="line">Group=redis</span><br><span class="line">RuntimeDirectory=redis</span><br><span class="line">RuntimeDirectoryMode=0755</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">#注意所有节点的目录权限,否则无法启动服务</span><br><span class="line">[root@redis-master ~]#chown -R redis.redis /usr.local/src/redis/</span><br></pre></td></tr></table></figure><ul><li>验证哨兵服务</li></ul><p>查看哨兵服务端口状态,端口26379</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 log]# ss -ntl</span><br><span class="line">State            Recv-Q           Send-Q                     Local Address:Port                       Peer Address:Port           Process           </span><br><span class="line">LISTEN           0                511                              0.0.0.0:26379                           0.0.0.0:*                                </span><br><span class="line">LISTEN           0                511                              0.0.0.0:6379                            0.0.0.0:*                                </span><br><span class="line">LISTEN           0                128                              0.0.0.0:22                              0.0.0.0:*                                </span><br><span class="line">LISTEN           0                511                                [::1]:6379                               [::]:*                                </span><br><span class="line">LISTEN           0                128                                 [::]:22                                 [::]:*                                </span><br><span class="line">[root@centos8 log]# </span><br></pre></td></tr></table></figure><ul><li>Sentinel 运维</li></ul><p>手动让主节点下线</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:26379&gt; sentinel failover &lt;masterName&gt;</span><br></pre></td></tr></table></figure><p>范例：手动故障转移</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">vim redis.conf</span><br><span class="line">replica-priority 10 #指定优先级,值越小sentinel会优先将之选为新的master,默为值为100</span><br><span class="line">systemctl restart redis</span><br><span class="line"></span><br><span class="line">#或者动态修改</span><br><span class="line">[root@centos8 ~]#redis-cli -a 123456</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface</span><br><span class="line">may not be safe.</span><br><span class="line">127.0.0.1:6379&gt; CONFIG GET replica-priority</span><br><span class="line">1) &quot;replica-priority&quot;</span><br><span class="line">2) &quot;100&quot;</span><br><span class="line">127.0.0.1:6379&gt; CONFIG SET replica-priority 99</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; CONFIG GET replica-priority</span><br><span class="line">1) &quot;replica-priority&quot;</span><br><span class="line">2) &quot;99&quot;</span><br><span class="line">[root@centos8 ~]#redis-cli -p 26379</span><br><span class="line">127.0.0.1:26379&gt; sentinel failover mymaster</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><h1 id="应用程序连接-Sentinel"><a href="#应用程序连接-Sentinel" class="headerlink" title="应用程序连接 Sentinel"></a>应用程序连接 Sentinel</h1><p>Redis 官方支持多种开发语言的客户端：<a href="https://redis.io/clients">https://redis.io/clients</a></p><h2 id="客户端连接-Sentinel-工作原理"><a href="#客户端连接-Sentinel-工作原理" class="headerlink" title="客户端连接 Sentinel 工作原理"></a>客户端连接 Sentinel 工作原理</h2><ol><li>客户端获取 Sentinel 节点集合,选举出一个 Sentinel</li></ol><p><img src="/../image.assets/1671326052932.png" alt="1671326052932"></p><ol start="2"><li>由这个sentinel 通过masterName 获取master节点信息,客户端通过sentinel get-master-addr-by-name master-name这个api来获取对应主节点信息</li></ol><p><img src="/../image.assets/1671326076150.png" alt="1671326076150"></p><ol start="3"><li>客户端发送role指令确认master的信息,验证当前获取的“主节点”是真正的主节点，这样的目的是为了防止故障转移期间主节点的变化</li></ol><p><img src="/../image.assets/1671326092067.png" alt="1671326092067"></p><ol start="4"><li>客户端保持和Sentinel节点集合的联系，即订阅Sentinel节点相关频道，时刻获取关于主节点的相关信息,获取新的master 信息变化,并自动连接新的master</li></ol><p><img src="/../image.assets/1671326121741.png" alt="1671326121741"></p><h2 id="java-连接Sentinel哨兵"><a href="#java-连接Sentinel哨兵" class="headerlink" title="java 连接Sentinel哨兵"></a>java 连接Sentinel哨兵</h2><p>java 客户端连接Redis：<a href="https://github.com/xetorthio/jedis/blob/master/pom.xml">https://github.com/xetorthio/jedis/blob/master/pom.xml</a></p><h2 id="python-连接-Sentinel-哨兵"><a href="#python-连接-Sentinel-哨兵" class="headerlink" title="python 连接 Sentinel 哨兵"></a>python 连接 Sentinel 哨兵</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#yum -y install python3 python3-redis</span><br><span class="line">[root@centos8 ~]#vim sentinel_test.py</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/usr/bin/python3</span></span><br><span class="line">import redis</span><br><span class="line">from redis.sentinel import Sentinel</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">连接哨兵服务器(主机名也可以用域名)</span></span><br><span class="line">sentinel = Sentinel([(&#x27;192.168.32.135&#x27;, 26379),</span><br><span class="line">                   (&#x27;192.168.32.133&#x27;, 26379),</span><br><span class="line">                   (&#x27;192.168.32.132&#x27;, 26379)],</span><br><span class="line">socket_timeout=0.5)</span><br><span class="line">redis_auth_pass = &#x27;123456&#x27;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mymaster 是配置哨兵模式的redis集群名称，此为默认值,实际名称按照个人部署案例来填写</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取主服务器地址</span></span><br><span class="line">master = sentinel.discover_master(&#x27;mymaster&#x27;)</span><br><span class="line">print(&quot;master:&quot;,master)</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取从服务器地址</span></span><br><span class="line">slave = sentinel.discover_slaves(&#x27;mymaster&#x27;)</span><br><span class="line">print(&quot;slave:&quot;,slave)</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取主服务器进行写入</span></span><br><span class="line">master = sentinel.master_for(&#x27;mymaster&#x27;, socket_timeout=0.5,</span><br><span class="line">password=redis_auth_pass, db=0)</span><br><span class="line">w_ret = master.set(&#x27;name&#x27;, &#x27;xy&#x27;)</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输出：True</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取从服务器进行读取（默认是round-roubin）</span></span><br><span class="line">slave = sentinel.slave_for(&#x27;mymaster&#x27;, socket_timeout=0.5,</span><br><span class="line">password=redis_auth_pass, db=0)</span><br><span class="line">r_ret = slave.get(&#x27;name&#x27;)</span><br><span class="line">print(r_ret)</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输出：xy</span></span><br><span class="line"></span><br><span class="line">chmod +x sentinel_test.py</span><br><span class="line"></span><br><span class="line">./sentinel_test.py</span><br><span class="line">master: (&#x27;192.168.32.135&#x27;, 6379)</span><br><span class="line">slave: [(&#x27;192.168.32.133&#x27;, 6379)]</span><br><span class="line">b&#x27;xy&#x27;</span><br></pre></td></tr></table></figure><h1 id="Redis-Cluster"><a href="#Redis-Cluster" class="headerlink" title="Redis Cluster"></a>Redis Cluster</h1><p><img src="/../image.assets/1671327580442.png" alt="1671327580442"></p><h2 id="Redis-Cluster-介绍"><a href="#Redis-Cluster-介绍" class="headerlink" title="Redis Cluster 介绍"></a>Redis Cluster 介绍</h2><p>使用哨兵sentinel 只能解决Redis高可用问题，实现Redis的自动故障转移,但仍然无法解决Redis Master<br>单节点的性能瓶颈问题<br>为了解决单机性能的瓶颈，提高Redis 服务整体性能，可以使用分布式集群的解决方案<br><strong>早期 Redis 分布式集群部署方案：</strong></p><ul><li>客户端分区：由客户端程序自己实现写入分配、高可用管理和故障转移等,对客户端的开发实现较为复杂</li><li>代理服务：客户端不直接连接Redis,而先连接到代理服务，由代理服务实现相应读写分配，当前代理服务都是第三方实现.此方案中客户端实现无需特殊开发,实现容易,但是代理服务节点仍存有单点故障和性能瓶颈问题。比如：豌豆荚开发的 codis</li></ul><p>Redis 3.0 版本之后推出无中心架构的 Redis Cluster ，支持多个master节点并行写入和故障的自动转移动能</p><h2 id="Redis-cluster-架构"><a href="#Redis-cluster-架构" class="headerlink" title="Redis cluster 架构"></a>Redis cluster 架构</h2><h3 id="Redis-cluster-架构-1"><a href="#Redis-cluster-架构-1" class="headerlink" title="Redis cluster 架构"></a>Redis cluster 架构</h3><p><img src="/../image.assets/1671328724924.png" alt="1671328724924"></p><p>Redis cluster 需要至少 3个master节点才能实现,slave节点数量不限,当然一般每个master都至少对应的有一个slave节点<br>如果有三个主节点采用哈希槽 hash slot 的方式来分配16384个槽位 slot<br>此三个节点分别承担的slot 区间可以是如以下方式分配</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">节点M1 0－5460</span><br><span class="line">节点M2 5461－10922</span><br><span class="line">节点M3 10923－16383</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1671328782321.png" alt="1671328782321"></p><h3 id="Redis-cluster的工作原理"><a href="#Redis-cluster的工作原理" class="headerlink" title="Redis cluster的工作原理"></a>Redis cluster的工作原理</h3><p><img src="/../image.assets/1671328827665.png" alt="1671328827665"></p><h4 id="数据分区"><a href="#数据分区" class="headerlink" title="数据分区"></a>数据分区</h4><p>如果是单机存储的话，直接将数据存放在单机redis就行了。但是如果是集群存储，就需要考虑到数据分区了。</p><p><img src="/../image.assets/1671328870673.png" alt="1671328870673"></p><p><img src="/../image.assets/1671328992908.png" alt="1671328992908"></p><p><img src="/../image.assets/1671329004830.png" alt="1671329004830"></p><h4 id="集群通信"><a href="#集群通信" class="headerlink" title="集群通信"></a>集群通信</h4><p>但是寻找槽的过程并不是一次就命中的，比如上图key将要存放在14396槽中，但是并不是一下就锁定了node3节点，可能先去询问node1，然后才访问node3。<br>而集群中节点之间的通信，保证了最多两次就能命中对应槽所在的节点。因为在每个节点中，都保存了其他节点的信息，知道哪个槽由哪个节点负责。这样即使第一次访问没有命中槽，但是会通知客户端，该槽在哪个节点，这样访问对应节点就能精准命中。</p><p><img src="/../image.assets/1671329162018.png" alt="1671329162018"></p><p><img src="/../image.assets/1671329175313.png" alt="1671329175313"></p><h4 id="集群伸缩"><a href="#集群伸缩" class="headerlink" title="集群伸缩"></a>集群伸缩</h4><p>集群并不是建立之后，节点数就固定不变的，也会有新的节点加入集群或者集群中的节点下线，这就是集群的扩容和缩容。但是由于集群节点和槽息息相关，所以集群的伸缩也对应了槽和数据的迁移</p><p><img src="/../image.assets/1671329671490.png" alt="1671329671490"></p><h4 id="集群扩容"><a href="#集群扩容" class="headerlink" title="集群扩容"></a>集群扩容</h4><p>当有新的节点准备好加入集群时，这个新的节点还是孤立节点，加入有两种方式。一个是通过集群节点执行命令来和孤立节点握手，另一个则是使用脚本来添加节点。</p><p><img src="/../image.assets/1671329705222.png" alt="1671329705222"></p><p><img src="/../image.assets/1671329719113.png" alt="1671329719113"></p><p><img src="/../image.assets/1671329733621.png" alt="1671329733621"></p><h4 id="集群缩容"><a href="#集群缩容" class="headerlink" title="集群缩容"></a>集群缩容</h4><p><img src="/../image.assets/1671329778357.png" alt="1671329778357"></p><p><img src="/../image.assets/1671329787950.png" alt="1671329787950"></p><p><img src="/../image.assets/1671329813270.png" alt="1671329813270"></p><p><img src="/../image.assets/1671329824032.png" alt="1671329824032"></p><p><img src="/../image.assets/1671329836794.png" alt="1671329836794"></p><h4 id="故障转移"><a href="#故障转移" class="headerlink" title="故障转移"></a>故障转移</h4><p><img src="/../image.assets/1671329862455.png" alt="1671329862455"></p><p><img src="/../image.assets/1671329876909.png" alt="1671329876909"></p><p>当从节点走马上任变成主节点之后，就要开始进行替换主节点：</p><ol><li>让该slave节点执行slaveof no one变为master节点</li><li>将故障节点负责的槽分配给该节点</li><li>向集群中其他节点广播Pong消息，表明已完成故障转移</li><li>故障节点重启后，会成为new_master的slave节点</li></ol><h2 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h2><h3 id="基于Redis-5-以上版本的-redis-cluster-部署"><a href="#基于Redis-5-以上版本的-redis-cluster-部署" class="headerlink" title="基于Redis 5 以上版本的 redis cluster 部署"></a>基于Redis 5 以上版本的 redis cluster 部署</h3><p>官方文档：<a href="https://redis.io/topics/cluster-tutorial">https://redis.io/topics/cluster-tutorial</a></p><h4 id="创建-redis-cluster集群的环境准备"><a href="#创建-redis-cluster集群的环境准备" class="headerlink" title="创建 redis cluster集群的环境准备"></a>创建 redis cluster集群的环境准备</h4><p><img src="/../image.assets/1671337258210.png" alt="1671337258210"></p><ul><li>每个Redis 节点采用相同的相同的Redis版本、相同的密码、硬件配置</li><li>所有Redis服务器必须没有任何数据</li><li>准备六台主机，地址如下：</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">192.168.32.132</span><br><span class="line">192.168.32.137</span><br><span class="line">192.168.32.140</span><br><span class="line">192.168.32.129</span><br><span class="line">192.168.32.136</span><br><span class="line">192.168.32.138</span><br></pre></td></tr></table></figure><h4 id="启用-redis-cluster-配置"><a href="#启用-redis-cluster-配置" class="headerlink" title="启用 redis cluster 配置"></a>启用 redis cluster 配置</h4><p>每个节点安装相同版每个节点修改redis配置，必须开启cluster功能的参数</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/redis.conf</span><br><span class="line">bind 0.0.0.0</span><br><span class="line">masterauth 123456 #建议配置，否则后期的master和slave主从复制无法成功，还需再配置</span><br><span class="line">requirepass 123456</span><br><span class="line">cluster-enabled yes #取消此行注释,必须开启集群，开启后 redis 进程会有cluster标识</span><br><span class="line">cluster-config-file nodes-6379.conf #取消此行注释,此为集群状态数据文件,记录主从关系</span><br><span class="line">及slot范围信息,由redis cluster 集群自动创建和维护</span><br><span class="line">cluster-require-full-coverage no #默认值为yes,设为no可以防止一个节点不可用导致整</span><br><span class="line">个cluster不可用</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下方式二选一</p><ul><li>执行下面命令,批量修改</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sed -i.bak -e &#x27;s/bind 127.0.0.1/bind 0.0.0.0/&#x27; -e &#x27;/masterauth/a masterauth 123456&#x27; -e &#x27;/# requirepass/a requirepass 123456&#x27; -e &#x27;/# cluster-enabled yes/a cluster-enabled yes&#x27; -e &#x27;/# cluster-config-file nodes-6379.conf/a cluster-config-file nodes-6379.conf&#x27; -e &#x27;/cluster-require-full-coverage yes/c cluster-require-full-coverage no&#x27; /etc/redis.conf</span><br></pre></td></tr></table></figure><ul><li>如果是编译安装可以执行下面操作</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i.bak -e &#x27;/masterauth/a masterauth 123456&#x27; -e &#x27;/# cluster-enabled yes/a cluster-enabled yes&#x27; -e &#x27;/# cluster-config-file nodes-6379.conf/a cluster-config-file nodes-6379.conf&#x27; -e &#x27;/cluster-require-full-coverage yes/c cluster-require-full-coverage no&#x27; /usr/local/src/redis/etc/redis.conf</span><br></pre></td></tr></table></figure><p>开机启动redis</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now redis</span><br><span class="line"># 修改完配置文件重启redis</span><br><span class="line">systemctl restart redis</span><br></pre></td></tr></table></figure><p>验证当前Redis服务状态：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#开启了16379的cluster的端口,实际的端口=redis port + 10000</span><br><span class="line">[root@centos7 ~]# ss -ntl</span><br><span class="line">State      Recv-Q Send-Q                       Local Address:Port                                      Peer Address:Port              </span><br><span class="line">LISTEN     0      128                                      *:22                                                   *:*                  </span><br><span class="line">LISTEN     0      100                              127.0.0.1:25                                                   *:*                  </span><br><span class="line">LISTEN     0      511                                      *:16379                                                *:*                  </span><br><span class="line">LISTEN     0      511                                      *:6379                                                 *:*                  </span><br><span class="line">LISTEN     0      128                                   [::]:22                                                [::]:*                  </span><br><span class="line">LISTEN     0      100                                  [::1]:25                                                [::]:*                  </span><br><span class="line">LISTEN     0      511                                  [::1]:16379                                             [::]:*                  </span><br><span class="line">LISTEN     0      511                                  [::1]:6379                                              [::]:*                  </span><br><span class="line">[root@centos7 ~]# </span><br></pre></td></tr></table></figure><h4 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">#命令redis-cli的选项 --cluster-replicas 1 表示每个master对应一个slave节点</span><br><span class="line"># 默认前三个为主节点</span><br><span class="line">[root@centos8 etc]# redis-cli -a 123456 --cluster create 192.168.32.132:6379 192.168.32.137:6379 192.168.32.140:6379 192.168.32.129:6379 192.168.32.136:6379 192.168.32.138:6379 --cluster-replicas 1</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">&gt;&gt;&gt; Performing hash slots allocation on 6 nodes...</span><br><span class="line">Master[0] -&gt; Slots 0 - 5460</span><br><span class="line">Master[1] -&gt; Slots 5461 - 10922</span><br><span class="line">Master[2] -&gt; Slots 10923 - 16383</span><br><span class="line">Adding replica 192.168.32.136:6379 to 192.168.32.132:6379</span><br><span class="line">Adding replica 192.168.32.138:6379 to 192.168.32.137:6379</span><br><span class="line">Adding replica 192.168.32.129:6379 to 192.168.32.140:6379</span><br><span class="line">M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379</span><br><span class="line">   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e</span><br><span class="line">S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379</span><br><span class="line">   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d</span><br><span class="line">S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379</span><br><span class="line">   replicates 46b54e8298e11e77450e232c9a0ee057b362191a</span><br><span class="line">Can I set the above configuration? (type &#x27;yes&#x27; to accept): yes</span><br><span class="line">&gt;&gt;&gt; Nodes configuration updated</span><br><span class="line">&gt;&gt;&gt; Assign a different config epoch to each node</span><br><span class="line">&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span><br><span class="line">Waiting for the cluster to join</span><br><span class="line">.</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.132:6379)</span><br><span class="line">M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e</span><br><span class="line">M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d</span><br><span class="line">S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 46b54e8298e11e77450e232c9a0ee057b362191a</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br><span class="line">[root@centos8 ~]# </span><br></pre></td></tr></table></figure><h4 id="验证集群"><a href="#验证集群" class="headerlink" title="验证集群"></a>验证集群</h4><ul><li>查看主从状态</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; info replication</span><br><span class="line"># Replication</span><br><span class="line">role:master</span><br><span class="line">connected_slaves:1</span><br><span class="line">slave0:ip=192.168.32.136,port=6379,state=online,offset=98,lag=1</span><br><span class="line">master_failover_state:no-failover</span><br><span class="line">master_replid:b1bd51213722f38a83c8bb525e8a74e62392a161</span><br><span class="line">master_replid2:0000000000000000000000000000000000000000</span><br><span class="line">master_repl_offset:98</span><br><span class="line">second_repl_offset:-1</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:1</span><br><span class="line">repl_backlog_histlen:98</span><br><span class="line">127.0.0.1:6379&gt; </span><br></pre></td></tr></table></figure><ul><li><p>验证集群状态</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; CLUSTER INFO</span><br><span class="line">cluster_state:ok</span><br><span class="line">cluster_slots_assigned:16384</span><br><span class="line">cluster_slots_ok:16384</span><br><span class="line">cluster_slots_pfail:0</span><br><span class="line">cluster_slots_fail:0</span><br><span class="line">cluster_known_nodes:6    # 节点数</span><br><span class="line">cluster_size:3           # 三个集群</span><br><span class="line">cluster_current_epoch:6</span><br><span class="line">cluster_my_epoch:1</span><br><span class="line">cluster_stats_messages_ping_sent:210</span><br><span class="line">cluster_stats_messages_pong_sent:210</span><br><span class="line">cluster_stats_messages_sent:420</span><br><span class="line">cluster_stats_messages_ping_received:205</span><br><span class="line">cluster_stats_messages_pong_received:210</span><br><span class="line">cluster_stats_messages_meet_received:5</span><br><span class="line">cluster_stats_messages_received:420</span><br><span class="line">127.0.0.1:6379&gt; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查看任意节点的集群状态</span><br><span class="line">[root@centos8 ~]# redis-cli -a 123456 --cluster info 192.168.32.137:6379</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">192.168.32.137:6379 (46b54e82...) -&gt; 0 keys | 5462 slots | 1 slaves.</span><br><span class="line">192.168.32.140:6379 (f49ca2e5...) -&gt; 0 keys | 5461 slots | 1 slaves.</span><br><span class="line">192.168.32.132:6379 (658dd91e...) -&gt; 0 keys | 5461 slots | 1 slaves.</span><br><span class="line">[OK] 0 keys in 3 masters.</span><br><span class="line">0.00 keys per slot on average.</span><br><span class="line">[root@centos8 ~]# </span><br></pre></td></tr></table></figure><h4 id="查看对应关系"><a href="#查看对应关系" class="headerlink" title="查看对应关系"></a>查看对应关系</h4></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]# redis-cli -a 123456 CLUSTER NODES</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379@16379 slave f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 0 1671364792207 3 connected</span><br><span class="line">658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379@16379 myself,master - 0 1671364792000 1 connected 0-5460</span><br><span class="line">f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379@16379 master - 0 1671364792000 3 connected 10923-16383</span><br><span class="line">46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379@16379 master - 0 1671364793216 2 connected 5461-10922</span><br><span class="line">f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379@16379 slave 658dd91e4b51bf06b161e6903d4084c77abd195d 0 1671364793000 1 connected</span><br><span class="line">eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379@16379 slave 46b54e8298e11e77450e232c9a0ee057b362191a 0 1671364792000 2 connected</span><br><span class="line">[root@centos8 ~]# </span><br></pre></td></tr></table></figure><h4 id="测试集群写入数据"><a href="#测试集群写入数据" class="headerlink" title="测试集群写入数据"></a>测试集群写入数据</h4><p><img src="/../image.assets/1671364901011.png" alt="1671364901011"></p><ul><li>redis cluster 写入key</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#经过算法计算，当前key的槽位需要写入指定的node</span><br><span class="line">[root@centos8 ~]# redis-cli -a 123456 set k1 v1</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">(error) MOVED 12706 192.168.32.140:6379  #槽位不在当前node所以无法写入</span><br><span class="line">[root@centos8 ~]# </span><br><span class="line"></span><br><span class="line">#指定槽位对应node可写入</span><br><span class="line">[root@centos8 ~]# redis-cli -h 192.168.32.140 -a 123456 set k1 v1</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">OK</span><br><span class="line">[root@centos8 ~]# </span><br><span class="line"></span><br><span class="line">#对应的slave节点可以KEYS *,但GET k1失败,可以到master上执行GET k1</span><br><span class="line">[root@centos8 ~]# redis-cli -h 192.168.32.129 -a 123456 get k1</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">(error) MOVED 12706 192.168.32.140:6379</span><br><span class="line">[root@centos8 ~]# redis-cli -h 192.168.32.129 -a 123456 keys &quot;*&quot;</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">1) &quot;k1&quot;</span><br><span class="line">[root@centos8 ~]# </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Redis-cluster-管理"><a href="#Redis-cluster-管理" class="headerlink" title="Redis cluster 管理"></a>Redis cluster 管理</h1><h2 id="集群扩容-1"><a href="#集群扩容-1" class="headerlink" title="集群扩容"></a>集群扩容</h2><p>扩容适用场景：<br>当前客户量激增，现有的Redis cluster架构已经无法满足越来越高的并发访问请求，为解决此问题,新购置两台服务器，要求将其动态添加到现有集群，但不能影响业务的正常访问。<br>注意: 生产环境一般建议master节点为奇数个,比如:3,5,7,以防止脑裂现象</p><ul><li>添加节点准备</li></ul><p>增加Redis 新节点，需要与之前的Redis node版本和配置一致，然后分别再启动两台Redis node，应为一主一从。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">192.168.32.133 主</span><br><span class="line">192.168.32.139  从</span><br><span class="line"># 修改配置文件,主从节点都修改</span><br><span class="line">sed -i.bak -e &#x27;/masterauth/a masterauth 123456&#x27; -e &#x27;/# cluster-enabled yes/a cluster-enabled yes&#x27; -e &#x27;/# cluster-config-file nodes-6379.conf/a cluster-config-file nodes-6379.conf&#x27; -e &#x27;/cluster-require-full-coverage yes/c cluster-require-full-coverage no&#x27; /usr/local/src/redis/etc/redis.conf</span><br><span class="line"></span><br><span class="line">systemctl restart redis</span><br></pre></td></tr></table></figure><ul><li>添加新的master节点到集群<br>使用以下命令添加新节点，要添加的新redis节点IP和端口添加到的已有的集群中任意节点的IP:端口</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">add-node new_host:new_port existing_host:existing_port [--slave --master-id</span><br><span class="line">&lt;arg&gt;]</span><br><span class="line">#说明：</span><br><span class="line">new_host:new_port #指定新添加的主机的IP和端口</span><br><span class="line">existing_host:existing_port #指定已有的集群中任意节点的IP和端口</span><br></pre></td></tr></table></figure><ul><li>Redis 3&#x2F;4 版本的添加命令：</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#把新的Redis 节点192.168.32.133添加到当前Redis集群当中。</span><br><span class="line">[root@redis-node1 ~]#redis-trib.rb add-node 192.168.32.133:6379 192.168.32.132:6379</span><br></pre></td></tr></table></figure><ul><li>Redis 5 以上版本的添加命令：</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#将一台新的主机加入集群</span><br><span class="line">[root@redis-node1 ~]#redis-cli -a 123456 --cluster add-node 192.168.32.133:6379 &lt;当前</span><br><span class="line">任意集群节点&gt;:6379</span><br><span class="line">[root@centos8 data]# redis-cli -a 123456 --cluster add-node 192.168.32.133:6379 192.168.32.132:6379</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">&gt;&gt;&gt; Adding node 192.168.32.133:6379 to cluster 192.168.32.132:6379</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.132:6379)</span><br><span class="line">M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e</span><br><span class="line">M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d</span><br><span class="line">S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 46b54e8298e11e77450e232c9a0ee057b362191a</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br><span class="line">&gt;&gt;&gt; Send CLUSTER MEET to node 192.168.32.133:6379 to make it join the cluster.</span><br><span class="line">[OK] New node added correctly.</span><br><span class="line">[root@centos8 data]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在新的master上重新分配槽位<br>新的node节点加到集群之后,默认是master节点，但是没有slots，需要重新分配,否则没有槽位将无法访问<br>注意: 重新分配槽位需要清空数据,所以需要先备份数据,扩展后再恢复数据<br>Redis 3&#x2F;4 版本命令:</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@redis-node1 ~]# redis-trib.rb check 10.0.0.67:6379 #当前状态</span><br><span class="line">[root@redis-node1 ~]# redis-trib.rb reshard &lt;任意节点&gt;:6379 #重新分片</span><br><span class="line">[root@redis-node1 ~]# redis-trib.rb fix 10.0.0.67:6379 #如果迁移失败使用此命令修复集群</span><br></pre></td></tr></table></figure><ul><li>Redis 5以上版本命令：</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@redis-node1 ~]#redis-cli -a 123456 --cluster reshard &lt;当前任意集群节点&gt;:6379</span><br><span class="line">[root@centos8 data]# redis-cli -a 123456 --cluster reshard 192.168.32.133:6379</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.133:6379)</span><br><span class="line">M: 77cfc3429c8b470331520074faea7c3a21f77d1f 192.168.32.133:6379</span><br><span class="line">   slots: (0 slots) master</span><br><span class="line">S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 46b54e8298e11e77450e232c9a0ee057b362191a</span><br><span class="line">M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379</span><br><span class="line">   slots:[0-5460] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379</span><br><span class="line">   slots:[5461-10922] (5462 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e</span><br><span class="line">S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d</span><br><span class="line">M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379</span><br><span class="line">   slots:[10923-16383] (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br><span class="line">How many slots do you want to move (from 1 to 16384)? 4096</span><br><span class="line"># 复制新加入的节点的ID，即192.168.32.133的节点ID</span><br><span class="line">What is the receiving node ID? 77cfc3429c8b470331520074faea7c3a21f77d1f</span><br><span class="line">Please enter all the source node IDs.</span><br><span class="line">  Type &#x27;all&#x27; to use all the nodes as source nodes for the hash slots.</span><br><span class="line">  Type &#x27;done&#x27; once you entered all the source nodes IDs.</span><br><span class="line">Source node #1: all     # 选择all</span><br><span class="line">Do you want to proceed with the proposed reshard plan (yes/no)? yes</span><br></pre></td></tr></table></figure><ul><li>为新的master指定新的slave节点</li></ul><p>当前Redis集群中新的master节点存单点问题,还需要给其添加一个对应slave节点，实现高可用功能<br>有两种方式：<br>方法1：在新加节点到集群时，直接将之设置为slave<br>Redis 3&#x2F;4 添加命令</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-trib.rb add-node --slave --master-id</span><br><span class="line">750cab050bc81f2655ed53900fd43d2e64423333 192.168.32.139:6379 &lt;任意集群节点&gt;:6379</span><br></pre></td></tr></table></figure><p>Redis 5 以上版本添加命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -a 123456 --cluster add-node 192.168.32.139:6379 &lt;任意集群节点&gt;:6379 --</span><br><span class="line">cluster-slave --cluster-master-id d6e2eca6b338b717923f64866bd31d42e52edc98</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前状态</span><br><span class="line">[root@centos8 ~]# redis-cli -a 123456 --cluster check 192.168.32.132:6379</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">192.168.32.132:6379 (658dd91e...) -&gt; 0 keys | 4096 slots | 1 slaves.</span><br><span class="line">192.168.32.133:6379 (77cfc342...) -&gt; 0 keys | 4096 slots | 0 slaves.</span><br><span class="line">192.168.32.140:6379 (f49ca2e5...) -&gt; 1 keys | 4096 slots | 1 slaves.</span><br><span class="line">192.168.32.137:6379 (46b54e82...) -&gt; 0 keys | 4096 slots | 1 slaves.</span><br><span class="line">[OK] 1 keys in 4 masters.</span><br><span class="line">0.00 keys per slot on average.</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.132:6379)</span><br><span class="line">M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379</span><br><span class="line">   slots:[1365-5460] (4096 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 77cfc3429c8b470331520074faea7c3a21f77d1f 192.168.32.133:6379</span><br><span class="line">   slots:[0-1364],[5461-6826],[10923-12287] (4096 slots) master</span><br><span class="line">S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e</span><br><span class="line">M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379</span><br><span class="line">   slots:[12288-16383] (4096 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379</span><br><span class="line">   slots:[6827-10922] (4096 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d</span><br><span class="line">S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 46b54e8298e11e77450e232c9a0ee057b362191a</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br><span class="line">[root@centos8 ~]# </span><br><span class="line"></span><br><span class="line">#直接加为slave节点</span><br><span class="line">[root@centos8 ~]# redis-cli -a 123456 --cluster add-node 192.168.32.139:6379 192.168.32.132:6379 --cluster-slave --cluster-master-id 77cfc3429c8b470331520074faea7c3a21f77d1f</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 验证</span><br><span class="line">[root@centos8 ~]# redis-cli -a 123456 --cluster check 192.168.32.132:6379</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">192.168.32.132:6379 (658dd91e...) -&gt; 0 keys | 4096 slots | 1 slaves.</span><br><span class="line">192.168.32.133:6379 (77cfc342...) -&gt; 0 keys | 4096 slots | 1 slaves.</span><br><span class="line">192.168.32.140:6379 (f49ca2e5...) -&gt; 1 keys | 4096 slots | 1 slaves.</span><br><span class="line">192.168.32.137:6379 (46b54e82...) -&gt; 0 keys | 4096 slots | 1 slaves.</span><br><span class="line">[OK] 1 keys in 4 masters.</span><br><span class="line">0.00 keys per slot on average.</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="集群缩容-1"><a href="#集群缩容-1" class="headerlink" title="集群缩容"></a>集群缩容</h2><p>缩容适用场景：<br>随着业务萎缩用户量下降明显,和领导商量决定将现有Redis集群的8台主机中下线两台主机挪做它用,缩容后性能仍能满足当前业务需求<br>删除节点过程：<br>扩容时是先添加node到集群，然后再分配槽位，而缩容时的操作相反，是先将被要删除的node上的槽位迁移到集群中的其他node上，然后 才能再将其从集群中删除，如果一个node上的槽位没有被完全迁移空，删除该node时也会提示有数据出错导致无法删除。</p><p>迁移要删除的master节点上面的槽位到其它master<br>注意: 被迁移Redis master源服务器必须保证没有数据，否则迁移报错并会被强制中断。<br>Redis 3&#x2F;4 版本命令</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@redis-node1 ~]# redis-trib.rb reshard 10.0.0.8:6379</span><br><span class="line">[root@redis-node1 ~]# redis-trib.rb fix 10.0.0.8:6379 #如果迁移失败使用此命令修复集群</span><br></pre></td></tr></table></figure><p>Redis 5版本以上命令</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前状态</span><br><span class="line">[root@centos8 ~]# redis-cli -a 123456 --cluster check 192.168.32.132:6379</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">192.168.32.132:6379 (658dd91e...) -&gt; 0 keys | 4096 slots | 1 slaves.</span><br><span class="line">192.168.32.133:6379 (77cfc342...) -&gt; 0 keys | 4096 slots | 1 slaves.</span><br><span class="line">192.168.32.140:6379 (f49ca2e5...) -&gt; 1 keys | 4096 slots | 1 slaves.</span><br><span class="line">192.168.32.137:6379 (46b54e82...) -&gt; 0 keys | 4096 slots | 1 slaves.</span><br><span class="line">[OK] 1 keys in 4 masters.</span><br><span class="line">0.00 keys per slot on average.</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.132:6379)</span><br><span class="line">M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379</span><br><span class="line">   slots:[1365-5460] (4096 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 77cfc3429c8b470331520074faea7c3a21f77d1f 192.168.32.133:6379</span><br><span class="line">   slots:[0-1364],[5461-6826],[10923-12287] (4096 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e</span><br><span class="line">M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379</span><br><span class="line">   slots:[12288-16383] (4096 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379</span><br><span class="line">   slots:[6827-10922] (4096 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d</span><br><span class="line">S: a44914056fd3a170850ad572c0e238b499455897 192.168.32.139:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 77cfc3429c8b470331520074faea7c3a21f77d1f</span><br><span class="line">S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 46b54e8298e11e77450e232c9a0ee057b362191a</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br><span class="line">[root@centos8 ~]# </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#连接到任意集群节点，#最后1365个slot从192.168.32.133移动到第一个master节点192.168.32.132上</span><br><span class="line">[root@centos8 ~]# redis-cli -a 123456 --cluster reshard 192.168.32.132:6379</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.132:6379)</span><br><span class="line">M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379</span><br><span class="line">   slots:[1365-5460] (4096 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 77cfc3429c8b470331520074faea7c3a21f77d1f 192.168.32.133:6379</span><br><span class="line">   slots:[0-1364],[5461-6826],[10923-12287] (4096 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e</span><br><span class="line">M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379</span><br><span class="line">   slots:[12288-16383] (4096 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379</span><br><span class="line">   slots:[6827-10922] (4096 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d</span><br><span class="line">S: a44914056fd3a170850ad572c0e238b499455897 192.168.32.139:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 77cfc3429c8b470331520074faea7c3a21f77d1f</span><br><span class="line">S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 46b54e8298e11e77450e232c9a0ee057b362191a</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br><span class="line">How many slots do you want to move (from 1 to 16384)? 1356 #共4096/3分别给其它三个master节点</span><br><span class="line">What is the receiving node ID? 658dd91e4b51bf06b161e6903d4084c77abd195d # master id</span><br><span class="line">Please enter all the source node IDs.</span><br><span class="line">  Type &#x27;all&#x27; to use all the nodes as source nodes for the hash slots.</span><br><span class="line">  Type &#x27;done&#x27; once you entered all the source nodes IDs.</span><br><span class="line">Source node #1: 77cfc3429c8b470331520074faea7c3a21f77d1f  # 删除ID，192.168.32.133的ID</span><br><span class="line">Source node #2: done</span><br><span class="line">Do you want to proceed with the proposed reshard plan (yes/no)? yes</span><br><span class="line"></span><br><span class="line"># redis-cli -a 123456 --cluster reshard 192.168.32.132:6379 该命令在执行两次</span><br></pre></td></tr></table></figure><ul><li>从集群中删除服务器</li></ul><p>上面步骤完成后,槽位已经迁移走，但是节点仍然还属于集群成员，因此还需从集群删除该节点<br>注意: 删除服务器前,必须清除主机上面的槽位,否则会删除主机失败<br>Redis 3&#x2F;4命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@s~]#redis-trib.rb del-node &lt;任意集群节点的IP&gt;:6379</span><br><span class="line">dfffc371085859f2858730e1f350e9167e287073</span><br><span class="line">#dfffc371085859f2858730e1f350e9167e287073 是删除节点的ID</span><br><span class="line">&gt;&gt;&gt; Removing node dfffc371085859f2858730e1f350e9167e287073 from cluster</span><br><span class="line">192.168.7.102:6379</span><br><span class="line">&gt;&gt;&gt; Sending CLUSTER FORGET messages to the cluster...</span><br><span class="line">&gt;&gt;&gt; SHUTDOWN the node.</span><br></pre></td></tr></table></figure><p>Redis 5以上版本命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@redis-node1 ~]#redis-cli -a 123456 --cluster del-node &lt;任意集群节点的IP&gt;:6379</span><br><span class="line">cb028b83f9dc463d732f6e76ca6bbcd469d948a7</span><br><span class="line">#cb028b83f9dc463d732f6e76ca6bbcd469d948a7是删除节点的ID</span><br></pre></td></tr></table></figure><p>范例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"># 查看节点信息</span><br><span class="line">[root@centos8 ~]# redis-cli -a 123456 --cluster check 192.168.32.132:6379</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">192.168.32.132:6379 (658dd91e...) -&gt; 0 keys | 8164 slots | 1 slaves.</span><br><span class="line">192.168.32.133:6379 (77cfc342...) -&gt; 0 keys | 28 slots | 1 slaves.</span><br><span class="line">192.168.32.140:6379 (f49ca2e5...) -&gt; 1 keys | 4096 slots | 1 slaves.</span><br><span class="line">192.168.32.137:6379 (46b54e82...) -&gt; 0 keys | 4096 slots | 1 slaves.</span><br><span class="line">[OK] 1 keys in 4 masters.</span><br><span class="line">0.00 keys per slot on average.</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.32.132:6379)</span><br><span class="line">M: 658dd91e4b51bf06b161e6903d4084c77abd195d 192.168.32.132:6379</span><br><span class="line">   slots:[0-6826],[10923-12259] (8164 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 77cfc3429c8b470331520074faea7c3a21f77d1f 192.168.32.133:6379</span><br><span class="line">   slots:[12260-12287] (28 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: ba4bb2dc1f4550e8602f500f1e0021896e78bf54 192.168.32.129:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates f49ca2e55dae53fa0a069ea9e1d35a31ee62731e</span><br><span class="line">M: f49ca2e55dae53fa0a069ea9e1d35a31ee62731e 192.168.32.140:6379</span><br><span class="line">   slots:[12288-16383] (4096 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 46b54e8298e11e77450e232c9a0ee057b362191a 192.168.32.137:6379</span><br><span class="line">   slots:[6827-10922] (4096 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: f720a02fee9c4826d08258b740de008040cf80c5 192.168.32.136:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 658dd91e4b51bf06b161e6903d4084c77abd195d</span><br><span class="line">S: a44914056fd3a170850ad572c0e238b499455897 192.168.32.139:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 77cfc3429c8b470331520074faea7c3a21f77d1f</span><br><span class="line">S: eec71072ab8ad4068b4604f7196d881f9b5363e0 192.168.32.138:6379</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 46b54e8298e11e77450e232c9a0ee057b362191a</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br><span class="line">[root@centos8 ~]# </span><br><span class="line"></span><br><span class="line"># 删除192.168.32.133节点</span><br><span class="line">[root@centos8 ~]# redis-cli -a 123456 --cluster del-node 192.168.32.132:6379 77cfc3429c8b470331520074faea7c3a21f77d1f</span><br><span class="line">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class="line">&gt;&gt;&gt; Removing node 77cfc3429c8b470331520074faea7c3a21f77d1f from cluster 192.168.32.132:6379</span><br><span class="line">&gt;&gt;&gt; Sending CLUSTER FORGET messages to the cluster...</span><br><span class="line">&gt;&gt;&gt; Sending CLUSTER RESET SOFT to the deleted node.</span><br><span class="line">[root@centos8 ~]# </span><br></pre></td></tr></table></figure><h1 id="常见面试题"><a href="#常见面试题" class="headerlink" title="常见面试题"></a>常见面试题</h1><ul><li>Redis 做什么的,即在哪些场景下使用</li><li>如果监控 Redis 是否出现故障</li><li>Redis客户端timeout报错突然增加，排查思路是怎样的？</li><li>请简单描述pipeline功能，为什么pipeline功能会提升redis性能?</li><li>本地redis-client访问远程Redis服务出错，说出几种常见的错误?</li><li>key-value的大小超大或单key的qps超高，会对Redis本身造成什么样的影响、会对访问Redis的其他客户端造成什么样的影响？</li><li>Zabbix 监控 Redis 哪些监控项</li><li>RDB和AOF持久化区别</li><li>docker拉取一个Redis如何实现数据持久化保存</li><li>Redis 支持哪些数据类型</li><li>Redis 如何实现消息队列</li><li>描述下常见的redis集群架构有哪些，他们之间的优缺点对比</li><li>主从复制工作原理</li><li>Redis 如何实现高可用</li><li>哨兵工作原理</li><li>Redis 集群的工作原理</li><li>Redis 集群如果避免脑裂</li><li>Redis 集群最少几个节点为什么?</li><li>Redis的集群槽位多少个</li><li>Redis集群中某个节点缺少一个槽位是否能使用</li><li>Redis数据写入的时候是怎么在各个节点槽位分配数据的</li><li>Redis的数据存储是以什么样的方式存储</li><li>Redis集群的各槽位和总槽位之间什么关系</li></ul>]]></content>
      
      
      <categories>
          
          <category> Redis基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis部署和基础使用</title>
      <link href="/2022/12/07/Redis%E9%83%A8%E7%BD%B2%E5%92%8C%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/12/07/Redis%E9%83%A8%E7%BD%B2%E5%92%8C%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Redis基础"><a href="#Redis基础" class="headerlink" title="Redis基础"></a>Redis基础</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Redis (Remote Dictionary Server远程字典服务)是一个遵循BSD MIT开源协议的高性能的NoSQL.Redis基于ANSI C语言语言)编写的key-value数据库,是意大利的Salvatore Sanfilippo在2009年发布，从2010年3月15日起，Redis的开发工作由VMware主持。从2013年5月开始，Redis的开发由Pivotal公司赞助。目前国内外使用的公司众多,比如:阿里,腾讯,百度,京东,新浪微博,GitHub,Twitter 等Redis的出现，很大程度补偿了memcached这类key&#x2F;value存储的不足，在部分场合可以对关系数据库起到很好的补充作用。它提供了Java，C&#x2F;C++，Go, C#，PHP，JavaScript，Perl，Object-C，Python，Ruby，Erlang等客户端<br>DB-Engine月度排行榜Redis在键值型存储类的数据库长期居于首位,远远高于第二位的memcached</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>速度快: 10W QPS,基于内存,C语言实现</li><li>单线程</li><li>持久化</li><li>支持多种数据结构</li><li>支持多种编程语言</li><li>功能丰富: 支持Lua脚本,发布订阅,事务,pipeline等功能</li><li>简单: 代码短小精悍(单机核心代码只有23000行左右),单线程开发容易,不依赖外部库,使用简单</li><li>主从复制</li><li>支持高可用和分布式</li></ul><h2 id="单线程"><a href="#单线程" class="headerlink" title="单线程"></a>单线程</h2><p>Redis 6.0版本前一直是单线程方式处理用户的请求</p><p><img src="/../image.assets/1670419301827.png" alt="1670419301827"></p><p>单线程为何如此快?</p><ul><li>纯内存</li><li>非阻塞避免线程切换和竞态消耗</li></ul><p><img src="/../image.assets/1670419331717.png" alt="1670419331717"></p><p>注意事项</p><ul><li>一次只运行一条命令</li><li>避免执行长(慢)命令:keys *, flushall, flushdb, slow lua script, mutil&#x2F;exec, operate bigvalue(collection)</li><li>其实不是单线程: 早期版本是单进程单线程,3.0 版本后实际还有其它的线程, 实现特定功能,如: fysnc file descriptor,close file descriptor</li></ul><h2 id="常见应用场景"><a href="#常见应用场景" class="headerlink" title="常见应用场景"></a>常见应用场景</h2><ul><li>缓存：缓存RDBMS中数据,比如网站的查询结果、商品信息、微博、新闻、消息</li><li>Session 共享：实现Web集群中的多服务器间的session共享</li><li>计数器：商品访问排行榜、浏览数、粉丝数、关注、点赞、评论等和次数相关的数值统计场景</li><li>社交：朋友圈、共同好友、可能认识他们等</li><li>地理位置: 基于地理信息系统GIS（Geographic Information System)实现摇一摇、附近的人、外卖等功能</li><li>消息队列：ELK等日志系统缓存、业务的订阅&#x2F;发布系统</li></ul><h2 id="缓存的实现流程"><a href="#缓存的实现流程" class="headerlink" title="缓存的实现流程"></a>缓存的实现流程</h2><p>数据更新操作流程：</p><p><img src="/../image.assets/1670419470181.png" alt="1670419470181"></p><p>数据读操作流程：</p><p><img src="/../image.assets/1670419490780.png" alt="1670419490780"></p><h1 id="Redis安装及连接"><a href="#Redis安装及连接" class="headerlink" title="Redis安装及连接"></a>Redis安装及连接</h1><p>官网下载地址</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://download.redis.io/releases/</span><br></pre></td></tr></table></figure><h2 id="yum安装"><a href="#yum安装" class="headerlink" title="yum安装"></a>yum安装</h2><p>查看yum库redis版本</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum info redis   或者  yum info redis</span><br></pre></td></tr></table></figure><p>yum 安装 redis</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">yum install -y redis</span><br><span class="line"># 启动</span><br><span class="line">systemctl enable --now redis</span><br><span class="line"></span><br><span class="line"># 连接</span><br><span class="line">[root@centos8-backup www]# redis-cli</span><br><span class="line">127.0.0.1:6379&gt; </span><br><span class="line"></span><br><span class="line"># 查看信息</span><br><span class="line">127.0.0.1:6379&gt; info</span><br><span class="line"># Server</span><br><span class="line">redis_version:5.0.3</span><br><span class="line">redis_git_sha1:00000000</span><br><span class="line">redis_git_dirty:0</span><br><span class="line">redis_build_id:9529b692c0384fb7</span><br><span class="line">redis_mode:standalone</span><br><span class="line">os:Linux 4.18.0-348.7.1.el8_5.x86_64 x86_64</span><br><span class="line">arch_bits:64</span><br><span class="line">multiplexing_api:epoll</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><ul><li>Redis源码包下载地址</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://download.redis.io/releases/</span><br></pre></td></tr></table></figure><ul><li>下载源码包</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master ~]# wget http://download.redis.io/releases/redis-6.2.6.tar.gz</span><br><span class="line">[root@centos7-master ~]# tar xf redis-6.2.6.tar.gz</span><br></pre></td></tr></table></figure><ul><li>安装依赖</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># centos</span><br><span class="line">[root@centos7-master ~]# yum -y install gcc jemalloc-devel systemd-devel</span><br><span class="line"># ubuntu</span><br><span class="line">apt -y install make gcc libjemalloc-dev libsystemd-dev</span><br></pre></td></tr></table></figure><ul><li>编译安装</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master ~]# cd redis-6.2.6</span><br><span class="line">#如果支持systemd,需要执行下面</span><br><span class="line">[root@centos7-master redis-6.2.6]# make -j 2 USE_SYSTEMD=yes PREFIX=/usr/local/src/redis  install</span><br><span class="line"></span><br><span class="line"># 配置环境变量</span><br><span class="line">[root@centos7-master ~]# echo &#x27;PATH=/usr/local/src/redis/bin:$PATH&#x27; &gt; /etc/profile.d/redis.sh</span><br><span class="line">[root@centos7-master ~]# </span><br><span class="line">[root@centos7-master ~]# . /etc/profile.d/redis.sh</span><br><span class="line">[root@centos7-master ~]# </span><br><span class="line"></span><br><span class="line">#准备相关目录和配置文件</span><br><span class="line">#创建配置文件、日志、数据等目录</span><br><span class="line">[root@centos7-master redis]# mkdir /usr/local/src/redis/&#123;etc,log,data,run&#125;</span><br><span class="line">[root@centos7-master redis-6.2.6]# cp redis.conf /usr/local/src/redis/etc/</span><br></pre></td></tr></table></figure><ul><li>修改配置文件</li></ul><p>logfile  “&#x2F;usr&#x2F;local&#x2F;src&#x2F;redis&#x2F;log&#x2F;redis_6379.log”</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Specify the log file name. Also the empty string can be used to force</span><br><span class="line"># Redis to log on the standard output. Note that if you use standard</span><br><span class="line"># output for logging but daemonize, logs will be sent to /dev/null</span><br><span class="line">logfile &quot;/usr/local/src/redis/log/redis_6379.log&quot;</span><br><span class="line"></span><br><span class="line"># To enable logging to the system logger, just set &#x27;syslog-enabled&#x27; to yes,</span><br><span class="line"># and optionally update the other syslog parameters to suit your needs.</span><br><span class="line"># syslog-enabled no</span><br><span class="line"></span><br><span class="line"># Specify the syslog identity.</span><br><span class="line"># syslog-ident redis</span><br></pre></td></tr></table></figure><p>pidfile &#x2F;usr&#x2F;local&#x2F;src&#x2F;redis&#x2F;run&#x2F;redis_6379.pid</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Note that on modern Linux systems &quot;/run/redis.pid&quot; is more conforming</span><br><span class="line"># and should be used instead.</span><br><span class="line">#pidfile /var/run/redis_6379.pid</span><br><span class="line">pidfile /usr/local/src/redis/run/redis_6379.pid</span><br><span class="line"></span><br><span class="line"># Specify the server verbosity level.</span><br><span class="line"># This can be one of:</span><br><span class="line"># debug (a lot of information, useful for development/testing)</span><br><span class="line"># verbose (many rarely useful info, but not a mess like the debug level)</span><br><span class="line"># notice (moderately verbose, what you want in production probably)</span><br><span class="line"># warning (only very important / critical messages are logged)</span><br><span class="line">loglevel notice</span><br></pre></td></tr></table></figure><p>dir “&#x2F;usr&#x2F;local&#x2F;src&#x2F;redis&#x2F;data&#x2F;6379”</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Note that you must specify a directory here, not a file name.</span><br><span class="line">dir &quot;/usr/local/src/redis/data/6379&quot;</span><br><span class="line"></span><br><span class="line">################################# REPLICATION #################################</span><br><span class="line"></span><br><span class="line"># Master-Replica replication. Use replicaof to make a Redis instance a copy of</span><br><span class="line"># another Redis server. A few things to understand ASAP about Redis replication.</span><br></pre></td></tr></table></figure><p>dbfilename ‘dump.rdb’</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># sanitize-dump-payload no</span><br><span class="line"></span><br><span class="line"># The filename where to dump the DB</span><br><span class="line">dbfilename &#x27;dump.rdb&#x27;</span><br></pre></td></tr></table></figure><ul><li>前台启动redis</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master ~]# redis-server /usr/local/src/redis/etc/redis.conf </span><br><span class="line">51487:C 07 Dec 2022 22:27:26.620 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span><br><span class="line">51487:C 07 Dec 2022 22:27:26.620 # Redis version=6.2.6, bits=64, commit=00000000, modified=0, pid=51487, just started</span><br><span class="line">51487:C 07 Dec 2022 22:27:26.620 # Configuration loaded</span><br><span class="line">51487:M 07 Dec 2022 22:27:26.620 * Increased maximum number of open files to 10032 (it was originally set to 1024).</span><br><span class="line">51487:M 07 Dec 2022 22:27:26.620 * monotonic clock: POSIX clock_gettime</span><br><span class="line">                _._                                                  </span><br><span class="line">           _.-``__ &#x27;&#x27;-._                                             </span><br><span class="line">      _.-``    `.  `_.  &#x27;&#x27;-._           Redis 6.2.6 (00000000/0) 64 bit</span><br><span class="line">  .-`` .-```.  ```\/    _.,_ &#x27;&#x27;-._                                  </span><br><span class="line"> (    &#x27;      ,       .-`  | `,    )     Running in standalone mode</span><br><span class="line"> |`-._`-...-` __...-.``-._|&#x27;` _.-&#x27;|     Port: 6379</span><br><span class="line"> |    `-._   `._    /     _.-&#x27;    |     PID: 51487</span><br><span class="line">  `-._    `-._  `-./  _.-&#x27;    _.-&#x27;                                   </span><br><span class="line"> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  </span><br><span class="line"> |    `-._`-._        _.-&#x27;_.-&#x27;    |           https://redis.io       </span><br><span class="line">  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   </span><br><span class="line"> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  </span><br><span class="line"> |    `-._`-._        _.-&#x27;_.-&#x27;    |                                  </span><br><span class="line">  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   </span><br><span class="line">      `-._    `-.__.-&#x27;    _.-&#x27;                                       </span><br><span class="line">          `-._        _.-&#x27;                                           </span><br><span class="line">              `-.__.-&#x27;                                               </span><br><span class="line"></span><br><span class="line">51487:M 07 Dec 2022 22:27:26.621 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span><br><span class="line">51487:M 07 Dec 2022 22:27:26.621 # Server initialized</span><br><span class="line">51487:M 07 Dec 2022 22:27:26.621 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to take effect.</span><br><span class="line">51487:M 07 Dec 2022 22:27:26.621 * Ready to accept connections</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>帮助</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master ~]# redis-server -h</span><br><span class="line">Usage: ./redis-server [/path/to/redis.conf] [options] [-]</span><br><span class="line">       ./redis-server - (read config from stdin)</span><br><span class="line">       ./redis-server -v or --version</span><br><span class="line">       ./redis-server -h or --help</span><br><span class="line">       ./redis-server --test-memory &lt;megabytes&gt;</span><br><span class="line"></span><br><span class="line">Examples:</span><br><span class="line">       ./redis-server (run the server with default conf)</span><br><span class="line">       ./redis-server /etc/redis/6379.conf</span><br><span class="line">       ./redis-server --port 7777</span><br><span class="line">       ./redis-server --port 7777 --replicaof 127.0.0.1 8888</span><br><span class="line">       ./redis-server /etc/myredis.conf --loglevel verbose -</span><br><span class="line">       ./redis-server /etc/myredis.conf --loglevel verbose</span><br><span class="line"></span><br><span class="line">Sentinel mode:</span><br><span class="line">       ./redis-server /etc/sentinel.conf --sentinel</span><br><span class="line">[root@centos7-master ~]# </span><br></pre></td></tr></table></figure><ul><li>消除启动时的三个Warning提示信息(可选)</li></ul><p>Tcp backlog</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WARNING: The TCP backlog setting of 511 cannot be enforced because</span><br><span class="line">/proc/sys/net/core/somaxconn is set to the lower value of 128.</span><br></pre></td></tr></table></figure><p>Tcp backlog 是指TCP的第三次握手服务器端收到客户端 ack确认号之后到服务器用Accept函数处理请求前的队列长度，即全连接队列</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#vim /etc/sysctl.conf</span><br><span class="line">net.core.somaxconn = 511</span><br><span class="line">#sysctl -p</span><br></pre></td></tr></table></figure><p> overcommit_memory</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WARNING overcommit_memory is set to 0! Background save may fail under low memory</span><br><span class="line">condition. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf</span><br><span class="line">and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to</span><br><span class="line">take effect.</span><br></pre></td></tr></table></figure><p>内核参数说明</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">内核参数overcommit_memory 实现内存分配策略,可选值有三个：0、1、2</span><br><span class="line">0 表示内核将检查是否有足够的可用内存供应用进程使用；如果有足够的可用内存，内存申请允许；否则内存</span><br><span class="line">申请失败，并把错误返回给应用进程</span><br><span class="line">1 表示内核允许分配所有的物理内存，而不管当前的内存状态如何</span><br><span class="line">2 表示内核允许分配超过所有物理内存和交换空间总和的内存</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#vim /etc/sysctl.conf</span><br><span class="line">vm.overcommit_memory = 1</span><br><span class="line">#sysctl -p</span><br></pre></td></tr></table></figure><p>transparent hugepage</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">WARNING you have Transparent Huge Pages (THP) support enabled in your kernel.</span><br><span class="line">This will create latency and memory usage issues with Redis. To fix this issue</span><br><span class="line">run the command &#x27;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27; as</span><br><span class="line">root, and add it to your /etc/rc.local in order to retain the setting after a</span><br><span class="line">reboot. Redis must be restarted after THP is disabled.</span><br><span class="line">警告：您在内核中启用了透明大页面（THP,不同于一般4k内存页,而为2M）支持。 这将在Redis中造成延迟</span><br><span class="line">和内存使用问题。 要解决此问题，请以root 用户身份运行命令“echo never&gt;</span><br><span class="line">/sys/kernel/mm/transparent_hugepage/enabled”，并将其添加到您的/etc/rc.local中，以便在</span><br><span class="line">重启后保留设置。禁用THP后，必须重新启动Redis。</span><br></pre></td></tr></table></figure><p>注意：ubuntu20.04, Rocky8&#x2F;CentOS8 默认为 never，所以此值无需优化</p><p>验证是否消除warning</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master ~]# redis-server /usr/local/src/redis/etc/redis.conf </span><br><span class="line">51540:C 07 Dec 2022 22:38:45.196 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span><br><span class="line">51540:C 07 Dec 2022 22:38:45.196 # Redis version=6.2.6, bits=64, commit=00000000, modified=0, pid=51540, just started</span><br><span class="line">51540:C 07 Dec 2022 22:38:45.196 # Configuration loaded</span><br><span class="line">51540:M 07 Dec 2022 22:38:45.197 * Increased maximum number of open files to 10032 (it was originally set to 1024).</span><br><span class="line">51540:M 07 Dec 2022 22:38:45.197 * monotonic clock: POSIX clock_gettime</span><br><span class="line">                _._                                                  </span><br><span class="line">           _.-``__ &#x27;&#x27;-._                                             </span><br><span class="line">      _.-``    `.  `_.  &#x27;&#x27;-._           Redis 6.2.6 (00000000/0) 64 bit</span><br><span class="line">  .-`` .-```.  ```\/    _.,_ &#x27;&#x27;-._                                  </span><br><span class="line"> (    &#x27;      ,       .-`  | `,    )     Running in standalone mode</span><br><span class="line"> |`-._`-...-` __...-.``-._|&#x27;` _.-&#x27;|     Port: 6379</span><br><span class="line"> |    `-._   `._    /     _.-&#x27;    |     PID: 51540</span><br><span class="line">  `-._    `-._  `-./  _.-&#x27;    _.-&#x27;                                   </span><br><span class="line"> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  </span><br><span class="line"> |    `-._`-._        _.-&#x27;_.-&#x27;    |           https://redis.io       </span><br><span class="line">  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   </span><br><span class="line"> |`-._`-._    `-.__.-&#x27;    _.-&#x27;_.-&#x27;|                                  </span><br><span class="line"> |    `-._`-._        _.-&#x27;_.-&#x27;    |                                  </span><br><span class="line">  `-._    `-._`-.__.-&#x27;_.-&#x27;    _.-&#x27;                                   </span><br><span class="line">      `-._    `-.__.-&#x27;    _.-&#x27;                                       </span><br><span class="line">          `-._        _.-&#x27;                                           </span><br><span class="line">              `-.__.-&#x27;                                               </span><br><span class="line"></span><br><span class="line">51540:M 07 Dec 2022 22:38:45.197 # Server initialized</span><br><span class="line">51540:M 07 Dec 2022 22:38:45.198 * Loading RDB produced by version 6.2.6</span><br><span class="line">51540:M 07 Dec 2022 22:38:45.198 * RDB age 2 seconds</span><br><span class="line">51540:M 07 Dec 2022 22:38:45.198 * RDB memory usage when created 0.77 Mb</span><br><span class="line">51540:M 07 Dec 2022 22:38:45.198 # Done loading RDB, keys loaded: 0, keys expired: 0.</span><br><span class="line">51540:M 07 Dec 2022 22:38:45.198 * DB loaded from disk: 0.000 seconds</span><br><span class="line">51540:M 07 Dec 2022 22:38:45.198 * Ready to accept connections</span><br></pre></td></tr></table></figure><ul><li>创建 Redis 用户和设置数据目录权限</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master ~]# useradd -r -s /sbin/nologin redis</span><br><span class="line">[root@centos7-master ~]# chown -R  redis.redis /usr/local/src/redis/</span><br><span class="line">[root@centos7-master ~]# </span><br></pre></td></tr></table></figure><ul><li>创建 Redis 服务 Service 文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master ~]# vim /lib/systemd/system/redis.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Redis persistent key-value database</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/src/redis/bin/redis-server /usr/local/src/redis/etc/redis.conf --supervised systemd</span><br><span class="line">ExecStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">Type=notify </span><br><span class="line">User=redis</span><br><span class="line">Group=redis</span><br><span class="line">RuntimeDirectory=redis</span><br><span class="line">RuntimeDirectoryMode=0755</span><br><span class="line">LimitNOFILE=1000000 </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><ul><li>Redis 通过Service方式启动</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart redis</span><br><span class="line">systemctl status redis</span><br></pre></td></tr></table></figure><h2 id="Redis多实例"><a href="#Redis多实例" class="headerlink" title="Redis多实例"></a>Redis多实例</h2><p>基于源码编译安装的前提下实现redis的多实例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># 进入/usr/local/src/redis/etc</span><br><span class="line">[root@centos7-master ~]# cd /usr/local/src/redis/etc/</span><br><span class="line">[root@centos7-master etc]# </span><br><span class="line"></span><br><span class="line"># 修改配置文件，使用6380,6381端口启动实例</span><br><span class="line">[root@centos7-master etc]# sed &#x27;s/6379/6380/&#x27; redis.conf &gt; redis6380.conf</span><br><span class="line">[root@centos7-master etc]# sed &#x27;s/6379/6380/&#x27; redis.conf &gt; redis6381.conf</span><br><span class="line"></span><br><span class="line"># 修改所属组</span><br><span class="line">[root@centos7-master etc]# chown -R redis.redis *</span><br><span class="line"></span><br><span class="line"># 修改启动文件</span><br><span class="line">[root@centos7-master etc]# cp /lib/systemd/system/redis.service /lib/systemd/system/redis6380.service </span><br><span class="line">[root@centos7-master etc]# </span><br><span class="line"></span><br><span class="line">[root@centos7-master etc]# vim /lib/systemd/system/redis6380.service </span><br><span class="line">[Unit]</span><br><span class="line">Description=Redis persistent key-value database</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/src/redis/bin/redis-server /usr/local/src/redis/etc/redis6380.conf --supervised systemd</span><br><span class="line">ExecStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">Type=notify</span><br><span class="line">User=redis</span><br><span class="line">Group=redis</span><br><span class="line">RuntimeDirectory=redis</span><br><span class="line">RuntimeDirectoryMode=0755</span><br><span class="line">LimitNOFILE=1000000</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"># 使用相同方法创建/lib/systemd/system/redis6381.service文件并修改内容</span><br><span class="line"></span><br><span class="line"># 启动实例</span><br><span class="line">[root@centos7-master etc]# systemctl status redis.service</span><br><span class="line">[root@centos7-master etc]# systemctl status redis6380.service</span><br><span class="line">[root@centos7-master etc]# systemctl status redis6381.service</span><br><span class="line"></span><br><span class="line"># 查看6379 6380 6381 端口是否启用</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1670507070884.png" alt="1670507070884"></p><ul><li>连接测试</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master etc]# redis-cli -p 6379</span><br><span class="line">[root@centos7-master etc]# redis-cli -p 6380</span><br><span class="line">[root@centos7-master etc]# redis-cli -p 6381</span><br></pre></td></tr></table></figure><h1 id="Redis-配置管理"><a href="#Redis-配置管理" class="headerlink" title="Redis 配置管理"></a>Redis 配置管理</h1><h2 id="配置文件说明"><a href="#配置文件说明" class="headerlink" title="配置文件说明"></a>配置文件说明</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">bind 0.0.0.0 #指定监听地址，支持用空格隔开的多个监听IP</span><br><span class="line">protected-mode yes #redis3.2之后加入的新特性，在没有设置bind IP和密码的时候,redis只允许访</span><br><span class="line">问127.0.0.1:6379，可以远程连接，但当访问将提示警告信息并拒绝远程访问</span><br><span class="line">port 6379 #监听端口,默认6379/tcp</span><br><span class="line">tcp-backlog 511 #三次握手的时候server端收到client ack确认号之后的队列值，即全连接队列长度</span><br><span class="line">timeout 0 #客户端和Redis服务端的连接超时时间，默认是0，表示永不超时</span><br><span class="line">tcp-keepalive 300 #tcp 会话保持时间300s</span><br><span class="line">daemonize no #默认no,即直接运行redis-server程序时,不作为守护进程运行，而是以前台方式运行，</span><br><span class="line">如果想在后台运行需改成yes,当redis作为守护进程运行的时候，它会写一个 pid 到</span><br><span class="line">/var/run/redis.pid 文件</span><br><span class="line">supervised no #和OS相关参数，可设置通过upstart和systemd管理Redis守护进程，centos7后都使</span><br><span class="line">用systemd</span><br><span class="line">pidfile /var/run/redis_6379.pid #pid文件路径,可以修改</span><br><span class="line">为/apps/redis/run/redis_6379.pid</span><br><span class="line">loglevel notice #日志级别</span><br><span class="line">logfile &quot;/path/redis.log&quot; #日志路径,示例:logfile &quot;/apps/redis/log/redis_6379.log&quot;</span><br><span class="line">databases 16 #设置数据库数量，默认：0-15，共16个库</span><br><span class="line">always-show-logo yes #在启动redis 时是否显示或在日志中记录记录redis的logo</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">save 900 1 #在900秒内有1个key内容发生更改,就执行快照机制</span><br><span class="line">save 300 10 #在300秒内有10个key内容发生更改,就执行快照机制</span><br><span class="line">save 60 10000 #60秒内如果有10000个key以上的变化，就自动快照备份</span><br><span class="line">stop-writes-on-bgsave-error yes #默认为yes时,可能会因空间满等原因快照无法保存出错时，会禁</span><br><span class="line">止redis写入操作，生产建议为no</span><br><span class="line">#此项只针对配置文件中的自动save有效</span><br><span class="line">rdbcompression yes #持久化到RDB文件时，是否压缩，&quot;yes&quot;为压缩，&quot;no&quot;则反之</span><br><span class="line">rdbchecksum yes #是否对备份文件开启RC64校验，默认是开启</span><br><span class="line">dbfilename dump.rdb #快照文件名</span><br><span class="line">dir ./ #快照文件保存路径，示例：dir &quot;/apps/redis/data&quot;</span><br><span class="line">#主从复制相关</span><br><span class="line"># replicaof &lt;masterip&gt; &lt;masterport&gt; #指定复制的master主机地址和端口，5.0版之前的指令为</span><br><span class="line">slaveof</span><br><span class="line"># masterauth &lt;master-password&gt; #指定复制的master主机的密码</span><br><span class="line">replica-serve-stale-data yes #当从库同主库失去连接或者复制正在进行，从机库有两种运行方式：</span><br><span class="line">1、设置为yes(默认设置)，从库会继续响应客户端的读请求，此为建议值</span><br><span class="line">2、设置为no，除去特定命令外的任何请求都会返回一个错误&quot;SYNC with master in progress&quot;。</span><br><span class="line">replica-read-only yes #是否设置从库只读，建议值为yes,否则主库同步从库时可能会覆盖数据，造成</span><br><span class="line">数据丢失</span><br><span class="line">repl-diskless-sync no #是否使用socket方式复制数据(无盘同步)，新slave第一次连接master时需</span><br><span class="line">要做数据的全量同步，redis server就要从内存dump出新的RDB文件，然后从master传到slave，有两种</span><br><span class="line">方式把RDB文件传输给客户端：</span><br><span class="line">1、基于硬盘（disk-backed）：为no时，master创建一个新进程dump生成RDB磁盘文件，RDB完成之后由</span><br><span class="line">父进程（即主进程）将RDB文件发送给slaves，此为默认值</span><br><span class="line">2、基于socket（diskless）：master创建一个新进程直接dump RDB至slave的网络socket，不经过主</span><br><span class="line">进程和硬盘</span><br><span class="line">#推荐使用基于硬盘（为no），是因为RDB文件创建后，可以同时传输给更多的slave，但是基于socket(为</span><br><span class="line">yes)， 新slave连接到master之后得逐个同步数据。只有当磁盘I/O较慢且网络较快时，可用</span><br><span class="line">diskless(yes),否则一般建议使用磁盘(no)</span><br><span class="line">repl-diskless-sync-delay 5 #diskless时复制的服务器等待的延迟时间，设置0为关闭，在延迟时间</span><br><span class="line">内到达的客户端，会一起通过diskless方式同步数据，但是一旦复制开始，master节点不会再接收新slave</span><br><span class="line">的复制请求，直到下一次同步开始才再接收新请求。即无法为延迟时间后到达的新副本提供服务，新副本将排</span><br><span class="line">队等待下一次RDB传输，因此服务器会等待一段时间才能让更多副本到达。推荐值：30-60</span><br><span class="line">repl-ping-replica-period 10 #slave根据master指定的时间进行周期性的PING master,用于监测</span><br><span class="line">master状态,默认10s</span><br><span class="line">repl-timeout 60 #复制连接的超时时间，需要大于repl-ping-slave-period，否则会经常报超时</span><br><span class="line">repl-disable-tcp-nodelay no #是否在slave套接字发送SYNC之后禁用 TCP_NODELAY，如果选</span><br><span class="line">择&quot;yes&quot;，Redis将合并多个报文为一个大的报文，从而使用更少数量的包向slaves发送数据，但是将使数据</span><br><span class="line">传输到slave上有延迟，Linux内核的默认配置会达到40毫秒，如果 &quot;no&quot; ，数据传输到slave的延迟将会</span><br><span class="line">减少，但要使用更多的带宽</span><br><span class="line">repl-backlog-size 512mb #复制缓冲区内存大小，当slave断开连接一段时间后，该缓冲区会累积复制</span><br><span class="line">副本数据，因此当slave 重新连接时，通常不需要完全重新同步，只需传递在副本中的断开连接后没有同步的</span><br><span class="line">部分数据即可。只有在至少有一个slave连接之后才分配此内存空间,建议建立主从时此值要调大一些或在低峰</span><br><span class="line">期配置,否则会导致同步到slave失败</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">repl-backlog-ttl 3600 #多长时间内master没有slave连接，就清空backlog缓冲区</span><br><span class="line">replica-priority 100 #当master不可用，哨兵Sentinel会根据slave的优先级选举一个master，此</span><br><span class="line">值最低的slave会优先当选master，而配置成0，永远不会被选举，一般多个slave都设为一样的值，让其自</span><br><span class="line">动选择</span><br><span class="line">#min-replicas-to-write 3 #至少有3个可连接的slave，mater才接受写操作</span><br><span class="line">#min-replicas-max-lag 10 #和上面至少3个slave的ping延迟不能超过10秒，否则master也将停止</span><br><span class="line">写操作</span><br><span class="line">requirepass foobared #设置redis连接密码，之后需要AUTH pass,如果有特殊符号，用&quot; &quot;引起来,生</span><br><span class="line">产建议设置</span><br><span class="line">rename-command #重命名一些高危命令，示例：rename-command FLUSHALL &quot;&quot; 禁用命令</span><br><span class="line">#示例: rename-command del magedu</span><br><span class="line">maxclients 10000 #Redis最大连接客户端</span><br><span class="line">maxmemory &lt;bytes&gt; #redis使用的最大内存，单位为bytes字节，0为不限制，建议设为物理内存一半，</span><br><span class="line">8G内存的计算方式8(G)*1024(MB)1024(KB)*1024(Kbyte)，需要注意的是缓冲区是不计算在maxmemory</span><br><span class="line">内,生产中如果不设置此项,可能会导致OOM</span><br><span class="line">#maxmemory-policy noeviction 此为默认值</span><br><span class="line"># MAXMEMORY POLICY：当达到最大内存时，Redis 将如何选择要删除的内容。您可以从以下行为中选择一</span><br><span class="line">种：</span><br><span class="line">#</span><br><span class="line"># volatile-lru -&gt; Evict 使用近似 LRU，只有设置了过期时间的键。</span><br><span class="line"># allkeys-lru -&gt; 使用近似 LRU 驱逐任何键。</span><br><span class="line"># volatile-lfu -&gt; 使用近似 LFU 驱逐，只有设置了过期时间的键。</span><br><span class="line"># allkeys-lfu -&gt; 使用近似 LFU 驱逐任何键。</span><br><span class="line"># volatile-random -&gt; 删除设置了过期时间的随机密钥。</span><br><span class="line"># allkeys-random -&gt; 删除一个随机密钥，任何密钥。</span><br><span class="line"># volatile-ttl -&gt; 删除过期时间最近的key（次TTL）</span><br><span class="line"># noeviction -&gt; 不要驱逐任何东西，只是在写操作时返回一个错误。</span><br><span class="line">#</span><br><span class="line"># LRU 表示最近最少使用</span><br><span class="line"># LFU 表示最不常用</span><br><span class="line">#</span><br><span class="line"># LRU、LFU 和 volatile-ttl 都是使用近似随机算法实现的。</span><br><span class="line">#</span><br><span class="line"># 注意：使用上述任何一种策略，当没有合适的键用于驱逐时，Redis 将在需要更多内存的写操作时返回错</span><br><span class="line">误。这些通常是创建新密钥、添加数据或修改现有密钥的命令。一些示例是：SET、INCR、HSET、LPUSH、</span><br><span class="line">SUNIONSTORE、SORT（由于 STORE 参数）和 EXEC（如果事务包括任何需要内存的命令）。</span><br><span class="line">#MAXMEMORY POLICY：当达到最大内存时，Redis 将如何选择要删除的内容。可以从下面行为中进行选</span><br><span class="line">择：</span><br><span class="line"># volatile-lru -&gt; 在具有过期集的键中使用近似 LRU 驱逐。</span><br><span class="line"># allkeys-lru -&gt; 使用近似 LRU 驱逐任何键。</span><br><span class="line"># volatile-lfu -&gt; 在具有过期集的键中使用近似 LFU 驱逐。</span><br><span class="line"># allkeys-lfu -&gt; 使用近似 LFU 驱逐任何键。</span><br><span class="line"># volatile-random -&gt; 从具有过期设置的密钥中删除一个随机密钥。</span><br><span class="line"># allkeys-random -&gt; 删除一个随机密钥，任何密钥。</span><br><span class="line"># volatile-ttl -&gt; 删除过期时间最近的key（次TTL）</span><br><span class="line"># noeviction -&gt; 不要驱逐任何东西，只是在写操作时返回一个错误。</span><br><span class="line">#</span><br><span class="line"># LRU 表示最近最少使用</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># LFU 表示最不常用</span><br><span class="line">#</span><br><span class="line"># LRU、LFU 和 volatile-ttl 均使用近似实现随机算法。</span><br><span class="line">#</span><br><span class="line"># 注意：使用上述任何一种策略，Redis 都会在写入时返回错误操作，当没有合适的键用于驱逐时。</span><br><span class="line">appendonly no #是否开启AOF日志记录，默认redis使用的是rdb方式持久化，这种方式在许多应用中已经</span><br><span class="line">足够用了，但是redis如果中途宕机，会导致可能有几分钟的数据丢失(取决于dump数据的间隔时间)，根据</span><br><span class="line">save来策略进行持久化，Append Only File是另一种持久化方式，可以提供更好的持久化特性，Redis会</span><br><span class="line">把每次写入的数据在接收后都写入 appendonly.aof 文件，每次启动时Redis都会先把这个文件的数据读入</span><br><span class="line">内存里，先忽略RDB文件。默认不启用此功能</span><br><span class="line">appendfilename &quot;appendonly.aof&quot; #文本文件AOF的文件名，存放在dir指令指定的目录中</span><br><span class="line">appendfsync everysec #aof持久化策略的配置</span><br><span class="line">#no表示由操作系统保证数据同步到磁盘,Linux的默认fsync策略是30秒，最多会丢失30s的数据</span><br><span class="line">#always表示每次写入都执行fsync，以保证数据同步到磁盘,安全性高,性能较差</span><br><span class="line">#everysec表示每秒执行一次fsync，可能会导致丢失这1s数据,此为默认值,也生产建议值</span><br><span class="line">#同时在执行bgrewriteaof操作和主进程写aof文件的操作，两者都会操作磁盘，而bgrewriteaof往往会</span><br><span class="line">涉及大量磁盘操作，这样就会造成主进程在写aof文件的时候出现阻塞的情形,以下参数实现控制</span><br><span class="line">no-appendfsync-on-rewrite no #在aof rewrite期间,是否对aof新记录的append暂缓使用文件同步</span><br><span class="line">策略,主要考虑磁盘IO开支和请求阻塞时间。</span><br><span class="line">#默认为no,表示&quot;不暂缓&quot;,新的aof记录仍然会被立即同步到磁盘，是最安全的方式，不会丢失数据，但是要</span><br><span class="line">忍受阻塞的问题</span><br><span class="line">#为yes,相当于将appendfsync设置为no，这说明并没有执行磁盘操作，只是写入了缓冲区，因此这样并不</span><br><span class="line">会造成阻塞（因为没有竞争磁盘），但是如果这个时候redis挂掉，就会丢失数据。丢失多少数据呢？Linux</span><br><span class="line">的默认fsync策略是30秒，最多会丢失30s的数据,但由于yes性能较好而且会避免出现阻塞因此比较推荐</span><br><span class="line">#rewrite 即对aof文件进行整理,将空闲空间回收,从而可以减少恢复数据时间</span><br><span class="line">auto-aof-rewrite-percentage 100 #当Aof log增长超过指定百分比例时，重写AOF文件，设置为0表</span><br><span class="line">示不自动重写Aof日志，重写是为了使aof体积保持最小，但是还可以确保保存最完整的数据</span><br><span class="line">auto-aof-rewrite-min-size 64mb #触发aof rewrite的最小文件大小</span><br><span class="line">aof-load-truncated yes #是否加载由于某些原因导致的末尾异常的AOF文件(主进程被kill/断电等)，</span><br><span class="line">建议yes</span><br><span class="line">aof-use-rdb-preamble no #redis4.0新增RDB-AOF混合持久化格式，在开启了这个功能之后，AOF重</span><br><span class="line">写产生的文件将同时包含RDB格式的内容和AOF格式的内容，其中RDB格式的内容用于记录已有的数据，而AOF</span><br><span class="line">格式的内容则用于记录最近发生了变化的数据，这样Redis就可以同时兼有RDB持久化和AOF持久化的优点（既</span><br><span class="line">能够快速地生成重写文件，也能够在出现问题时，快速地载入数据）,默认为no,即不启用此功能</span><br><span class="line">lua-time-limit 5000 #lua脚本的最大执行时间，单位为毫秒</span><br><span class="line">cluster-enabled yes #是否开启集群模式，默认不开启,即单机模式</span><br><span class="line">cluster-config-file nodes-6379.conf #由node节点自动生成的集群配置文件名称</span><br><span class="line">cluster-node-timeout 15000 #集群中node节点连接超时时间，单位ms,超过此时间，会踢出集群</span><br><span class="line">cluster-replica-validity-factor 10 #单位为次,在执行故障转移的时候可能有些节点和master断</span><br><span class="line">开一段时间导致数据比较旧，这些节点就不适用于选举为master，超过这个时间的就不会被进行故障转移,不</span><br><span class="line">能当选master，计算公式：(node-timeout * replica-validity-factor) + repl-ping-</span><br><span class="line">replica-period</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cluster-migration-barrier 1 #集群迁移屏障，一个主节点至少拥有1个正常工作的从节点，即如果主</span><br><span class="line">节点的slave节点故障后会将多余的从节点分配到当前主节点成为其新的从节点。</span><br><span class="line">cluster-require-full-coverage yes #集群请求槽位全部覆盖，如果一个主库宕机且没有备库就会出</span><br><span class="line">现集群槽位不全，那么yes时redis集群槽位验证不全,就不再对外提供服务(对key赋值时,会出现</span><br><span class="line">CLUSTERDOWN The cluster is down的提示,cluster_state:fail,但ping 仍PONG)，而no则可以</span><br><span class="line">继续使用,但是会出现查询数据查不到的情况(因为有数据丢失)。生产建议为no</span><br><span class="line">cluster-replica-no-failover no #如果为yes,此选项阻止在主服务器发生故障时尝试对其主服务器进</span><br><span class="line">行故障转移。 但是，主服务器仍然可以执行手动强制故障转移，一般为no</span><br><span class="line">#Slow log 是 Redis 用来记录超过指定执行时间的日志系统，执行时间不包括与客户端交谈，发送回复等</span><br><span class="line">I/O操作，而是实际执行命令所需的时间（在该阶段线程被阻塞并且不能同时为其它请求提供服务）,由于</span><br><span class="line">slow log 保存在内存里面，读写速度非常快，因此可放心地使用，不必担心因为开启 slow log 而影响</span><br><span class="line">Redis 的速度</span><br><span class="line">slowlog-log-slower-than 10000 #以微秒为单位的慢日志记录，为负数会禁用慢日志，为0会记录每个</span><br><span class="line">命令操作。默认值为10ms,一般一条命令执行都在微秒级,生产建议设为1ms-10ms之间</span><br><span class="line">slowlog-max-len 128 #最多记录多少条慢日志的保存队列长度，达到此长度后，记录新命令会将最旧的命</span><br><span class="line">令从命令队列中删除，以此滚动删除,即,先进先出,队列固定长度,默认128,值偏小,生产建议设为1000以上</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/ysocean/p/9074787.html">Redis的配置文件介绍</a> </p><h2 id="config-命令实现动态修改配置"><a href="#config-命令实现动态修改配置" class="headerlink" title="config 命令实现动态修改配置"></a>config 命令实现动态修改配置</h2><p>config 命令用于查看当前redis配置、以及不重启redis服务实现动态更改redis配置等<br>注意：不是所有配置都可以动态修改,且此方式无法持久保存</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CONFIG SET parameter value</span><br><span class="line">时间复杂度：O(1)</span><br><span class="line">CONFIG SET 命令可以动态地调整 Redis 服务器的配置(configuration)而无须重启。</span><br><span class="line">可以使用它修改配置参数，或者改变 Redis 的持久化(Persistence)方式。</span><br><span class="line">CONFIG SET 可以修改的配置参数可以使用命令 CONFIG GET * 来列出，所有被 CONFIG SET 修改的配</span><br><span class="line">置参数都会立即生效。</span><br><span class="line">CONFIG GET parameter</span><br><span class="line">时间复杂度： O(N)，其中 N 为命令返回的配置选项数量。</span><br><span class="line">CONFIG GET 命令用于取得运行中的 Redis 服务器的配置参数(configuration parameters)，在</span><br><span class="line">Redis 2.4 版本中， 有部分参数没有办法用 CONFIG GET 访问，但是在最新的 Redis 2.6 版本中，所</span><br><span class="line">有配置参数都已经可以用 CONFIG GET 访问了。</span><br><span class="line">CONFIG GET 接受单个参数 parameter 作为搜索关键字，查找所有匹配的配置参数，其中参数和值以“键-</span><br><span class="line">值对”(key-value pairs)的方式排列。</span><br><span class="line">比如执行 CONFIG GET s* 命令，服务器就会返回所有以 s 开头的配置参数及参数的值：</span><br></pre></td></tr></table></figure><h3 id="设置客户端连接密码"><a href="#设置客户端连接密码" class="headerlink" title="设置客户端连接密码"></a>设置客户端连接密码</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#设置连接密码</span><br><span class="line">127.0.0.1:6379&gt; CONFIG SET requirepass 123456</span><br><span class="line">OK</span><br><span class="line">#查看连接密码</span><br><span class="line">127.0.0.1:6379&gt; CONFIG GET requirepass</span><br><span class="line">1) &quot;requirepass&quot;</span><br><span class="line">2) &quot;123456&quot;</span><br></pre></td></tr></table></figure><h3 id="获取当前配置"><a href="#获取当前配置" class="headerlink" title="获取当前配置"></a>获取当前配置</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#奇数行为键，偶数行为值</span><br><span class="line">127.0.0.1:6379&gt; CONFIG GET *</span><br><span class="line">1) &quot;dbfilename&quot;</span><br><span class="line">2) &quot;dump.rdb&quot;</span><br><span class="line">3) &quot;requirepass&quot;</span><br><span class="line">4) &quot;&quot;</span><br><span class="line">5) &quot;masterauth&quot;</span><br><span class="line">6) &quot;&quot;</span><br><span class="line">7) &quot;cluster-announce-ip&quot;</span><br><span class="line">8) &quot;&quot;</span><br><span class="line">9) &quot;unixsocket&quot;</span><br><span class="line">10) &quot;&quot;</span><br><span class="line">11) &quot;logfile&quot;</span><br><span class="line">12) &quot;/var/log/redis/redis.log&quot;</span><br><span class="line">13) &quot;pidfile&quot;</span><br><span class="line">14) &quot;/var/run/redis_6379.pid&quot;</span><br><span class="line">15) &quot;slave-announce-ip&quot;</span><br><span class="line">16) &quot;&quot;</span><br><span class="line">17) &quot;replica-announce-ip&quot;</span><br><span class="line">18) &quot;&quot;</span><br><span class="line">19) &quot;maxmemory&quot;</span><br><span class="line">20) &quot;0&quot;</span><br><span class="line">......</span><br><span class="line">#查看bind</span><br><span class="line">127.0.0.1:6379&gt; CONFIG GET bind</span><br><span class="line">1) &quot;bind&quot;</span><br><span class="line">2) &quot;0.0.0.0&quot;</span><br><span class="line">#Redis5.0有些设置无法修改,Redis6.2.6版本支持修改bind</span><br><span class="line">127.0.0.1:6379&gt; CONFIG SET bind 127.0.0.1</span><br><span class="line">(error) ERR Unsupported CONFIG parameter: bind</span><br></pre></td></tr></table></figure><h3 id="设置Redis使用的最大内存量"><a href="#设置Redis使用的最大内存量" class="headerlink" title="设置Redis使用的最大内存量"></a>设置Redis使用的最大内存量</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; CONFIG SET maxmemory 8589934592</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; CONFIG GET maxmemory</span><br><span class="line">1) &quot;maxmemory&quot;</span><br><span class="line">2) &quot;8589934592&quot;</span><br></pre></td></tr></table></figure><h3 id="慢查询"><a href="#慢查询" class="headerlink" title="慢查询"></a>慢查询</h3><p>范例：SLOW LOG</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/redis.conf</span><br><span class="line">slowlog-log-slower-than 1 #指定超过1us即为慢的指令，默认值为10000us</span><br><span class="line">slowlog-max-len 1024 #指定只保存最近的1024条慢记录，默认值为128</span><br><span class="line">127.0.0.1:6379&gt; SLOWLOG LEN #查看慢日志的记录条数</span><br><span class="line">(integer) 14</span><br><span class="line">127.0.0.1:6379&gt; SLOWLOG GET [n] #查看慢日志的n条记录</span><br><span class="line">1) 1) (integer) 14</span><br><span class="line">2) (integer) 1544690617</span><br><span class="line">3) (integer) 4 #第3)行表示每条指令的执行时长</span><br><span class="line">4) 1) &quot;slowlog&quot;</span><br><span class="line">127.0.0.1:6379&gt; SLOWLOG GET 3</span><br><span class="line">1) 1) (integer) 7</span><br><span class="line">2) (integer) 1602901545</span><br><span class="line">3) (integer) 26</span><br><span class="line">4) 1) &quot;SLOWLOG&quot;</span><br><span class="line">2) &quot;get&quot;</span><br><span class="line">5) &quot;127.0.0.1:38258&quot;</span><br><span class="line">6) &quot;&quot;</span><br><span class="line">2) 1) (integer) 6</span><br><span class="line">2) (integer) 1602901540</span><br><span class="line">3) (integer) 22</span><br><span class="line">4) 1) &quot;SLOWLOG&quot;</span><br><span class="line">2) &quot;get&quot;</span><br><span class="line">3) &quot;2&quot;</span><br><span class="line">5) &quot;127.0.0.1:38258&quot;</span><br><span class="line">6) &quot;&quot;</span><br><span class="line">3) 1) (integer) 5</span><br><span class="line">2) (integer) 1602901497</span><br><span class="line">3) (integer) 22</span><br><span class="line">4) 1) &quot;SLOWLOG&quot;</span><br><span class="line">2) &quot;GET&quot;</span><br><span class="line">5) &quot;127.0.0.1:38258&quot;</span><br><span class="line">6) &quot;&quot;</span><br><span class="line">127.0.0.1:6379&gt; SLOWLOG RESET #清空慢日志</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><h3 id="Redis持久化"><a href="#Redis持久化" class="headerlink" title="Redis持久化"></a>Redis持久化</h3><p><img src="/../image.assets/1670853239934.png" alt="1670853239934"></p><h4 id="RDB"><a href="#RDB" class="headerlink" title="RDB"></a>RDB</h4><p>RDB 工作原理</p><p><img src="/../image.assets/1670853325839.png" alt="1670853325839"></p><p><img src="/../image.assets/1670853341364.png" alt="1670853341364"></p><p><img src="/../image.assets/1670853373976.png" alt="1670853373976"></p><p><img src="/../image.assets/1670853388030.png" alt="1670853388030"></p><p><img src="/../image.assets/1670853405541.png" alt="1670853405541"></p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><img src="/../image.assets/1670853437912.png" alt="1670853437912"></p><p><img src="/../image.assets/1670853466251.png" alt="1670853466251"></p><p><img src="/../image.assets/1670853480093.png" alt="1670853480093"></p><h4 id="AOF"><a href="#AOF" class="headerlink" title="AOF"></a>AOF</h4><p><img src="/../image.assets/1670853532980.png" alt="1670853532980"></p><p><img src="/../image.assets/1670853557144.png" alt="1670853557144"></p>]]></content>
      
      
      <categories>
          
          <category> Redis基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络文件共享服务</title>
      <link href="/2022/12/04/%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1/"/>
      <url>/2022/12/04/%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="NFS服务"><a href="#NFS服务" class="headerlink" title="NFS服务"></a>NFS服务</h1><h2 id="NFS工作原理"><a href="#NFS工作原理" class="headerlink" title="NFS工作原理"></a>NFS工作原理</h2><p><img src="/../image.assets/1670127215657.png" alt="1670127215657"></p><p>NFS：Network File System 网络文件系统，基于内核的文件系统。Sun 公司开发，通过使用 NFS，用户和程序可以像访问本地文件一样访问远端系统上的文件，基于RPC（Remote Procedure CallProtocol 远程过程调用）实现。<br>RPC采用C&#x2F;S模式，客户机请求程序调用进程发送一个有进程参数的调用信息到服务进程，然后等待应答信息。在服务器端，进程保持睡眠状态直到调用信息到达为止。当一个调用信息到达，服务器获得进程参数，计算结果，发送答复信息，然后等待下一个调用信息，最后，客户端调用进程接收答复信息，获得进程结果，然后调用执行继续进行。</p><p><img src="/../image.assets/1670127252975.png" alt="1670127252975"></p><p>NFS优势：节省本地存储空间，将常用的数据,如：&#x2F;home目录，存放在NFS服务器上且可以通过网络访<br>问，本地终端将可减少自身存储空间的使用。</p><h2 id="NFS软件介绍"><a href="#NFS软件介绍" class="headerlink" title="NFS软件介绍"></a>NFS软件介绍</h2><p>软件包：nfs-utils（包括服务器和客户端相关工具，CentOS8 最小化安装时默认没有安装），nfs-common(Ubuntu中包名)<br>相关软件包：rpcbind（必须），tcp_wrappers<br>Kernel支持：nfs.ko<br>端口：2049(nfsd), 其它端口由portmap(111)分配<br>NFS服务主要进程：  </p><ul><li>rpc.nfsd 最主要的NFS进程，管理客户端是否可登录  </li><li>rpc.mountd 挂载和卸载NFS文件系统，包括权限管理  </li><li>rpc.lockd 非必要，管理文件锁，避免同时写出错  </li><li>rpc.statd 非必要，检查文件一致性，可修复文件</li></ul><p>说明：CentOS 6 开始portmap进程由rpcbind代替<br>日志：&#x2F;var&#x2F;lib&#x2F;nfs&#x2F;<br>NFS配置文件</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/exports</span><br><span class="line">/etc/exports.d/*.exports</span><br></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">默认选项：(ro,sync,root_squash,no_all_squash)</span><br><span class="line">ro,rw 只读和读写</span><br><span class="line">async 异步，数据变化后不立即写磁盘，先写入到缓冲区中，过一段时间再写入磁盘，性能高,安全性低</span><br><span class="line">sync（1.0.0后为默认）同步，数据在请求时立即写入共享存储磁盘,性能低,安全性高</span><br><span class="line">root_squash （默认）远程root映射为nfsnobody,UID为65534，CentOS8 为nobody,CentOS</span><br><span class="line">7以前的版本为nfsnobody</span><br><span class="line">no_root_squash 远程root映射成NFS服务器的root用户</span><br><span class="line">all_squash 所有远程用户(包括root)都变成nfsnobody,CentOS8 为nobody</span><br><span class="line">no_all_squash （默认）保留共享文件的UID和GID</span><br><span class="line">anonuid和anongid 指明匿名用户映射为特定用户UID和组GID，而非nobody,可配合all_squash使</span><br><span class="line">用</span><br></pre></td></tr></table></figure><h2 id="NFS工具"><a href="#NFS工具" class="headerlink" title="NFS工具"></a>NFS工具</h2><h3 id="rpcinfo"><a href="#rpcinfo" class="headerlink" title="rpcinfo"></a>rpcinfo</h3><p>rpcinfo 工具可以查看RPC相关信息<br>查看注册在指定主机的RPC程序</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpcinfo -p hostname</span><br></pre></td></tr></table></figure><p>查看RPC注册程序</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpcinfo -s hostname</span><br></pre></td></tr></table></figure><h3 id="exportfs"><a href="#exportfs" class="headerlink" title="exportfs"></a>exportfs</h3><p>exportfs:可用于管理NFS导出的文件系统<br>常见选项</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-v #查看本机所有NFS共享</span><br><span class="line">-r #重读配置文件，并共享目录</span><br><span class="line">-a #输出本机所有共享</span><br><span class="line">-au #停止本机所有共享</span><br></pre></td></tr></table></figure><h3 id="showmount"><a href="#showmount" class="headerlink" title="showmount"></a>showmount</h3><p>常见用法：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查看远程主机的NFS共享</span><br><span class="line">showmount -e hostname</span><br></pre></td></tr></table></figure><h3 id="mount-nfs"><a href="#mount-nfs" class="headerlink" title="mount.nfs"></a>mount.nfs</h3><p>客户端NFS挂载<br>NFS相关的挂载选项：man 5 nfs</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fg #（默认）前台挂载</span><br><span class="line">bg #后台挂载</span><br><span class="line">hard #（默认）持续请求</span><br><span class="line">soft #非持续请求</span><br><span class="line">intr #和hard配合，请求可中断</span><br><span class="line">rsize #和wsize 一次读和写数据最大字节数，rsize=32768</span><br><span class="line">_netdev #无网络服务时不挂载NFS资源</span><br><span class="line">vers #指定版本，客户端centos8默认4.2 ，centos7默认4.1 centos6默认4.0</span><br></pre></td></tr></table></figure><p>提示：基于安全考虑，建议使用 nosuid,<em>netdev,noexec 挂载选项</em></p><h1 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h1><p><img src="/../image.assets/1670246134779.png" alt="1670246134779"></p><ul><li>NFS服务器安装软件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nfs-utils</span><br><span class="line"></span><br><span class="line"># 启动rpcbind</span><br><span class="line">systemctl start rpcbind</span><br><span class="line"></span><br><span class="line"># 启动nfs-server</span><br><span class="line">systemctl start nfs-server</span><br></pre></td></tr></table></figure><ul><li>NFS服务器创建共享文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 共享根目录下的share目录</span><br><span class="line">mkdir /share</span><br></pre></td></tr></table></figure><ul><li>添加uid和gid为300的用户nfs-upload</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master ~]# groupadd -g 300 nfs-upload</span><br><span class="line">[root@centos7-master ~]# useradd -u 300 -g 300 nfs-upload</span><br><span class="line">[root@centos7-master ~]# </span><br><span class="line">#修改所属组权限</span><br><span class="line">[root@centos7-master share]# chown -R 300:300 /share</span><br></pre></td></tr></table></figure><ul><li>修改NFS服务器配置文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-master ~]# vim /etc/exports</span><br><span class="line"># 加入如下内容，*表示任何人，rw表示读写</span><br><span class="line">/share/ 192.168.179.*(rw,anongid=300,anonuid=300)</span><br></pre></td></tr></table></figure><ul><li>重新加载配置</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 重新加载配置文件</span><br><span class="line">[root@centos7-master ~]# exportfs -r</span><br><span class="line">[root@centos7-master ~]# exportfs -v</span><br><span class="line">/share        192.168.179.*(sync,wdelay,hide,no_subtree_check,anonuid=300,anongid=300,sec=sys,rw,secure,root_squash,no_all_squash)</span><br><span class="line">[root@centos7-master ~]# </span><br></pre></td></tr></table></figure><ul><li>客户端安装软件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nfs-utils</span><br><span class="line"></span><br><span class="line"># 启动rpcbind</span><br><span class="line">systemctl start rpcbind</span><br><span class="line"></span><br><span class="line"># 启动nfs-server</span><br><span class="line">systemctl start nfs-server</span><br></pre></td></tr></table></figure><ul><li>添加用户和组</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-slave /]# groupadd -g 300 nfs-upload</span><br><span class="line">[root@centos7-slave /]# useradd -u 300 -g 300 nfs-upload</span><br></pre></td></tr></table></figure><ul><li>在客户端挂载，挂载&#x2F;nfsshare目录下</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 创建目录</span><br><span class="line">mkdir /nfsshare</span><br><span class="line"># 查看服务器端可挂载点</span><br><span class="line">[root@centos7-slave ~]# showmount -e 192.168.179.170</span><br><span class="line">Export list for 192.168.179.170:</span><br><span class="line">/share *</span><br><span class="line">[root@centos7-slave nfsshare]# </span><br><span class="line"></span><br><span class="line"># 挂载方式1，关机重启会失效</span><br><span class="line">[root@centos7-slave ~]# mount 192.168.179.170:/share/ /nfsshare</span><br><span class="line"></span><br><span class="line"># 方式二修改配置文件，关机重启不失效</span><br><span class="line">[root@centos7-slave ~]# vim /etc/fstab </span><br><span class="line"># 加入如下内容</span><br><span class="line">192.168.179.170:/share                    /nfsshare  nfs     defaults,_netdev 0 0</span><br><span class="line"># 使配置文件生效</span><br><span class="line">[root@centos7-slave nfsshare]# mount -a</span><br><span class="line">[root@centos7-slave nfsshare]# </span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 在客户端上查看/nfsshare的内容</span><br><span class="line">[root@centos7-slave nfsshare]# ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 nfs-upload nfs-upload  5 Dec  5 23:14 a.xtx</span><br><span class="line">drwxr-xr-x 2 nfs-upload nfs-upload  6 Dec  5 23:17 newfile</span><br><span class="line">-rw-r--r-- 1 nfs-upload nfs-upload 17 Dec  5 23:11 test.log</span><br><span class="line">[root@centos7-slave nfsshare]# </span><br><span class="line"></span><br><span class="line"># 在服务器端查看/share目录</span><br><span class="line">[root@centos7-master share]# ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 nfs-upload nfs-upload  5 Dec  5 23:14 a.xtx</span><br><span class="line">drwxr-xr-x 2 nfs-upload nfs-upload  6 Dec  5 23:17 newfile</span><br><span class="line">-rw-r--r-- 1 nfs-upload nfs-upload 17 Dec  5 23:11 test.log</span><br><span class="line">[root@centos7-master share]#</span><br></pre></td></tr></table></figure><h1 id="数据的实时同步"><a href="#数据的实时同步" class="headerlink" title="数据的实时同步"></a>数据的实时同步</h1><h3 id="实时同步技术介绍"><a href="#实时同步技术介绍" class="headerlink" title="实时同步技术介绍"></a>实时同步技术介绍</h3><p>实现实时同步的方法</p><ul><li>inotify + rsync 方式实现数据同步</li><li>sersync ：前金山公司周洋（花椒直播）在 inotify 软件基础上进行开发的，功能更加强大</li></ul><p>工作原理：</p><ul><li>要利用监控服务（inotify），监控同步数据服务器目录中信息的变化</li><li>发现目录中数据产生变化，就利用rsync服务推送到备份服务器上</li></ul><p>inotify：<br>异步的文件系统事件监控机制，利用事件驱动机制，而无须通过诸如cron等的轮询机制来获取事件，linux内核从2.6.13起支持 inotify，通过inotify可以监控文件系统中添加、删除，修改、移动等各种事件</p><p><strong>实现inotify软件：</strong></p><ul><li>inotify-tools</li><li>sersync</li><li>lrsyncd</li></ul><p><strong>inotify+rsync使用方式</strong></p><ul><li>inotify 对同步数据目录信息的监控</li><li>rsync 完成对数据的同步</li><li>利用脚本进行结合</li></ul><h3 id="实现-inotify"><a href="#实现-inotify" class="headerlink" title="实现 inotify"></a>实现 inotify</h3><p>内核是否支持inotify<br>Linux支持inotify的内核最小版本为 2.6.13，参看man 7 inotify</p><p><strong>inotify 内核参数说明：</strong></p><ul><li>max_queued_events：inotify 事件队列最大长度，如值太小会出现 Event Queue Overflow 错<br>误，默认值：16384, 生产环境建议调大,比如:327679</li><li>max_user_instances：每个用户创建inotify实例最大值，默认值：128</li><li>max_user_watches：可以监视的文件的总数量（inotifywait 单进程），默认值：8192,建议调大</li></ul><h4 id="inotify-tools工具"><a href="#inotify-tools工具" class="headerlink" title="inotify-tools工具"></a>inotify-tools工具</h4><p>inotify-tools参考文档：<a href="https://github.com/rvoicilas/inotify-tools/wiki">https://github.com/rvoicilas/inotify-tools/wiki</a><br>安装inotify-tools：基于epel源</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br><span class="line">yum -y install inotify-tools</span><br></pre></td></tr></table></figure><p><strong>inotify-tools包主要工具：</strong></p><ul><li>inotifywait： 在被监控的文件或目录上等待特定文件系统事件（open ，close，delete等）发生，<br>常用于实时同步的目录监控</li><li>inotifywatch：收集被监控的文件系统使用的统计数据，指文件系统事件发生的次数统计</li></ul><p>inotifywait 命令<br>格式:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inotifywait [ options ] file1 [ file2 ] [ file3 ] [ ... ]</span><br></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-m, --monitor 始终保持事件监听</span><br><span class="line">-d, --daemon 以守护进程方式执行，和-m相似，配合-o使用</span><br><span class="line">-r, --recursive 递归监控目录数据信息变化</span><br><span class="line">-q, --quiet 输出少量事件信息</span><br><span class="line">--exclude &lt;pattern&gt; 指定排除文件或目录，使用扩展的正则表达式匹配的模式实现</span><br><span class="line">--excludei &lt;pattern&gt; 和exclude相似，不区分大小写</span><br><span class="line">-o, --outfile &lt;file&gt; 打印事件到文件中，相当于标准正确输出，注意：使用绝对路径</span><br><span class="line">-s, --syslogOutput 发送错误到syslog相当于标准错误输出</span><br><span class="line">--timefmt &lt;fmt&gt; 指定时间输出格式</span><br><span class="line">--format &lt;fmt&gt; 指定的输出格式；即实际监控输出内容</span><br><span class="line">-e</span><br></pre></td></tr></table></figure><p><strong>inotifywait 的–timefmt 时间格式</strong><br>参考 man 3 strftime</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">%Y #年份信息，包含世纪信息</span><br><span class="line">%y #年份信息，不包括世纪信息</span><br><span class="line">%m #显示月份，范围 01-12</span><br><span class="line">%d #每月的第几天，范围是 01-31</span><br><span class="line">%H #小时信息，使用 24小时制，范围 00-23</span><br><span class="line">%M #分钟，范围 00-59</span><br><span class="line">%S #秒，范例 0-60</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--timefmt &quot;%Y-%m-%d %H:%M:%S&quot;</span><br></pre></td></tr></table></figure><p><strong>inotifywait 的 –format 格式定义</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%T #输出时间格式中定义的时间格式信息，通过 --timefmt option 语法格式指定时间信息</span><br><span class="line">%w #事件出现时，监控文件或目录的名称信息，相当于dirname</span><br><span class="line">%f #事件出现时，将显示监控目录下触发事件的文件或目录信息，否则为空，相当于basename</span><br><span class="line">%e #显示发生的事件信息，不同的事件默认用逗号分隔</span><br><span class="line">%Xe #显示发生的事件信息，不同的事件指定用X进行分隔</span><br></pre></td></tr></table></figure><p>范例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--format &quot;%T %w%f event: %;e&quot;</span><br><span class="line">--format &#x27;%T %w %f&#x27;</span><br></pre></td></tr></table></figure><p>inotifywait -e 选项指定的事件类型</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">create #文件或目录创建</span><br><span class="line">delete #文件或目录被删除</span><br><span class="line">modify #文件或目录内容被写入</span><br><span class="line">attrib #文件或目录属性改变</span><br><span class="line">close_write #文件或目录关闭，在写入模式打开之后关闭的</span><br><span class="line">close_nowrite #文件或目录关闭，在只读模式打开之后关闭的</span><br><span class="line">close #文件或目录关闭，不管读或是写模式</span><br><span class="line">open #文件或目录被打开</span><br><span class="line">lsdir #浏览目录内容</span><br><span class="line">moved_to #文件或目录被移动到监控的目录中</span><br><span class="line">moved_from #文件或目录从监控的目录中被移动</span><br><span class="line">move #文件或目录不管移动到或是移出监控目录都触发事件</span><br><span class="line">access #文件或目录内容被读取</span><br><span class="line">delete_self #文件或目录被删除，目录本身被删除</span><br><span class="line">unmount #取消挂载</span><br></pre></td></tr></table></figure><p>范例</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-e create,delete,moved_to,close_write,attrib</span><br></pre></td></tr></table></figure><p>范例：使用inotifywait</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 监控一次事件</span><br><span class="line">[root@centos7 /]# inotifywait /data/www/</span><br><span class="line">Setting up watches.</span><br><span class="line">Watches established.</span><br><span class="line">/data/www/ CREATE,ISDIR html</span><br><span class="line">[root@centos7 /]# </span><br><span class="line"></span><br><span class="line"># 持续前台监控</span><br><span class="line">[root@centos7 /]# inotifywait -mrq /data/www --exclude=&quot;.*\.swx|\.swp&quot;</span><br><span class="line">/data/www/ OPEN,ISDIR </span><br><span class="line">/data/www/ CLOSE_NOWRITE,CLOSE,ISDIR </span><br><span class="line">/data/www/ CREATE mysql.log</span><br><span class="line">/data/www/ OPEN mysql.log</span><br><span class="line">/data/www/ ATTRIB mysql.log</span><br><span class="line">/data/www/ CLOSE_WRITE,CLOSE mysql.log</span><br><span class="line">/data/www/ OPEN,ISDIR </span><br><span class="line">/data/www/ CLOSE_NOWRITE,CLOSE,ISDIR </span><br><span class="line">/data/www/ MODIFY mysql.log</span><br><span class="line">/data/www/ OPEN mysql.log</span><br><span class="line">/data/www/ MODIFY mysql.log</span><br><span class="line">/data/www/ CLOSE_WRITE,CLOSE mysql.log</span><br><span class="line">/data/www/ OPEN,ISDIR </span><br><span class="line">/data/www/ CLOSE_NOWRITE,CLOSE,ISDIR </span><br><span class="line">/data/www/ OPEN mysql.log</span><br><span class="line">/data/www/ ACCESS mysql.log</span><br><span class="line">/data/www/ CLOSE_NOWRITE,CLOSE mysql.log</span><br><span class="line"></span><br><span class="line">#持续后台监控，并记录日志</span><br><span class="line">inotifywait -o /root/inotify.log -drq /data/www --timefmt &quot;%Y-%m-%d %H:%M:%S&quot; --</span><br><span class="line">format &quot;%T %w%f event: %e&quot;</span><br><span class="line">#持续前台监控特定事件</span><br><span class="line">inotifywait -mrq /data/www --timefmt &quot;%F %H:%M:%S&quot; --format &quot;%T %w%f event:</span><br><span class="line">%;e&quot; -e create,delete,moved_to,close_write,attrib</span><br></pre></td></tr></table></figure><h2 id="rsync-服务"><a href="#rsync-服务" class="headerlink" title="rsync 服务"></a>rsync 服务</h2><p>rsync 常用于做为 linux系统下的数据镜像备份工具，实现远程同步，支持本地复制，或者与其他SSH、<br>rsync主机同步数据，支持增量备份，配合任务计划，rsync能实现定时或间隔同步，配合inotify或<br>sersync，可以实现触发式的实时数据同步<br>官方网站: <a href="http://rsync.samba.org/">http://rsync.samba.org/</a></p><p>软件包：rsync，rsync-daemon（CentOS 8）<br>服务文件：&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;rsyncd.service<br>配置文件：&#x2F;etc&#x2F;rsyncd.conf<br>端口：873&#x2F;tcp</p><h4 id="rsync命令"><a href="#rsync命令" class="headerlink" title="rsync命令"></a>rsync命令</h4><p>rsync 格式</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#Local:</span><br><span class="line">rsync [OPTION...] SRC... [DEST]</span><br><span class="line">#Access via remote shell:</span><br><span class="line">Pull:</span><br><span class="line">rsync [OPTION...] [USER@]HOST:SRC... [DEST]</span><br><span class="line">Push:</span><br><span class="line">rsync [OPTION...] SRC... [USER@]HOST:DEST</span><br><span class="line">#Access via rsync daemon:</span><br><span class="line">Pull:</span><br><span class="line">rsync [OPTION...] [USER@]HOST::SRC... [DEST]</span><br><span class="line">rsync [OPTION...] rsync://[USER@]HOST[:PORT]/SRC... [DEST]</span><br><span class="line">Push:</span><br><span class="line">rsync [OPTION...] SRC... [USER@]HOST::DEST</span><br><span class="line">rsync [OPTION...] SRC... rsync://[USER@]HOST[:PORT]/DEST</span><br><span class="line">The &#x27;:&#x27; usages connect via remote shell, while &#x27;::&#x27; &amp; &#x27;rsync://&#x27; usages connect</span><br><span class="line">to an rsync daemon, and require SRC or DEST to start with a module name.</span><br></pre></td></tr></table></figure><p>rsync有三种工作方式：</p><ol><li>本地文件系统上实现同步。命令行语法格式为上述”Local”段的格式。</li><li>本地主机使用远程shell和远程主机通信。命令行语法格式为上述”Access via remote shell”段的格<br>式。</li><li>本地主机通过网络套接字连接远程主机上的rsync daemon。命令行语法格式为上述”Access via<br>rsync daemon”段的格式。<br>前两者的本质是通过本地或远程shell，而第3种方式则是让远程主机上运行rsyncd服务，使其监听在一<br>个端口上，等待客户端的连接。<br>常见选项：</li></ol><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">-v：显示rsync过程中详细信息。可以使用&quot;-vvvv&quot;获取更详细信息。</span><br><span class="line">-P：显示文件传输的进度信息。(实际上&quot;-P&quot;=&quot;--partial --progress&quot;，其中的&quot;--progress&quot;才是显</span><br><span class="line">示进度信息的)。</span><br><span class="line">-n --dry-run ：仅测试传输，而不实际传输。常和&quot;-vvvv&quot;配合使用来查看rsync是如何工作的。</span><br><span class="line">-a --archive ：归档模式，表示递归传输并保持文件属性。等同于&quot;-rtopgDl&quot;。</span><br><span class="line">-r --recursive：递归到目录中去。</span><br><span class="line">-t --times：保持mtime属性。强烈建议任何时候都加上&quot;-t&quot;，否则目标文件mtime会设置为系统时间，导</span><br><span class="line">致下次更新</span><br><span class="line">：检查出mtime不同从而导致增量传输无效。</span><br><span class="line">-o --owner：保持owner属性(属主)。</span><br><span class="line">-g --group：保持group属性(属组)。</span><br><span class="line">-p --perms：保持perms属性(权限，不包括特殊权限)</span><br><span class="line">-D ：是&quot;--device --specials&quot;选项的组合，即也拷贝设备文件和特殊文件。</span><br><span class="line">-l --links：如果文件是软链接文件，则拷贝软链接本身而非软链接所指向的对象</span><br><span class="line">-z ：传输时进行压缩提高效率</span><br><span class="line">-R --relative：使用相对路径。意味着将命令行中指定的全路径而非路径最尾部的文件名发送给服务端，</span><br><span class="line">包括它们的属性。用法见下文示例。</span><br><span class="line">--size-only ：默认算法是检查文件大小和mtime不同的文件，使用此选项将只检查文件大小。</span><br><span class="line">-u --update ：仅在源mtime比目标已存在文件的mtime新时才拷贝。注意，该选项是接收端判断的，不会</span><br><span class="line">影响删除行为。</span><br><span class="line">-d --dirs ：以不递归的方式拷贝目录本身。默认递归时，如果源为&quot;dir1/file1&quot;，则不会拷贝dir1</span><br><span class="line">目录，使用该选项将拷贝dir1但不拷贝file1。</span><br><span class="line">--max-size ：限制rsync传输的最大文件大小。可以使用单位后缀，还可以是一个小数值(例如：&quot;--</span><br><span class="line">max-size=1.5m&quot;)</span><br><span class="line">--min-size ：限制rsync传输的最小文件大小。这可以用于禁止传输小文件或那些垃圾文件。</span><br><span class="line">--exclude ：指定排除规则来排除不需要传输的文件。</span><br><span class="line">--delete ：以SRC为主，对DEST进行同步。多则删之，少则补之。注意&quot;--delete&quot;是在接收端执行</span><br><span class="line">的，所以它是在</span><br><span class="line">：exclude/include规则生效之后才执行的。</span><br><span class="line">-b --backup ：对目标上已存在的文件做一个备份，备份的文件名后默认使用&quot;~&quot;做后缀。</span><br><span class="line">--backup-dir：指定备份文件的保存路径。不指定时默认和待备份文件保存在同一目录下。</span><br><span class="line">-e ：指定所要使用的远程shell程序，默认为ssh。</span><br><span class="line">--port ：连接daemon时使用的端口号，默认为873端口。</span><br><span class="line">--password-file：daemon模式时的密码文件，可以从中读取密码实现非交互式。注意，这不是远程shell</span><br><span class="line">认证的密码，而是rsync模块认证的密码。</span><br><span class="line">-W --whole-file：rsync将不再使用增量传输，而是全量传输。在网络带宽高于磁盘带宽时，该选项比增</span><br><span class="line">量传输更高效。</span><br><span class="line">--existing ：要求只更新目标端已存在的文件，目标端还不存在的文件不传输。注意，使用相对路径时如</span><br><span class="line">果上层目录不存在也不会传输。</span><br><span class="line">--ignore-existing：要求只更新目标端不存在的文件。和&quot;--existing&quot;结合使用有特殊功能，见下文示</span><br><span class="line">例。</span><br><span class="line">--remove-source-files：要求删除源端已经成功传输的文件</span><br></pre></td></tr></table></figure><p> 范例：两种格式访问 rsync daemon 服务 </p><p><img src="/../image.assets/1670396738139.png" alt="1670396738139"></p><ul><li>环境</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data-server:192.168.179.171(数据服务器)</span><br><span class="line">backup-server:192.168.179.165(备份服务器)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#在备份服务器启动 rsync 进程</span><br><span class="line">[root@centos8-backup ~]#rsync --daemon</span><br><span class="line">Failed to parse config file: /etc/rsyncd.conf</span><br><span class="line">[root@centos8-backup ~]#touch /etc/rsyncd.conf</span><br><span class="line">[root@centos8-backup ~]#rsync --daemon</span><br><span class="line">[root@centos8-backup /]# cat /etc/rsyncd.conf </span><br><span class="line">[backup]</span><br><span class="line">path = /web/www/</span><br><span class="line">read only = no </span><br><span class="line">[root@centos8-backup /]# </span><br><span class="line">#指定目录给nobody权限，默认用户以nobody访问此目录</span><br><span class="line">[root@centos8-backup ~]#setfacl -m u:nobody:rwx /data/backup/</span><br><span class="line">#查看rsync服务器的模块名称</span><br><span class="line">[root@centos7-slave /]# rsync rsync://192.168.179.165</span><br><span class="line">backup    </span><br><span class="line">[root@centos7-slave /]# </span><br><span class="line">[root@centos7-slave /]# rsync 192.168.179.165::</span><br><span class="line">backup</span><br><span class="line"></span><br><span class="line">#访问rsync服务器的共享目录</span><br><span class="line">#推</span><br><span class="line">[root@centos7-slave /]# rsync /xy.log 192.168.179.165::backup</span><br><span class="line">[root@centos7-slave /]# rsync /etc/shells rsync://root@192.168.179.165/backup</span><br><span class="line"></span><br><span class="line">[root@centos7-slave /]#rsync 192.168.179.165::backup/* /opt</span><br><span class="line">[root@centos7-slave /]#rsync rsync://192.168.179.165/backup/* /mnt</span><br></pre></td></tr></table></figure><p>范例：以独立服务方式运行 rsync</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"># 修改配置文件</span><br><span class="line">[root@centos8-backup etc]# cat rsyncd.conf</span><br><span class="line">#uid = root #提定以哪个用户来访问共享目录，将之指定为生成的文件所有者，默认为nobody</span><br><span class="line">#gid = root #默认为nobody,Ubuntu中为nogroup</span><br><span class="line">#port = 874 可指定非标准端口,默认873/tcp</span><br><span class="line">#use chroot = no</span><br><span class="line">#max connections = 0</span><br><span class="line">#ignore errors</span><br><span class="line">#exclude = lost+found/</span><br><span class="line">#log file = /var/log/rsyncd.log</span><br><span class="line">#pid file = /var/run/rsyncd.pid</span><br><span class="line">#lock file = /var/run/rsyncd.lock</span><br><span class="line">#reverse lookup = no</span><br><span class="line">#hosts allow = 10.0.0.0/24</span><br><span class="line">#[backup] #每个模块名对应一个不同的path目录，如果同名后面模块生效</span><br><span class="line">#path = /data/backup/</span><br><span class="line">#comment = backup dir</span><br><span class="line">#read only = no #默认是yes,即只读</span><br><span class="line">#auth users = rsyncuser #默认anonymous可以访问rsync服务器</span><br><span class="line">#secrets file = /etc/rsync.pas</span><br><span class="line"># /etc/rsyncd: configuration file for rsync daemon mode</span><br><span class="line"></span><br><span class="line"># See rsyncd.conf man page for more options.</span><br><span class="line"></span><br><span class="line"># configuration example:</span><br><span class="line"></span><br><span class="line"># uid = nobody</span><br><span class="line"># gid = nobody</span><br><span class="line"># use chroot = yes</span><br><span class="line"># max connections = 4</span><br><span class="line"># pid file = /var/run/rsyncd.pid</span><br><span class="line"># exclude = lost+found/</span><br><span class="line"># transfer logging = yes</span><br><span class="line"># timeout = 900</span><br><span class="line"># ignore nonreadable = yes</span><br><span class="line"># dont compress   = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2</span><br><span class="line"></span><br><span class="line"># [ftp]</span><br><span class="line">#        path = /home/ftp</span><br><span class="line">#        comment = ftp export area</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">uid = root </span><br><span class="line">gid = root  </span><br><span class="line">max connections = 0</span><br><span class="line">ignore errors</span><br><span class="line">exclude = lost+found/</span><br><span class="line">log file = /var/log/rsyncd.log</span><br><span class="line">pid file = /var/run/rsyncd.pid</span><br><span class="line">lock file = /var/run/rsyncd.lock</span><br><span class="line">reverse lookup = no</span><br><span class="line"></span><br><span class="line">[backup] </span><br><span class="line">path = /web/backup/  </span><br><span class="line">comment = backup dir</span><br><span class="line">read only = no </span><br><span class="line">auth users = rsyncuser  </span><br><span class="line">secrets file = /etc/rsync.pas</span><br><span class="line"></span><br><span class="line">[root@centos8-backup etc]# </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#服务器端生成验证文件</span><br><span class="line">[root@centos8-backup ~]#echo &quot;rsyncuser:123456&quot; &gt; /etc/rsync.pas</span><br><span class="line">[root@centos8-backup ~]#chmod 600 /etc/rsync.pas</span><br><span class="line"></span><br><span class="line">#服务器端启动rsync服务</span><br><span class="line">[root@centos8-backup ~]#rsync --daemon #可加入/etc/rc.d/rc.local实现开</span><br><span class="line">机启动</span><br><span class="line"></span><br><span class="line">#客户端配置密码文件</span><br><span class="line">#也可将密码赋值给环境变量RSYNC_PASSWORD变量,但不安全</span><br><span class="line">#export RSYNC_PASSWORD=123456</span><br><span class="line">[root@centos7-slave ~]#echo &quot;123456&quot; &gt; /etc/rsync.pas</span><br><span class="line">[root@centos7-slave ~]#chmod 600 /etc/rsync.pas #此为必要项,权限必须修改</span><br><span class="line"></span><br><span class="line">#查看远程rsync服务器的模块信息</span><br><span class="line">[root@centos7-slave etc]# rsync rsync://192.168.179.165</span><br><span class="line">backup         backup dir</span><br><span class="line">[root@centos7-slave etc]# </span><br><span class="line"></span><br><span class="line">#交互式验证查看具体模块内的文件</span><br><span class="line">[root@centos7-slave etc]# rsync rsync://rsyncuser@192.168.179.165/backup</span><br><span class="line">Password: </span><br><span class="line"></span><br><span class="line">#非交互式查看共享目录</span><br><span class="line">[root@centos7-slave etc]# rsync --password-file=/etc/rsync.pas rsync://rsyncuser@192.168.179.165/backup</span><br><span class="line">drwxrwxrwx             34 2022/12/07 16:20:07 .</span><br><span class="line">-rw-r--r--              0 2022/12/07 16:20:07 xy.log</span><br><span class="line">-rw-r--r--              0 2022/12/07 16:09:50 zz.log</span><br><span class="line">[root@centos7-slave etc]# </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#客户端测试同步数据</span><br><span class="line">[root@data-centos8 ~]#rsync -avz --delete --password-file=/etc/rsync.pas /data/www/ rsyncuser@rsync服务器IP::backup</span><br><span class="line">[root@data-centos8 ~]#rsync -avz --delete --password-file=/etc/rsync.pas rsyncuser@rsync服务器IP::backup /data/www/</span><br></pre></td></tr></table></figure><h3 id="inotify-rsync-shell-脚本实现实时数据同步"><a href="#inotify-rsync-shell-脚本实现实时数据同步" class="headerlink" title="inotify+rsync+shell 脚本实现实时数据同步"></a>inotify+rsync+shell 脚本实现实时数据同步</h3><p><img src="/../image.assets/1670403695085.png" alt="1670403695085"></p><p>按 5.3 搭建好 rsyncd的备份服务器，在数据服务器上创建inotify_rsync.sh脚本<br>注意: 此脚本执行前先确保两主机初始数据处于同步状态,此脚本实现后续的数据同步</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7-slave ~]# vim inotify_rsync.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">SRC=&#x27;/data/www/&#x27; #注意最后的/</span><br><span class="line">DEST=&#x27;rsyncuser@rsync服务器IP::backup&#x27;</span><br><span class="line">rpm -q inotify-tools &amp;&gt; /dev/null ||yum -y install inotify-tools</span><br><span class="line">rpm -q rsync &amp;&gt; /dev/null || yum -y install rsync</span><br><span class="line">inotifywait -mrq --exclude=&quot;.*\.swp&quot; --timefmt &#x27;%Y-%m-%d %H:%M:%S&#x27; --format</span><br><span class="line">&#x27;%T %w %f&#x27; -e create,delete,moved_to,close_write,attrib $&#123;SRC&#125; |while read DATE</span><br><span class="line">TIME DIR FILE;do</span><br><span class="line">FILEPATH=$&#123;DIR&#125;$&#123;FILE&#125;</span><br><span class="line">rsync -az --delete --password-file=/etc/rsync.pas $SRC $DEST &amp;&amp; echo</span><br><span class="line">&quot;At $&#123;TIME&#125; on $&#123;DATE&#125;, file $FILEPATH was backuped up via rsync&quot; &gt;&gt;</span><br><span class="line">/var/log/changelist.log</span><br><span class="line">done</span><br><span class="line">#查看文件传输日志</span><br><span class="line">[root@centos7-slave www]# tail -f /var/log/changelist.log </span><br></pre></td></tr></table></figure><h2 id="sersync-实现实时数据同步"><a href="#sersync-实现实时数据同步" class="headerlink" title="sersync 实现实时数据同步"></a>sersync 实现实时数据同步</h2><h3 id="sersync-介绍"><a href="#sersync-介绍" class="headerlink" title="sersync 介绍"></a>sersync 介绍</h3><p>sersync类似于inotify，同样用于监控，但它克服了inotify的缺点.<br>inotify最大的不足是会产生重复事件，或者同一个目录下多个文件的操作会产生多个事件，例如，当监<br>控目录中有5个文件时，删除目录时会产生6个监控事件，从而导致重复调用rsync命令。另外比如：vim<br>文件时，inotify会监控到临时文件的事件，但这些事件相对于rsync来说是不应该被监控的</p><p><strong>sersync 优点：</strong></p><ul><li>sersync是使用c++编写，而且对linux系统文件系统产生的临时文件和重复的文件操作进行过滤，<br>所以在结合rsync同步的时候，节省了运行时耗和网络资源。因此更快。</li><li>sersync配置很简单，其中提供了静态编译好的二进制文件和xml配置文件，直接使用即可</li><li>sersync使用多线程进行同步，尤其在同步较大文件时，能够保证多个服务器实时保持同步状态</li><li>sersync有出错处理机制，通过失败队列对出错的文件重新同步，如果仍旧失败，则按设定时长对<br>同步失败的文件重新同步</li><li>sersync不仅可以实现实时同步，另外还自带crontab功能，只需在xml配置文件中开启，即也可以<br>按要求隔一段时间整体同步一次，而无需再额外配置crontab功能</li><li>sersync 可以二次开发</li></ul><p>sersync项目地址： <a href="https://code.google.com/archive/p/sersync/">https://code.google.com/archive/p/sersync/</a><br>sersync下载地址： <a href="https://code.google.com/archive/p/sersync/downloads">https://code.google.com/archive/p/sersync/downloads</a></p><h3 id="基于rsync-daemon-实现-sersync"><a href="#基于rsync-daemon-实现-sersync" class="headerlink" title="基于rsync daemon 实现 sersync"></a>基于rsync daemon 实现 sersync</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"># #在数据服务器上下载sersync，并拷贝至相应的目录，设置PATH变量</span><br><span class="line">wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/sersync/sersync2.5.4_64bit_binary_stable_final.tar.gz</span><br><span class="line"></span><br><span class="line">[root@centos7-slave ~]# tar -vxf sersync2.5.4_64bit_binary_stable_final.tar.gz </span><br><span class="line">[root@centos7-slave ~]# cp -r GNU-Linux-x86/ /usr/local/sersync</span><br><span class="line">[root@centos7-slave sersync]# echo &#x27;PATH=/usr/local/sersync:$PATH&#x27; &gt; /etc/profile.d/sersync.sh</span><br><span class="line">[root@centos7-slave sersync]# source /etc/profile.d/sersync.sh</span><br><span class="line">[root@centos7-slave sersync]# </span><br><span class="line"></span><br><span class="line">#确认安装rsync客户端工具</span><br><span class="line">rpm -q rsync &amp;&gt; /dev/null || dnf -y install rsync</span><br><span class="line"></span><br><span class="line">#备份sersync配置文件</span><br><span class="line">cp /usr/local/sersync/confxml.xml&#123;,.bak&#125;</span><br><span class="line"># 修改配置文件</span><br><span class="line">vim /usr/local/sersync/confxml.xml</span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line">&lt;head version=&quot;2.5&quot;&gt;</span><br><span class="line">&lt;host hostip=&quot;localhost&quot; port=&quot;8008&quot;&gt;&lt;/host&gt;</span><br><span class="line">&lt;debug start=&quot;false&quot;/&gt; # 是否开启调试模式</span><br><span class="line">&lt;fileSystem xfs=&quot;false&quot;/&gt;</span><br><span class="line">&lt;filter start=&quot;false&quot;&gt; #不开启文件过滤功能，当为true时,以下类型的文件将不同</span><br><span class="line">步</span><br><span class="line">&lt;exclude expression=&quot;(.*)\.svn&quot;&gt;&lt;/exclude&gt;</span><br><span class="line">&lt;exclude expression=&quot;(.*)\.gz&quot;&gt;&lt;/exclude&gt;</span><br><span class="line">&lt;exclude expression=&quot;^info/*&quot;&gt;&lt;/exclude&gt;</span><br><span class="line">&lt;exclude expression=&quot;^static/*&quot;&gt;&lt;/exclude&gt;</span><br><span class="line">&lt;/filter&gt;</span><br><span class="line">&lt;inotify&gt; # 监控事件，默认监控</span><br><span class="line">delete/close_write/moved_from/moved_to/create folder</span><br><span class="line">&lt;delete start=&quot;true&quot;/&gt;</span><br><span class="line">&lt;createFolder start=&quot;true&quot;/&gt;</span><br><span class="line">&lt;createFile start=&quot;false&quot;/&gt;</span><br><span class="line">&lt;closeWrite start=&quot;true&quot;/&gt;</span><br><span class="line">&lt;moveFrom start=&quot;true&quot;/&gt;</span><br><span class="line">&lt;moveTo start=&quot;true&quot;/&gt;</span><br><span class="line">&lt;attrib start=&quot;true&quot;/&gt; #修改此行为true，文件属性变化后也会同步</span><br><span class="line">&lt;modify start=&quot;false&quot;/&gt;</span><br><span class="line">&lt;/inotify&gt;</span><br><span class="line">&lt;sersync&gt; # rsync命令的配置段</span><br><span class="line">&lt;localpath watch=&quot;/data/www&quot;&gt; #修改此行,需要同步的源目录或文件，建议同步目</span><br><span class="line">录</span><br><span class="line">&lt;remote ip=&quot;备份服务器IP&quot; name=&quot;backup&quot;/&gt; #修改此行,指定备份服务器地址和rsync</span><br><span class="line">daemon的模块名，如果下面开启了ssh start，此时name为远程shell方式运行时的目标目录</span><br><span class="line">&lt;!--&lt;remote ip=&quot;192.168.8.39&quot; name=&quot;tongbu&quot;/&gt;--&gt;</span><br><span class="line">&lt;!--&lt;remote ip=&quot;192.168.8.40&quot; name=&quot;tongbu&quot;/&gt;--&gt;</span><br><span class="line">&lt;/localpath&gt;</span><br><span class="line">&lt;rsync&gt;</span><br><span class="line">&lt;commonParams params=&quot;-artuz&quot;/&gt; # 指定rsync选项</span><br><span class="line">&lt;auth start=&quot;true&quot; users=&quot;rsyncuser&quot; passwordfile=&quot;/etc/rsync.pas&quot;/&gt; #修</span><br><span class="line">改此行为true,指定备份服务器的rsync配置的用户和密码文件</span><br><span class="line">&lt;userDefinedPort start=&quot;false&quot; port=&quot;874&quot;/&gt;&lt;!-- port=874 --&gt;#指定rsync的非</span><br><span class="line">标准端口号</span><br><span class="line">&lt;timeout start=&quot;false&quot; time=&quot;100&quot;/&gt;&lt;!-- timeout=100 --&gt;</span><br><span class="line">&lt;ssh start=&quot;false&quot;/&gt; #默认使用rsync daemon运行rsync命令,true为使用远程shell模</span><br><span class="line">式</span><br><span class="line">&lt;/rsync&gt;</span><br><span class="line">&lt;failLog path=&quot;/tmp/rsync_fail_log.sh&quot; timeToExecute=&quot;60&quot;/&gt;&lt;!--default every</span><br><span class="line">60mins execute once--&gt; #错误重传及日志文件路径</span><br><span class="line">&lt;crontab start=&quot;false&quot; schedule=&quot;600&quot;&gt;&lt;!--600mins--&gt; #不开启crontab功能</span><br><span class="line">&lt;crontabfilter start=&quot;false&quot;&gt; #不开启crontab定时传输的筛选功能</span><br><span class="line">&lt;exclude expression=&quot;*.php&quot;&gt;&lt;/exclude&gt;</span><br><span class="line">&lt;exclude expression=&quot;info/*&quot;&gt;&lt;/exclude&gt;</span><br><span class="line">&lt;/crontabfilter&gt;</span><br><span class="line">&lt;/crontab&gt;</span><br><span class="line">&lt;plugin start=&quot;false&quot; name=&quot;command&quot;/&gt;</span><br><span class="line">&lt;/sersync&gt;</span><br><span class="line">#####################################以下行不需要修改</span><br><span class="line">####################################</span><br><span class="line">&lt;plugin name=&quot;command&quot;&gt;</span><br><span class="line">&lt;param prefix=&quot;/bin/sh&quot; suffix=&quot;&quot; ignoreError=&quot;true&quot;/&gt; &lt;!--prefix</span><br><span class="line">/opt/tongbu/mmm.sh suffix--&gt;</span><br><span class="line">&lt;filter start=&quot;false&quot;&gt;</span><br><span class="line">&lt;include expression=&quot;(.*)\.php&quot;/&gt;</span><br><span class="line">&lt;include expression=&quot;(.*)\.sh&quot;/&gt;</span><br><span class="line">&lt;/filter&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line">&lt;plugin name=&quot;socket&quot;&gt;</span><br><span class="line">&lt;localpath watch=&quot;/opt/tongbu&quot;&gt;</span><br><span class="line">&lt;deshost ip=&quot;192.168.138.20&quot; port=&quot;8009&quot;/&gt;</span><br><span class="line">&lt;/localpath&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line">&lt;plugin name=&quot;refreshCDN&quot;&gt;</span><br><span class="line">&lt;localpath watch=&quot;/data0/htdocs/cms.xoyo.com/site/&quot;&gt;</span><br><span class="line">&lt;cdninfo domainname=&quot;ccms.chinacache.com&quot; port=&quot;80&quot; username=&quot;xxxx&quot;</span><br><span class="line">passwd=&quot;xxxx&quot;/&gt;</span><br><span class="line">&lt;sendurl base=&quot;http://pic.xoyo.com/cms&quot;/&gt;</span><br><span class="line"> &lt;regexurl regex=&quot;false&quot; match=&quot;cms.xoyo.com/site([/a-zA-Z0-</span><br><span class="line">9]*).xoyo.com/images&quot;/&gt;</span><br><span class="line">&lt;/localpath&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建连接rsynd服务器的用户密码文件,并必须修改权限</span><br><span class="line">echo 123456 &gt; /etc/rsync.pas</span><br><span class="line">chmod 600 /etc/rsync.pas</span><br><span class="line">#查看帮助</span><br><span class="line">sersync2 -h</span><br><span class="line">set the system param</span><br><span class="line">execute：echo 50000000 &gt; /proc/sys/fs/inotify/max_user_watches</span><br><span class="line">execute：echo 327679 &gt; /proc/sys/fs/inotify/max_queued_events</span><br><span class="line">parse the command param</span><br><span class="line"></span><br><span class="line">_______________________________________________________</span><br><span class="line">参数-d:启用守护进程模式</span><br><span class="line">参数-r:在监控前，将监控目录与远程主机用rsync命令推送一遍</span><br><span class="line">c参数-n: 指定开启守护线程的数量，默认为10个</span><br><span class="line">参数-o:指定配置文件，默认使用当前工作目录下的confxml.xml文件</span><br><span class="line">参数-m:单独启用其他模块，使用 -m refreshCDN 开启刷新CDN模块</span><br><span class="line">参数-m:单独启用其他模块，使用 -m socket 开启socket模块</span><br><span class="line">参数-m:单独启用其他模块，使用 -m http 开启http模块</span><br><span class="line">不加-m参数，则默认执行同步程序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#以后台方式执行同步</span><br><span class="line">sersync2 -dro /usr/local/sersync/confxml.xml</span><br><span class="line"></span><br><span class="line">#如果同步失败,可以手动执行下面命令,观察过程</span><br><span class="line">cd /data/www &amp;&amp; rsync -artuz -R --delete ./ rsyncuser@backup-server::backup --password-file=/etc/rsync.pas &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">#sersync支持多实例，也即监控多个目录时，只需分别配置不同配置文件，然后使用sersync2指定对应配置文件运行</span><br><span class="line">sersync2 -rd -o /etc/sersync.d/nginx.xml</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日志服务管理</title>
      <link href="/2022/12/03/%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/"/>
      <url>/2022/12/03/%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="系统日志管理"><a href="#系统日志管理" class="headerlink" title="系统日志管理"></a>系统日志管理</h1><h2 id="系统日志介绍"><a href="#系统日志介绍" class="headerlink" title="系统日志介绍"></a>系统日志介绍</h2><p>在现实生活中，记录日志非常重要﹐比如:银行转账时会有转账记录﹔飞机飞行过程中的黑盒子（飞行数据记录器）记录着飞机的飞行过程. 那么将系统和应用发生的事件记录至日志中，也很意义,常可以助于排错和分析使用</p><p>日志记录的内容包括：</p><ul><li>历史事件：时间，地点，人物，事件</li><li>日志级别：事件的关键性程度，Loglevel</li></ul><h3 id="sysklogd-系统日志服务"><a href="#sysklogd-系统日志服务" class="headerlink" title="sysklogd 系统日志服务"></a>sysklogd 系统日志服务</h3><p>CentOS 5 之前版本采用的日志管理系统服务<br>klogd: linux kernel 记录内核日志<br>syslogd: system application 记录应用日志<br>事件记录格式：<br>日期时间 主机 进程[pid]: 事件内容<br>C&#x2F;S架构：通过TCP或UDP协议的服务完成日志记录传送，将分布在不同主机的日志实现集中管理</p><h3 id="rsyslog-系统日志服务"><a href="#rsyslog-系统日志服务" class="headerlink" title="rsyslog 系统日志服务"></a>rsyslog 系统日志服务</h3><p>rsyslog是CentOS 6 以后版本的系统管理服务.它提供了高性能，出色的安全性和模块化设计。 尽管rsyslog最初是常规的syslogd，但已发展成为一种瑞士军刀式的记录工具，能够接受来自各种来源的输入，并将其转换，然后输出到不同的目的地。当应用有限的处理时，RSYSLOG每秒可以将超过一百万的消息传递到本地目的地。 即使在远程的目的地和更精细的处理中，性能通常也被认为是“惊人的”。</p><p>官网网站</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.rsyslog.com/</span><br></pre></td></tr></table></figure><p>rsyslog 特性</p><ul><li>多线程</li><li>UDP, TCP, SSL, TLS, RELP</li><li>MySQL, PGSQL, Oracle实现日志存储</li><li>强大的过滤器，可实现过滤记录日志信息中任意部分</li><li>自定义输出格式</li><li>适用于企业级中继链</li></ul><h2 id="rsyslog-管理"><a href="#rsyslog-管理" class="headerlink" title="rsyslog 管理"></a>rsyslog 管理</h2><h3 id="系统日志术语"><a href="#系统日志术语" class="headerlink" title="系统日志术语"></a>系统日志术语</h3><p>facility：设施，从功能或程序上对日志进行归类</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#内置分类</span><br><span class="line">auth, authpriv, cron, daemon,ftp,kern, lpr, mail, news, security(auth),</span><br><span class="line">user, uucp, syslog</span><br><span class="line">#自定义的分类</span><br><span class="line">local0-local7</span><br></pre></td></tr></table></figure><p>Priority 优先级别，从低到高排序</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">debug,info, notice, warn(warning), err(error), crit(critical), alert,</span><br><span class="line">emerg(panic)</span><br></pre></td></tr></table></figure><p>参看帮助： man 3 syslog，man logger</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#yum -y install man-pages</span><br><span class="line">[root@centos8 ~]#man 3 syslog</span><br></pre></td></tr></table></figure><h3 id="rsyslog-相关文件"><a href="#rsyslog-相关文件" class="headerlink" title="rsyslog 相关文件"></a>rsyslog 相关文件</h3><ul><li>程序包：rsyslog</li><li>主程序：&#x2F;usr&#x2F;sbin&#x2F;rsyslogd</li><li>CentOS 6：&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;rsyslog {start|stop|restart|status}</li><li>CentOS 7,8：&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;rsyslog.service</li><li>配置文件：&#x2F;etc&#x2F;rsyslog.conf，&#x2F;etc&#x2F;rsyslog.d&#x2F;<em>.conf</em></li><li><em>库文件： &#x2F;lib64&#x2F;rsyslog&#x2F;</em>.so</li></ul><h3 id="rsyslog配置文件"><a href="#rsyslog配置文件" class="headerlink" title="rsyslog配置文件"></a>rsyslog配置文件</h3><p><strong>&#x2F;etc&#x2F;rsyslog.conf 配置文件格式：由三部分组成</strong></p><ul><li>MODULES：相关模块配置</li><li>GLOBAL DIRECTIVES：全局配置</li><li>RULES：日志记录相关的规则配置</li></ul><p>RULES配置格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">facility.priority; facility.priority… target</span><br></pre></td></tr></table></figure><p>facility格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* #所有的facility</span><br><span class="line">facility1,facility2,facility3,... #指定的facility列表</span><br></pre></td></tr></table></figure><p>priority格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*: 所有级别</span><br><span class="line">none：没有级别，即不记录</span><br><span class="line">PRIORITY：指定级别（含）以上的所有级别</span><br><span class="line">=PRIORITY：仅记录指定级别的日志信息</span><br></pre></td></tr></table></figure><p>target格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">文件路径：通常在/var/log/，文件路径前的-表示异步写入</span><br><span class="line">用户：将日志事件通知给指定的用户，* 表示登录的所有用户</span><br><span class="line">日志服务器：@host，把日志送往至指定的远程UDP日志服务器 @@host 将日志发送到远程TCP日志服务器</span><br><span class="line">管道： | COMMAND，转发给其它命令处理</span><br></pre></td></tr></table></figure><p><strong>通常的日志文件的格式：</strong></p><p>日志文件有很多，如： &#x2F;var&#x2F;log&#x2F;messages,cron,secure等，基本格式都是类似的。格式如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">事件产生的日期时间 主机 进程(pid)：事件内容</span><br></pre></td></tr></table></figure><p><strong>范例：日志文件格式</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# tail -f /var/log/messages</span><br><span class="line">Dec  3 16:58:40 centos7 dbus[653]: [system] Activating via systemd: service name=&#x27;org.freedesktop.nm_dispatcher&#x27; unit=&#x27;dbus-org.freedesktop.nm-dispatcher.service&#x27;</span><br><span class="line">Dec  3 16:58:40 centos7 systemd: Starting Network Manager Script Dispatcher Service...</span><br><span class="line">Dec  3 16:58:40 centos7 dhclient[51210]: bound to 192.168.179.170 -- renewal in 745 seconds.</span><br><span class="line">Dec  3 16:58:40 centos7 dbus[653]: [system] Successfully activated service &#x27;org.freedesktop.nm_dispatcher&#x27;</span><br><span class="line">Dec  3 16:58:40 centos7 systemd: Started Network Manager Script Dispatcher Service.</span><br><span class="line">Dec  3 16:58:40 centos7 nm-dispatcher: req:1 &#x27;dhcp4-change&#x27; [ens33]: new request (2 scripts)</span><br><span class="line">Dec  3 16:58:40 centos7 nm-dispatcher: req:1 &#x27;dhcp4-change&#x27; [ens33]: start running ordered scripts...</span><br><span class="line">Dec  3 17:01:01 centos7 systemd: Started Session 95 of user root.</span><br><span class="line">Dec  3 17:11:05 centos7 dhclient[51210]: DHCPREQUEST on ens33 to 192.168.179.254 port 67 (xid=0x1f435c38)</span><br><span class="line">Dec  3 17:11:11 centos7 dhclient[51210]: DHCPREQUEST on ens33 to 192.168.179.254 port 67 (xid=0x1f435c38)</span><br><span class="line">Dec  3 17:11:26 centos7 dhclient[51210]: DHCPREQUEST on ens33 to 192.168.179.254 port 67 (xid=0x1f435c38)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# tail -f /var/log/secure</span><br><span class="line">Nov 29 22:58:18 centos7 sshd[49904]: pam_unix(sshd:session): session closed for user root</span><br><span class="line">Nov 30 19:58:03 centos7 sshd[50030]: Accepted password for root from 192.168.179.1 port 51814 ssh2</span><br><span class="line">Nov 30 19:58:03 centos7 sshd[50030]: pam_unix(sshd:session): session opened for user root by (uid=0)</span><br><span class="line">Nov 30 21:15:17 centos7 sshd[48764]: pam_unix(sshd:session): session closed for user root</span><br><span class="line">Dec  2 21:22:51 centos7 sshd[51123]: Accepted password for root from 192.168.179.1 port 53924 ssh2</span><br><span class="line">Dec  2 21:22:51 centos7 sshd[51123]: pam_unix(sshd:session): session opened for user root by (uid=0)</span><br><span class="line">Dec  3 09:08:03 centos7 sshd[50030]: pam_unix(sshd:session): session closed for user root</span><br><span class="line">Dec  3 09:53:40 centos7 sshd[51295]: Accepted password for root from 192.168.179.1 port 56421 ssh2</span><br><span class="line">Dec  3 09:53:40 centos7 sshd[51295]: pam_unix(sshd:session): session opened for user root by (uid=0)</span><br><span class="line">Dec  3 11:14:12 centos7 sshd[51123]: pam_unix(sshd:session): session closed for user root</span><br></pre></td></tr></table></figure><h3 id="范例：将ssh服务的日志记录至自定义的local的日志设备"><a href="#范例：将ssh服务的日志记录至自定义的local的日志设备" class="headerlink" title="范例：将ssh服务的日志记录至自定义的local的日志设备"></a>范例：将ssh服务的日志记录至自定义的local的日志设备</h3><ul><li>修改sshd服务的配置</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# vim /etc/ssh/sshd_config </span><br><span class="line"># 配置文件修改内容如下所示</span><br><span class="line">SyslogFacility local2</span><br><span class="line"># 重新加载sshd服务配置文件</span><br><span class="line">[root@centos7 ~]# service sshd reload</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1670069148343.png" alt="1670069148343"></p><ul><li>修改rsyslog配置</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# vim /etc/rsyslog.conf </span><br><span class="line"># 加入如下内容</span><br><span class="line">local2.*                                                /var/log/sshd.log</span><br><span class="line"># 重启服务</span><br><span class="line">[root@centos7 ~]# systemctl restart rsyslog</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1670068722502.png" alt="1670068722502"></p><ul><li>测试验证</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ssh 登入该服务器</span><br><span class="line"># 查看日志文件内容</span><br><span class="line">tail -f /var/log/sshd.log</span><br></pre></td></tr></table></figure><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# tail -f /<span class="keyword">var</span>/log/sshd<span class="variable">.log</span> </span><br><span class="line">Dec  <span class="number">3</span> <span class="number">20</span>:<span class="number">06</span>:<span class="number">35</span> centos7 sshd[<span class="number">49356</span>]: Server listening on <span class="number">0</span><span class="variable">.0</span><span class="variable">.0</span><span class="variable">.0</span> port <span class="number">22</span>.</span><br><span class="line">Dec  <span class="number">3</span> <span class="number">20</span>:<span class="number">06</span>:<span class="number">35</span> centos7 sshd[<span class="number">49356</span>]: Server listening on :: port <span class="number">22</span>.</span><br><span class="line">Dec  <span class="number">3</span> <span class="number">20</span>:<span class="number">07</span>:<span class="number">06</span> centos7 sshd[<span class="number">52189</span>]: Accepted publickey <span class="keyword">for</span> root from <span class="number">192</span><span class="variable">.168</span><span class="variable">.179</span><span class="variable">.171</span> port <span class="number">33434</span> ssh2: RSA SHA256:HohSbRRS/oP0nLbEZTqgSJ6WQ5Mjp3f9DxM+spRO+SI</span><br></pre></td></tr></table></figure><p>日志中可以看到192.168.179.171的IP地址通过root用户ssh登入该设备</p><h3 id="启用网络日志服务"><a href="#启用网络日志服务" class="headerlink" title="启用网络日志服务"></a>启用网络日志服务</h3><p>启用网络日志服务功能，可以将多个远程主机的日志，发送到集中的日志服务器，方便统一管理。</p><p><strong>范例：CentOS 7 和6 启用网络日志功能</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">日志服务器：centos7.9，主机名称：centos7,ip:192.168.179.157</span><br><span class="line">客户端1：centos7.9，主机名称：centos7-master,ip:192.168.179.170</span><br><span class="line">客户端2：centos7.9，主机名称：centos7-slave,ip:192.168.179.171  </span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1670070091109.png" alt="1670070091109"></p><ul><li>修改日志服务器配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">192.168.179.157上操作</span></span><br><span class="line">[root@centos7 ~]# vim /etc/rsyslog.conf</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1670070275185.png" alt="1670070275185"></p><ul><li>重启日志服务器rsyslog服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# systemctl restart rsyslog</span><br></pre></td></tr></table></figure><ul><li>修改客户端配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改192.168.179.170配置文件</span></span><br><span class="line">[root@centos7-master ~]# vim /etc/rsyslog.conf </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改内容如下</span></span><br><span class="line">*.info;mail.none;authpriv.none;cron.none                /var/log/messages</span><br><span class="line">*.info;mail.none;authpriv.none;cron.none                @@192.168.179.157:514 #TCP</span><br><span class="line">*.info;mail.none;authpriv.none;cron.none                @192.168.179.157:514 #udp</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启服务</span></span><br><span class="line">systemctl restart rsyslog</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">192.168.179.171客户端使用上面方法操作修改配置文件</span></span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1670070969222.png" alt="1670070969222"></p><ul><li>测试验证</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在日志服务器上查看日志</span></span><br><span class="line">[root@centos7 ~]# tail -f /var/log/messages</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1670071324130.png" alt="1670071324130"></p><p>可以看到主机名称centos7-master、centos7-slave上的日志说明实验成功</p><p><strong>范例：CentOS 8 启用网络日志功能</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">## MODULES ####</span><br><span class="line">...省略...</span><br><span class="line"># Provides UDP syslog reception</span><br><span class="line"># for parameters see http://www.rsyslog.com/doc/imudp.html</span><br><span class="line">module(load=&quot;imudp&quot;) # needs to be done just once</span><br><span class="line">input(type=&quot;imudp&quot; port=&quot;514&quot;)</span><br><span class="line"># Provides TCP syslog reception</span><br><span class="line"># for parameters see http://www.rsyslog.com/doc/imtcp.html</span><br><span class="line">module(load=&quot;imtcp&quot;) # needs to be done just once</span><br><span class="line">input(type=&quot;imtcp&quot; port=&quot;514&quot;)</span><br></pre></td></tr></table></figure><h3 id="常见日志文件"><a href="#常见日志文件" class="headerlink" title="常见日志文件"></a>常见日志文件</h3><ul><li>&#x2F;var&#x2F;log&#x2F;secure：系统安全日志，文本格式，应周期性分析</li><li>&#x2F;var&#x2F;log&#x2F;btmp：当前系统上，用户的失败尝试登录相关的日志信息，二进制格式，lastb命令进行查看</li><li>&#x2F;var&#x2F;log&#x2F;wtmp：当前系统上，用户正常登录系统的相关日志信息，二进制格式，last命令可以查看</li><li>&#x2F;var&#x2F;log&#x2F;lastlog:每一个用户最近一次的登录信息，二进制格式，lastlog命令可以查看</li><li>&#x2F;var&#x2F;log&#x2F;dmesg：CentOS7 之前版本系统引导过程中的日志信息，文本格式，开机后的硬件变化</li><li>将不再记录，也可以通过专用命令dmesg查看，可持续记录硬件变化的情况</li><li>&#x2F;var&#x2F;log&#x2F;boot.log 系统服务启动的相关信息，文本格式</li><li>&#x2F;var&#x2F;log&#x2F;messages ：系统中大部分的信息</li><li>&#x2F;var&#x2F;log&#x2F;anaconda : anaconda的日志</li></ul><h3 id="实战案例：利用-MySQL-存储日志信息"><a href="#实战案例：利用-MySQL-存储日志信息" class="headerlink" title="实战案例：利用 MySQL 存储日志信息"></a>实战案例：利用 MySQL 存储日志信息</h3><p><img src="/../image.assets/1670074533744.png" alt="1670074533744"></p><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p>利用rsyslog日志服务，将收集的日志记录于MySQL中</p><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">两台主机</span><br><span class="line">一台：rsyslog日志服务器，IP：192.168.179.157</span><br><span class="line">一台：mariadb数据库服务器，IP：192.168.179.178</span><br></pre></td></tr></table></figure><h4 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"># 在rsyslog服务器上安装连接mysql模块相关的程序包</span><br><span class="line">[root@centos7 ~]# yum install rsyslog-mysql</span><br><span class="line">[root@centos7 ~]# rpm -ql rsyslog-mysql</span><br><span class="line">/usr/lib64/rsyslog/ommysql.so</span><br><span class="line">/usr/share/doc/rsyslog-8.24.0/mysql-createDB.sql</span><br><span class="line">[root@centos7 ~]# </span><br><span class="line"></span><br><span class="line">#将sql脚本复制到数据库服务器上</span><br><span class="line">[root@centos7 ~]# scp /usr/share/doc/rsyslog-8.24.0/mysql-createDB.sql 192.168.179.148:/root/</span><br><span class="line"></span><br><span class="line"># 在192.168.179.148上安装mysql</span><br><span class="line">yum install mysql-server -y</span><br><span class="line"></span><br><span class="line"># #在mysql数据库服务器上创建相关数据库和表，并授权rsyslog能连接至当前服务器</span><br><span class="line">root@ubuntu1804:~# mysql</span><br><span class="line">mysql&gt; source /root/mysql-createDB.sql;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">mysql&gt; create user &#x27;rsyslog&#x27;@&#x27;192.168.179.%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on Syslog.* to &#x27;rsyslog&#x27;@&#x27;192.168.179.%&#x27;;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br><span class="line"></span><br><span class="line"># 配置日志服务器将日志发送至指定数据库</span><br><span class="line">vim /etc/rsyslog.conf</span><br><span class="line">####MODULES####</span><br><span class="line">#在 MODULES 语言下面，如果是 CentOS 8 加下面行</span><br><span class="line">module(load=&quot;ommysql&quot;)</span><br><span class="line">#在 MODULES 语言下面，如果是 CentOS 7，6 加下面行</span><br><span class="line">$ModLoad ommysql</span><br><span class="line"></span><br><span class="line">#在RULES语句块加下面行的格式</span><br><span class="line">#facility.priority :ommysql:DBHOST,DBNAME,DBUSER, PASSWORD</span><br><span class="line">*.info :ommysql:192.168.179.148,Syslog,rsyslog,123456</span><br><span class="line"></span><br><span class="line"># 重启服务</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1670075626142.png" alt="1670075626142"></p><p><img src="/../image.assets/1670075765663.png" alt="1670075765663"></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 在日志服务器上生成日志</span><br><span class="line">logger &#x27;this is test log&#x27;</span><br><span class="line"></span><br><span class="line">#在数据库上查询到上面的测试日志</span><br><span class="line">mysql&gt; select count(*) from SystemEvents;</span><br><span class="line">+----------+</span><br><span class="line">| count(*) |</span><br><span class="line">+----------+</span><br><span class="line">|       66 |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure><h2 id="logrotate-日志转储"><a href="#logrotate-日志转储" class="headerlink" title="logrotate 日志转储"></a>logrotate 日志转储</h2><h3 id="logrotate-介绍"><a href="#logrotate-介绍" class="headerlink" title="logrotate 介绍"></a>logrotate 介绍</h3><p>logrotate 程序是一个日志文件管理工具。用来把旧的日志文件删除，并创建新的日志文件，称为日志转<br>储或滚动。可以根据日志文件的大小，也可以根据其天数来转储，这个过程一般通过 cron 程序来执行</p><h3 id="logrotate-配置"><a href="#logrotate-配置" class="headerlink" title="logrotate 配置"></a>logrotate 配置</h3><p>软件包：logrotate<br>相关文件</p><ul><li><p>计划任务：&#x2F;etc&#x2F;cron.daily&#x2F;logrotate</p></li><li><p>程序文件：&#x2F;usr&#x2F;sbin&#x2F;logrotate</p></li><li><p>配置文件： &#x2F;etc&#x2F;logrotate.conf</p></li><li><p>日志文件：&#x2F;var&#x2F;lib&#x2F;logrotate&#x2F;logrotate.status</p></li></ul><p>配置文件主要参数如下：</p><p><img src="/../image.assets/1670121049880.png" alt="1670121049880"></p><p><img src="/../image.assets/1670121071202.png" alt="1670121071202"></p><p><img src="/../image.assets/1670121091758.png" alt="1670121091758"></p><p><img src="/../image.assets/1670121108631.png" alt="1670121108631"></p><p><strong>范例：对指定日志手动执行日志转储</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"># 生成测试日志</span><br><span class="line">[root@centos7-master ~]# dd if=/dev/zero of=/var/log/test1.log bs=2M count=1</span><br><span class="line">1+0 records in</span><br><span class="line">1+0 records out</span><br><span class="line">2097152 bytes (2.1 MB) copied, 0.0017554 s, 1.2 GB/s</span><br><span class="line">[root@centos7-master ~]# </span><br><span class="line"></span><br><span class="line">[root@centos7-master ~]# dd if=/dev/zero of=/var/log/test2.log bs=2M count=1</span><br><span class="line">1+0 records in</span><br><span class="line">1+0 records out</span><br><span class="line">2097152 bytes (2.1 MB) copied, 0.00240458 s, 872 MB/s</span><br><span class="line">[root@centos7-master ~]# </span><br><span class="line"></span><br><span class="line">#针对不同的日志创建转储配置文件</span><br><span class="line">[root@centos7-master ~]# vim /etc/logrotate.d/test1</span><br><span class="line"></span><br><span class="line">/var/log/test1.log &#123;</span><br><span class="line">        daily</span><br><span class="line">        rotate 5</span><br><span class="line">        compress</span><br><span class="line">        delaycompress</span><br><span class="line">        missingok</span><br><span class="line">        size 1M</span><br><span class="line">        notifempty</span><br><span class="line">        create 640 bin nobody</span><br><span class="line">        postrotate</span><br><span class="line">        echo `date +%F_%T` &gt;&gt; /data/test1.log</span><br><span class="line">        endscript</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@centos7-master ~]# vim /etc/logrotate.d/test2</span><br><span class="line">/var/log/test2.log &#123;</span><br><span class="line">        daily</span><br><span class="line">        rotate 5</span><br><span class="line">        compress</span><br><span class="line">        delaycompress</span><br><span class="line">        missingok</span><br><span class="line">        size 1M</span><br><span class="line">        notifempty</span><br><span class="line">        create 644 root root</span><br><span class="line">        postrotate</span><br><span class="line">        echo `date +%F_%T` &gt;&gt; /data/test2.log</span><br><span class="line">        endscript</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#针对一个测试日志，手动执行日志转储</span><br><span class="line">[root@centos7-master ~]# logrotate /etc/logrotate.d/test1</span><br><span class="line"></span><br><span class="line">[root@centos7-master ~]# ll /var/log/test*</span><br><span class="line">-rw-r----- 1 bin  nobody       0 Dec  4 11:12 /var/log/test1.log</span><br><span class="line">-rw-r--r-- 1 root root   2097152 Dec  4 11:07 /var/log/test1.log.1</span><br><span class="line">-rw-r--r-- 1 root root   2097152 Dec  4 11:07 /var/log/test2.log</span><br><span class="line">[root@centos7-master ~]# </span><br><span class="line">[root@centos7-master ~]# ll /data/</span><br><span class="line">total 1800</span><br><span class="line">-rw-r--r--  1 root  root  915255 Nov 27 17:22 1127.sql</span><br><span class="line">-rw-r--r--  1 root  root  914921 Nov 25 10:23 all.sql</span><br><span class="line">drwxr-xr-x  3 root  root      18 Nov 29 22:45 mastermha</span><br><span class="line">drwxr-x--- 11 mysql mysql   4096 Dec  3 20:30 mysql</span><br><span class="line">-rw-r--r--  1 root  root      20 Dec  4 11:12 test1.log</span><br><span class="line">[root@centos7-master ~]# </span><br><span class="line">#对所有日志进行手动转储</span><br><span class="line">[root@centos7-master ~]# logrotate /etc/logrotate.conf</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL备份和恢复</title>
      <link href="/2022/11/21/MySQL%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/"/>
      <url>/2022/11/21/MySQL%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="实战案例：特定数据库的备份脚本"><a href="#实战案例：特定数据库的备份脚本" class="headerlink" title="实战案例：特定数据库的备份脚本"></a>实战案例：特定数据库的备份脚本</h1><ul><li>系统：centos8.5</li><li>MySQL版本：8.0</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">TIME=`date +%F_%H-%M-%S`</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份目录</span></span><br><span class="line">DIR=/mysql_backup</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份数据库</span></span><br><span class="line">DB=hellodb</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">数据库密码</span></span><br><span class="line">PASSWD=123456</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">判断备份数据库目录是否存在</span></span><br><span class="line">[ -d $DIR ] || mkdir $DIR</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份</span></span><br><span class="line">mysqldump -uroot -p&quot;$PASSWD&quot; -F -E -R --triggers --single-transaction --master-data=2 --default-character-set=utf8mb4 -q -B $DB | gzip &gt; $&#123;DIR&#125;/$&#123;DB&#125;_$&#123;TIME&#125;.sql.gz</span><br></pre></td></tr></table></figure><h1 id="实战案例：分库备份的实战脚本"><a href="#实战案例：分库备份的实战脚本" class="headerlink" title="实战案例：分库备份的实战脚本"></a>实战案例：分库备份的实战脚本</h1><ul><li>系统：centos8.5</li><li>MySQL版本：8.0</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">TIME=`date +%F_%H-%M-%S`</span><br><span class="line">DIR=/backup</span><br><span class="line">PASS=123456</span><br><span class="line">[ -d &quot;$DIR&quot; ] || mkdir $DIR</span><br><span class="line">for DB in `mysql -uroot -p&quot;$PASS&quot; -e &#x27;show databases&#x27; | grep -Ev &quot;^Database|.*schema$&quot;`;do</span><br><span class="line">    mysqldump -uroot -p&quot;$PASS&quot; -F --single-transaction --master-data=2 --default-character-set=utf8mb4 -q -B $DB | gzip &gt; $&#123;DIR&#125;/$&#123;DB&#125;_$&#123;TIME&#125;.sql.gz</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件测试基础面试题</title>
      <link href="/2022/11/03/SoftwareTestingQuestions/"/>
      <url>/2022/11/03/SoftwareTestingQuestions/</url>
      
        <content type="html"><![CDATA[<h1 id="APP测试"><a href="#APP测试" class="headerlink" title="APP测试"></a>APP测试</h1><h2 id="APP专项测试有哪些？"><a href="#APP专项测试有哪些？" class="headerlink" title="APP专项测试有哪些？"></a>APP专项测试有哪些？</h2><p>专项的测试方法，包括：兼容性测试、流量测试、电量测试、弱网络测试、稳定性测试、 安全测试和环境相关测试。<br>　 　第一：兼容性测试<br>　　针对App通常会考虑这些方面：<br>　　1） 操作系统版本<br>　　包括Andoird版本，iOS版本<br>　　2）屏幕分辨率<br>　　3）不同厂家的ROM<br>　　4) 网络类型<br>　　比如Wifi、3G、4G下的功能情况<br>　　 第二：流量测试<br>　　在 移动产品的测试中，很有必要对App使用的流量进行度量，大致来说，流量可以从用户使用的的相关性角度分为：一类是用户的操作直接导致的流量消耗；另一类是后台，即在用户没有直接使用情况下的流量消耗。<br>　　 第三：电量测试<br>　　在木器电池 技术没有取得巨大突破前提下，这方面始终会存在一些瓶颈，如果一些App架构设计的不好，或者代码偶缺陷，就可能导致电量消耗比较高，所以电量测试也是很重要的。<br>　 　第四：弱网络测试<br>　　 移动互联网产品相比PC互联网产品，有一个特点是前者使用的网络比较多样，除了Wif之外，很多时候是在移动网络下使用的，移动网络遇到的情况又比较复杂，比如地铁、隧道、体育场等。所以网络不稳定的情况是比较容易发生的，很多情况下App的一些问题是在复杂的网络情况下才会暴露，与其让用户发现和投诉这些问题，不如我们在测试阶段尽量模拟这样的网络情况，及早发现和修复这些问题。<br>　　 第五：稳定性测试<br>　　在保证基本功能正确基础之上，App的稳定性就显得非常重要，如果一个App经常出现闪退或者卡死，那么用户体验就会受到很大伤害，在有其他竞争产品的情况下很容易造成用户的流失。<br>　　 第六：安全测试<br>　　包括安装包的安全测试（能否反编译代码、安装包是否签名等）、敏感信息测试、软键盘劫持、账户安全、数据通信安全等。服务器端的 SQL注入测试、XSS跨站脚本攻击等。<br>　　 第七：环境相关的测试<br>　　在实际项目中，有一些缺陷我发现是和App所处的运行环境相关的，所以设计测试的时候，要多考虑这些场景，比如：<br>　 　1）干扰测试<br>　　收到 电话、收到 短信、收到通知栏消息、无电提示框弹出、第三方安全软件告警弹出。<br>　　2）权限测试<br>　　一些用户在实际使用App的时候回有意识阻止某些功能。例如有的用户感觉让某个App访问电话本或者相册可能泄漏隐私，就在手机中设置了禁止了该App访问相册的权限。<br>　　3）边界测试<br>　　手机环境本身也有其边界情况需要在测试中覆盖。常见的场景有：<br>　　可用存储空间过少、没有SD卡&#x2F;双SD卡、飞行模式、系统时间有误（晚于和早于标准时间）、第三方依赖（比如我们的App依赖第三方App，但是现在第三方App没有安装或者版本过低的测试情况）</p>]]></content>
      
      
      <categories>
          
          <category> 软件测试面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件测试工程师面试基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP超文本传输协议</title>
      <link href="/2022/10/15/http/"/>
      <url>/2022/10/15/http/</url>
      
        <content type="html"><![CDATA[<h1 id="OSI模型"><a href="#OSI模型" class="headerlink" title="OSI模型"></a>OSI模型</h1><table><thead><tr><th>名称</th><th>协议</th></tr></thead><tbody><tr><td>7 应用层</td><td>DNS、http、ssh、FTP等</td></tr><tr><td>6 表示层</td><td>DNS、http、ssh、FTP等</td></tr><tr><td>5 会话层</td><td>DNS、http、ssh、FTP等</td></tr><tr><td>4 传输层</td><td>tcp、udp</td></tr><tr><td>3 网络层</td><td>IPV4、IPV6、ARP</td></tr><tr><td>2 数据链路层</td><td>以太网、无线LAN</td></tr><tr><td>1 物理层</td><td>光纤</td></tr></tbody></table><h1 id="http协议"><a href="#http协议" class="headerlink" title="http协议"></a>http协议</h1><p>http协议：超文本传输协议，基于TCP协议的应用层传输协议，一种 无状态的、以请求&#x2F;应答方式的运行的协议（无状态：对于事物处理没有记忆功能）</p><h1 id="主要组成"><a href="#主要组成" class="headerlink" title="主要组成"></a>主要组成</h1><p>http协议主要有三大部分组成</p><ul><li>起始行：描述请求或相应的文本</li><li>头部字段：使用key-value形式更加详细说明报文</li><li>消息正文：实际传输的数据，可以是文本、图片、视频等</li></ul><h1 id="http请求报文"><a href="#http请求报文" class="headerlink" title="http请求报文"></a>http请求报文</h1><ul><li>请求行</li><li>请求头</li><li>请求体</li></ul><h1 id="http响应报文"><a href="#http响应报文" class="headerlink" title="http响应报文"></a>http响应报文</h1><ul><li>响应行</li><li>响应头</li><li>响应体</li></ul><h1 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h1><p>tcp&#x2F;ip协议：面向连接的、可靠的基于字节流的传输层协议。</p><p><strong>特点</strong></p><p>基于连接的：数据传输前需要建立连接</p><p>全双工：双向传输</p><p>字节流：不限制传输大小</p><p>流量缓冲：解决双方处理能力的不匹配</p><p>可靠的传输服务：保证可达、信息丢包时通过重发机制实施可靠性</p><p>拥塞控制：防止网络出现恶性拥塞</p><p><strong>三次握手</strong></p><p> <img src="/../image.assets/20180808105159546.png" alt="alt"> </p><p>刚开始客户端处于 closed 的状态，服务端处于 listen 状态。然后<br>1、第一次握手：客户端给服务端发一个 SYN 报文，并指明客户端的初始化序列号 ISN（c）。此时客户端处于 SYN_Send 状态。</p><p>2、第二次握手：服务器收到客户端的 SYN 报文之后，会以自己的 SYN 报文作为应答，并且也是指定了自己的初始化序列号 ISN(s)，同时会把客户端的 ISN + 1 作为 ACK 的值，表示自己已经收到了客户端的 SYN，此时服务器处于 SYN_REVD 的状态。</p><p>3、第三次握手：客户端收到 ACK+SYN 报文之后，会发送一个 ACK 报文，当然，也是一样把服务器的 ISN + 1 作为 ACK 的值，表示已经收到了服务端的 SYN 报文，此时客户端处于 establised 状态。</p><p>4、服务器收到 ACK 报文之后，也处于 establised 状态，此时，双方以建立起了链接。</p><p class="note note-success">SYN是同步的缩写，SYN段是发送到另外一台计算机的TCP数据包，请求在她们之间建立连接</p>  <p class="note note-success">ACK是“确认”的缩写。ACK数据包是任何确认收到一条消息或一系列数据包的TCP数据包</p>**四次挥手**<p> <img src="/../image.assets/3971776-9550b64ff16dbb0b.webp" alt="img"> </p><p>刚开始双方都处于 establised 状态，假如是客户端先发起关闭请求，则：</p><p>1、第一次挥手：客户端发送一个 FIN 报文，报文中会指定一个序列号。此时客户端处于FIN_WAIT1状态。</p><p>2、第二次握手：服务端收到 FIN 之后，会发送 ACK 报文，且把客户端的序列号值 + 1 作为 ACK 报文的序列号值，表明已经收到客户端的报文了，此时服务端处于 CLOSE_WAIT状态。</p><p>3、第三次挥手：如果服务端也想断开连接了，和客户端的第一次挥手一样，发给 FIN 报文，且指定一个序列号。此时服务端处于 LAST_ACK 的状态。</p><p>4、第四次挥手：客户端收到 FIN 之后，一样发送一个 ACK 报文作为应答，且把服务端的序列号值 + 1 作为自己 ACK 报文的序列号值，此时客户端处于 TIME_WAIT 状态。需要过一阵子以确保服务端收到自己的 ACK 报文之后才会进入 CLOSED 状态</p><p>5、服务端收到 ACK 报文之后，就处于关闭连接了，处于 CLOSED 状态。</p><p><strong>为什么TIME-WAIT状态必须等待2MSL的时间？</strong></p><ul><li>保证客户端最后一个ACK能够到达服务器端</li><li>防止失效的请求报文段出现在本次连接中</li></ul><p> <img src="/../image.assets/http.jpg" alt="HTTP超文本传输协议"> </p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在线一键安装MySQL脚本</title>
      <link href="/2022/09/30/MySQLinstallScript/"/>
      <url>/2022/09/30/MySQLinstallScript/</url>
      
        <content type="html"><![CDATA[<p><strong>环境：</strong>  </p><ul><li>系统：rocky8.5  </li><li>MySQL版本:8.0.28   </li><li>在线安装</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#</span><br><span class="line">#Authoryuankun</span><br><span class="line">#Date2022-09-29</span><br><span class="line">#Filenameinstall_mysql-8.0.28-linux-glibc2.12-x86_64.sh</span><br><span class="line"></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line"></span><br><span class="line">color=&#x27;echo -e \E[01;31m&#x27;</span><br><span class="line"></span><br><span class="line">end=&#x27;\E[0m&#x27;</span><br><span class="line"></span><br><span class="line"># 设置mysql root用户密码</span><br><span class="line">MYSQL_ROOT_PASSWD=123456</span><br><span class="line">MYSQL_VERSION=mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz</span><br><span class="line"></span><br><span class="line">check()&#123;</span><br><span class="line">$&#123;color&#125;安装前环境检查......$&#123;end&#125;</span><br><span class="line"></span><br><span class="line"># 判断当前用户是否是root用户，不是则退出安装</span><br><span class="line">if [ $&#123;UID&#125; -ne 0 ];then</span><br><span class="line">action &quot;当前用户不是root,安装失败!&quot; false</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"># 判断是否安装wget，没有安装则使用yum安装wget</span><br><span class="line">rpm -q wget || yum install -y wget</span><br><span class="line"></span><br><span class="line"># 判断/usr/local/mysql目录是否存在，存在则exit</span><br><span class="line">if [ -e /usr/local/mysql ];then</span><br><span class="line">$&#123;color&#125;&quot;mysql已经安装,安装失败!&quot;$&#123;end&#125;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"># 下载二进制程序包</span><br><span class="line">wget https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz</span><br><span class="line"></span><br><span class="line"># 判断二进制程序包是否存在</span><br><span class="line">if [ ! -e $&#123;MYSQL_VERSION&#125; ];then</span><br><span class="line">$&#123;color&#125;&quot;文件不存在,安装失败!&quot;$&#123;end&#125;</span><br><span class="line">$&#123;color&#125;&quot;请检查脚本以及主机环境，然后再次尝试安装。即将退出安装流程!&quot;$&#123;end&#125;</span><br><span class="line">exit</span><br><span class="line">else</span><br><span class="line">$&#123;color&#125;&quot;安装前环境检查完毕,环境要求满足!&quot;$&#123;end&#125;</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"># 安装mysql</span><br><span class="line">install_mysql()&#123;</span><br><span class="line">$&#123;color&#125;&quot;开始安装mysql......&quot;$&#123;end&#125;</span><br><span class="line"># 安装依赖</span><br><span class="line">yum install -y -q libaio numactl-libs</span><br><span class="line"># 解压缩</span><br><span class="line">tar xf $&#123;MYSQL_VERSION&#125; -C /usr/local/</span><br><span class="line">cd /usr/local/</span><br><span class="line">MYSQL_FILE=`echo $&#123;MYSQL_VERSION&#125; | sed -nr &#x27;s/^(.*[0-9]).*/\1/p&#x27;`</span><br><span class="line">ln -s /usr/local/$&#123;MYSQL_FILE&#125; /usr/local/mysql</span><br><span class="line">chown -R root.root /usr/local/mysql/</span><br><span class="line">id mysql &amp;&gt; /dev/null || &#123; useradd -s /sbin/nologin -r mysql ; action &quot;创建mysql用户&quot;; &#125;</span><br><span class="line"></span><br><span class="line"># 环境变量</span><br><span class="line">echo &#x27;PATH=/usr/local/mysql/bin/:$PATH&#x27; &gt; /etc/profile.d/mysql.sh</span><br><span class="line">. /etc/profile.d/mysql.sh</span><br><span class="line">ln -s /usr/local/mysql/bin/* /usr/bin/</span><br><span class="line"># 配置文件</span><br><span class="line">cat &gt; /etc/my.cnf &lt;&lt;-EOF</span><br><span class="line">[mysqld]</span><br><span class="line">server-id=1</span><br><span class="line">log-bin</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line">log-error=/data/mysql/mysql.log</span><br><span class="line">pid-file=/data/mysql/mysql.pid</span><br><span class="line">[client]</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line">EOF</span><br><span class="line">[ -d /data ] || mkdir /data</span><br><span class="line">mysqld --initialize --user=mysql --datadir=/data/mysql</span><br><span class="line">cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld on</span><br><span class="line">service mysqld start</span><br><span class="line">[ $? -ne 0 ] &amp;&amp; &#123; $color&quot;数据库启动失败，退出!&quot;$end;exit; &#125;</span><br><span class="line">sleep 3</span><br><span class="line">MYSQL_OLDPASSWORD=`awk &#x27;/A temporary password/&#123;print $NF&#125;&#x27; /data/mysql/mysql.log`</span><br><span class="line">mysqladmin -uroot -p$&#123;MYSQL_OLDPASSWORD&#125; password $&#123;MYSQL_ROOT_PASSWD&#125; &amp;&gt;/dev/null</span><br><span class="line">action &quot;数据库安装完成&quot;</span><br><span class="line">&#125;</span><br><span class="line"># 调用函数</span><br><span class="line">check</span><br><span class="line">install_mysql</span><br></pre></td></tr></table></figure><p><strong>扩展</strong>：在线一键安装MySQL5.7.39脚本</p><ul><li>系统：rocky8.5  </li><li>MySQL版本:5.7.39</li><li>在线安装</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#</span><br><span class="line">#Authoryuankun</span><br><span class="line">#Date2022-11-19</span><br><span class="line">#Filenameinstall_mysql-5.7.39-linux-glibc2.12-x86_64.sh</span><br><span class="line"></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line"></span><br><span class="line">color=&#x27;echo -e \E[01;31m&#x27;</span><br><span class="line"></span><br><span class="line">end=&#x27;\E[0m&#x27;</span><br><span class="line"></span><br><span class="line"># 设置mysql root用户密码</span><br><span class="line">MYSQL_ROOT_PASSWD=123456</span><br><span class="line">MYSQL_VERSION=mysql-5.7.39-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line"></span><br><span class="line">check()&#123;</span><br><span class="line">$&#123;color&#125;安装前环境检查......$&#123;end&#125;</span><br><span class="line"></span><br><span class="line"># 判断当前用户是否是root用户，不是则退出安装</span><br><span class="line">if [ $&#123;UID&#125; -ne 0 ];then</span><br><span class="line">action &quot;当前用户不是root,安装失败!&quot; false</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"># 判断是否安装wget，没有安装则使用yum安装wget</span><br><span class="line">rpm -q wget || yum install -y wget</span><br><span class="line"></span><br><span class="line"># 判断/usr/local/mysql目录是否存在，存在则exit</span><br><span class="line">if [ -e /usr/local/mysql ];then</span><br><span class="line">$&#123;color&#125;&quot;mysql已经安装,安装失败!&quot;$&#123;end&#125;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"># 下载二进制程序包</span><br><span class="line">wget https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.39-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line"></span><br><span class="line"># 判断二进制程序包是否存在</span><br><span class="line">if [ ! -e $&#123;MYSQL_VERSION&#125; ];then</span><br><span class="line">$&#123;color&#125;&quot;文件不存在,安装失败!&quot;$&#123;end&#125;</span><br><span class="line">$&#123;color&#125;&quot;请检查脚本以及主机环境，然后再次尝试安装。即将退出安装流程!&quot;$&#123;end&#125;</span><br><span class="line">exit</span><br><span class="line">else</span><br><span class="line">$&#123;color&#125;&quot;安装前环境检查完毕,环境要求满足!&quot;$&#123;end&#125;</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"># 安装mysql</span><br><span class="line">install_mysql()&#123;</span><br><span class="line">$&#123;color&#125;&quot;开始安装mysql......&quot;$&#123;end&#125;</span><br><span class="line"># 安装依赖</span><br><span class="line">yum install -y -q libaio numactl-libs</span><br><span class="line"># 解压缩</span><br><span class="line">tar xf $&#123;MYSQL_VERSION&#125; -C /usr/local/</span><br><span class="line">cd /usr/local/</span><br><span class="line">MYSQL_FILE=`echo $&#123;MYSQL_VERSION&#125; | sed -nr &#x27;s/^(.*[0-9]).*/\1/p&#x27;`</span><br><span class="line">ln -s /usr/local/$&#123;MYSQL_FILE&#125; /usr/local/mysql</span><br><span class="line">chown -R root.root /usr/local/mysql/</span><br><span class="line">id mysql &amp;&gt; /dev/null || &#123; useradd -s /sbin/nologin -r mysql ; action &quot;创建mysql用户&quot;; &#125;</span><br><span class="line"></span><br><span class="line"># 环境变量</span><br><span class="line">echo &#x27;PATH=/usr/local/mysql/bin/:$PATH&#x27; &gt; /etc/profile.d/mysql.sh</span><br><span class="line">. /etc/profile.d/mysql.sh</span><br><span class="line">ln -s /usr/local/mysql/bin/* /usr/bin/</span><br><span class="line"># 配置文件</span><br><span class="line">cat &gt; /etc/my.cnf &lt;&lt;-EOF</span><br><span class="line">[mysqld]</span><br><span class="line">server-id=1</span><br><span class="line">log-bin</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line">log-error=/data/mysql/mysql.log</span><br><span class="line">pid-file=/data/mysql/mysql.pid</span><br><span class="line">[client]</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line">EOF</span><br><span class="line">[ -d /data ] || mkdir /data</span><br><span class="line">mysqld --initialize --user=mysql --datadir=/data/mysql</span><br><span class="line">cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld on</span><br><span class="line">service mysqld start</span><br><span class="line">[ $? -ne 0 ] &amp;&amp; &#123; $color&quot;数据库启动失败，退出!&quot;$end;exit; &#125;</span><br><span class="line">sleep 3</span><br><span class="line">MYSQL_OLDPASSWORD=`awk &#x27;/A temporary password/&#123;print $NF&#125;&#x27; /data/mysql/mysql.log`</span><br><span class="line">mysqladmin -uroot -p$&#123;MYSQL_OLDPASSWORD&#125; password $&#123;MYSQL_ROOT_PASSWD&#125; &amp;&gt;/dev/null</span><br><span class="line">action &quot;数据库安装完成&quot;</span><br><span class="line">&#125;</span><br><span class="line"># 调用函数</span><br><span class="line">check</span><br><span class="line">install_mysql</span><br></pre></td></tr></table></figure><p><strong>离线安装</strong></p><ul><li><p>注意：需要提前将二进制包下载到本地</p></li><li><p>系统：rocky8.5  </p></li><li><p>MySQL版本:8.0.28</p></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#</span><br><span class="line">#Authoryuankun</span><br><span class="line">#Date2022-11-19</span><br><span class="line">#Filenameinstall_offline_mysql-8.0.28-linux-glibc2.12-x86_64.sh</span><br><span class="line"></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line"></span><br><span class="line">color=&#x27;echo -e \E[01;31m&#x27;</span><br><span class="line"></span><br><span class="line">end=&#x27;\E[0m&#x27;</span><br><span class="line"></span><br><span class="line"># 设置mysql root用户密码</span><br><span class="line">MYSQL_ROOT_PASSWD=123456</span><br><span class="line"># mysql 版本</span><br><span class="line">MYSQL_VERSION=mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz</span><br><span class="line"></span><br><span class="line">check()&#123;</span><br><span class="line">$&#123;color&#125;安装前环境检查......$&#123;end&#125;</span><br><span class="line"></span><br><span class="line"># 判断当前用户是否是root用户，不是则退出安装</span><br><span class="line">if [ $&#123;UID&#125; -ne 0 ];then</span><br><span class="line">action &quot;当前用户不是root,安装失败!&quot; false</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># 判断/usr/local/mysql目录是否存在，存在则exit</span><br><span class="line">if [ -e /usr/local/mysql ];then</span><br><span class="line">$&#123;color&#125;&quot;mysql已经安装，安装失败!&quot;$&#123;end&#125;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># 判断二进制程序包是否存在</span><br><span class="line">if [ ! -e $&#123;MYSQL_VERSION&#125; ];then</span><br><span class="line">$&#123;color&#125;&quot;文件不存在,安装失败!&quot;$&#123;end&#125;</span><br><span class="line">$&#123;color&#125;&quot;请检查脚本以及主机环境，然后再次尝试安装。即将退出安装流程!&quot;$&#123;end&#125;</span><br><span class="line">exit</span><br><span class="line">else</span><br><span class="line">$&#123;color&#125;&quot;安装前环境检查完毕,环境要求满足!&quot;$&#123;end&#125;</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line">install_mysql()&#123;</span><br><span class="line">$&#123;color&#125;&quot;开始安装mysql......&quot;$&#123;end&#125;</span><br><span class="line"># 安装依赖</span><br><span class="line">yum install -y -q libaio numactl-libs</span><br><span class="line"># 解压缩</span><br><span class="line">tar xf $&#123;MYSQL_VERSION&#125; -C /usr/local/</span><br><span class="line">cd /usr/local/</span><br><span class="line">MYSQL_FILE=`echo $&#123;MYSQL_VERSION&#125; | sed -nr &#x27;s/^(.*[0-9]).*/\1/p&#x27;`</span><br><span class="line">ln -s /usr/local/$&#123;MYSQL_FILE&#125; /usr/local/mysql</span><br><span class="line">chown -R root.root /usr/local/mysql/</span><br><span class="line">id mysql &amp;&gt; /dev/null || &#123; useradd -s /sbin/nologin -r mysql ; action &quot;创建mysql用户&quot;; &#125;</span><br><span class="line"></span><br><span class="line"># 环境变量</span><br><span class="line">echo &#x27;PATH=/usr/local/mysql/bin/:$PATH&#x27; &gt; /etc/profile.d/mysql.sh</span><br><span class="line">. /etc/profile.d/mysql.sh</span><br><span class="line">ln -s /usr/local/mysql/bin/* /usr/bin/</span><br><span class="line"># 配置文件</span><br><span class="line">cat &gt; /etc/my.cnf &lt;&lt;-EOF</span><br><span class="line">[mysqld]</span><br><span class="line">server-id=1</span><br><span class="line">log-bin</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line">log-error=/data/mysql/mysql.log</span><br><span class="line">pid-file=/data/mysql/mysql.pid</span><br><span class="line">[client]</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line">EOF</span><br><span class="line">[ -d /data ] || mkdir /data</span><br><span class="line">mysqld --initialize --user=mysql --datadir=/data/mysql</span><br><span class="line">cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld on</span><br><span class="line">service mysqld start</span><br><span class="line">[ $? -ne 0 ] &amp;&amp; &#123; $color&quot;数据库启动失败，退出!&quot;$end;exit; &#125;</span><br><span class="line">sleep 3</span><br><span class="line">MYSQL_OLDPASSWORD=`awk &#x27;/A temporary password/&#123;print $NF&#125;&#x27; /data/mysql/mysql.log`</span><br><span class="line">mysqladmin -uroot -p$&#123;MYSQL_OLDPASSWORD&#125; password $&#123;MYSQL_ROOT_PASSWD&#125; &amp;&gt;/dev/null</span><br><span class="line">action &quot;数据库安装完成&quot;</span><br><span class="line">&#125;</span><br><span class="line"># 调用函数</span><br><span class="line">check</span><br><span class="line">install_mysql</span><br></pre></td></tr></table></figure><p><strong>离线安装Mysql5.7.38</strong></p><ul><li>操作系统：centos7.9</li><li>mysql版本：5.7.38</li><li>mysql-5.7.38-linux-glibc2.12-x86_64.tar.gz下载链接</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirrors.cloud.tencent.com/mysql/downloads/MySQL-5.7/mysql-5.7.38-linux-glibc2.12-x86_64.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#</span><br><span class="line">#Authoryuankun</span><br><span class="line">#Date2022-11-24</span><br><span class="line">#Filenameinstall_offline_mysql-5.7.38-linux-glibc2.12-x86_64.sh</span><br><span class="line"></span><br><span class="line">. /etc/init.d/functions</span><br><span class="line"></span><br><span class="line">color=&#x27;echo -e \E[01;31m&#x27;</span><br><span class="line"></span><br><span class="line">end=&#x27;\E[0m&#x27;</span><br><span class="line"></span><br><span class="line"># 设置mysql root用户密码</span><br><span class="line">MYSQL_ROOT_PASSWD=123456</span><br><span class="line"># mysql 版本</span><br><span class="line">MYSQL_VERSION=mysql-5.7.38-linux-glibc2.12-x86_64.tar.gz</span><br><span class="line"></span><br><span class="line">check()&#123;</span><br><span class="line">$&#123;color&#125;安装前环境检查......$&#123;end&#125;</span><br><span class="line"></span><br><span class="line"># 判断当前用户是否是root用户，不是则退出安装</span><br><span class="line">if [ $&#123;UID&#125; -ne 0 ];then</span><br><span class="line">action &quot;当前用户不是root,安装失败!&quot; false</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># 判断/usr/local/mysql目录是否存在，存在则exit</span><br><span class="line">if [ -e /usr/local/mysql ];then</span><br><span class="line">$&#123;color&#125;&quot;mysql已经安装，安装失败!&quot;$&#123;end&#125;</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># 判断二进制程序包是否存在</span><br><span class="line">if [ ! -e $&#123;MYSQL_VERSION&#125; ];then</span><br><span class="line">$&#123;color&#125;&quot;文件不存在,安装失败!&quot;$&#123;end&#125;</span><br><span class="line">$&#123;color&#125;&quot;请检查脚本以及主机环境，然后再次尝试安装。即将退出安装流程!&quot;$&#123;end&#125;</span><br><span class="line">exit</span><br><span class="line">else</span><br><span class="line">$&#123;color&#125;&quot;安装前环境检查完毕,环境要求满足!&quot;$&#123;end&#125;</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line">install_mysql()&#123;</span><br><span class="line">$&#123;color&#125;&quot;开始安装mysql......&quot;$&#123;end&#125;</span><br><span class="line"># 安装依赖</span><br><span class="line">yum install -y -q libaio numactl-libs</span><br><span class="line"># 解压缩</span><br><span class="line">tar xf $&#123;MYSQL_VERSION&#125; -C /usr/local/</span><br><span class="line">cd /usr/local/</span><br><span class="line">MYSQL_FILE=`echo $&#123;MYSQL_VERSION&#125; | sed -nr &#x27;s/^(.*[0-9]).*/\1/p&#x27;`</span><br><span class="line">ln -s /usr/local/$&#123;MYSQL_FILE&#125; /usr/local/mysql</span><br><span class="line">chown -R root.root /usr/local/mysql/</span><br><span class="line">id mysql &amp;&gt; /dev/null || &#123; useradd -s /sbin/nologin -r mysql ; action &quot;创建mysql用户&quot;; &#125;</span><br><span class="line"></span><br><span class="line"># 环境变量</span><br><span class="line">echo &#x27;PATH=/usr/local/mysql/bin/:$PATH&#x27; &gt; /etc/profile.d/mysql.sh</span><br><span class="line">. /etc/profile.d/mysql.sh</span><br><span class="line">ln -s /usr/local/mysql/bin/* /usr/bin/</span><br><span class="line"># 配置文件</span><br><span class="line">cat &gt; /etc/my.cnf &lt;&lt;-EOF</span><br><span class="line">[mysqld]</span><br><span class="line">server-id=1</span><br><span class="line">log-bin</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line">log-error=/data/mysql/mysql.log</span><br><span class="line">pid-file=/data/mysql/mysql.pid</span><br><span class="line">[client]</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line">EOF</span><br><span class="line">[ -d /data ] || mkdir /data</span><br><span class="line">mysqld --initialize --user=mysql --datadir=/data/mysql</span><br><span class="line">cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">chkconfig --add mysqld</span><br><span class="line">chkconfig mysqld on</span><br><span class="line">service mysqld start</span><br><span class="line">[ $? -ne 0 ] &amp;&amp; &#123; $color&quot;数据库启动失败，退出!&quot;$end;exit; &#125;</span><br><span class="line">sleep 3</span><br><span class="line">MYSQL_OLDPASSWORD=`awk &#x27;/A temporary password/&#123;print $NF&#125;&#x27; /data/mysql/mysql.log`</span><br><span class="line">mysqladmin -uroot -p$&#123;MYSQL_OLDPASSWORD&#125; password $&#123;MYSQL_ROOT_PASSWD&#125; &amp;&gt;/dev/null</span><br><span class="line">action &quot;数据库安装完成&quot;</span><br><span class="line">&#125;</span><br><span class="line"># 调用函数</span><br><span class="line">check</span><br><span class="line">install_mysql</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库基础和安装使用</title>
      <link href="/2022/09/28/MySQL/"/>
      <url>/2022/09/28/MySQL/</url>
      
        <content type="html"><![CDATA[<p class="note note-success"> MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一 </p><span id="more"></span><h1 id="MySQL的特性"><a href="#MySQL的特性" class="headerlink" title="MySQL的特性"></a>MySQL的特性</h1><p><img src="/../image.assets/1668695639684.png" alt="1668695639684"></p><h1 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h1><h2 id="安装方式介绍"><a href="#安装方式介绍" class="headerlink" title="安装方式介绍"></a>安装方式介绍</h2><p>程序包管理器管理的程序包<br>源代码编译安装<br>二进制格式的程序包：展开至特定路径，并经过简单配置后即可使用</p><h3 id="rpm安装"><a href="#rpm安装" class="headerlink" title="rpm安装"></a>rpm安装</h3><p>CentOS 安装光盘<br>项目官方：<a href="https://downloads.mariadb.org/mariadb/repositories/">https://downloads.mariadb.org/mariadb/repositories/</a><br>国内镜像：<a href="https://mirrors.tuna.tsinghua.edu.cn/mariadb/yum/">https://mirrors.tuna.tsinghua.edu.cn/mariadb/yum/</a><br><a href="https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/">https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/</a></p><p><strong>范例1：CentOS 7 利用yum源安装MySQL8.0</strong></p><p><a href="https://dev.mysql.com/downloads/repo/yum/">MySQL官网</a></p><ul><li>官网下载rpm包</li></ul><p> <img src="/../image.assets/1664415600826.png" alt="1664415600826"> </p><ul><li>利用rz命令将rpm包上传到主机</li></ul><p><strong>扩展：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rz命令yum安装:yum install lrzsz</span><br></pre></td></tr></table></figure><p> <img src="/../image.assets/1664415914209.png" alt="1664415914209"> </p><ul><li>安装rpm包</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@centos7[~]-&gt;yum install mysql80-community-release-el7-7.noarch.rpm</span><br></pre></td></tr></table></figure><ul><li>安装MySQL</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@centos7[~]-&gt;yum install -y mysql-community-server</span><br></pre></td></tr></table></figure><p><strong>范例2：CentOS 7 利用yum源安装MySQL5.7</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#tee /etc/yum.repos.d/mysql.repo &lt;&lt;EOF</span><br><span class="line">[mysql]</span><br><span class="line">name=mysql5.7</span><br><span class="line">baseurl=https://mirrors.tuna.tsinghua.edu.cn/mysql/yum/mysql-5.7-community-el7-</span><br><span class="line">x86_64/</span><br><span class="line">gpgcheck=0</span><br><span class="line">EOF</span><br><span class="line">[root@centos7 ~]#yum -y install mysql-community-server</span><br><span class="line">[root@centos7 ~]#systemctl enable --now mysqld</span><br></pre></td></tr></table></figure><h3 id="二进制安装"><a href="#二进制安装" class="headerlink" title="二进制安装"></a>二进制安装</h3><p><strong>环境</strong></p><p>系统：rocky8.5</p><p>MySQL版本：mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz  </p><p><strong>步骤</strong></p><ul><li>安装相关包</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install libaio numactl-libs</span><br></pre></td></tr></table></figure><ul><li>准备用户</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -r -g mysql -s /bin/false mysql</span><br></pre></td></tr></table></figure><ul><li>下载二进制程序包</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># -P下载到指定目录</span><br><span class="line">wget https://cdn.mysql.com/archives/mysql-8.0/mysql-8.0.28-linux-glibc2.12-x86_64.tar.xz -P /usr/local/  </span><br><span class="line"></span><br><span class="line"> ln -s mysql-8.0.28-linux-glibc2.12-x86_64 mysql</span><br><span class="line"> </span><br><span class="line"> chown -R root.root /usr/local/mysql/</span><br></pre></td></tr></table></figure><ul><li>准备环境变量</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;PATH=/usr/local/mysql/bin:$PATH&#x27; &gt; /etc/profile.d/mysql.sh</span><br><span class="line">. /etc/profile.d/mysql.sh</span><br></pre></td></tr></table></figure><ul><li>准备配置文件</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">datadir=/data/mysql</span><br><span class="line">skip_name_resolve=1</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br><span class="line">log-error=/data/mysql/mysql.log</span><br><span class="line">pid-file=/data/mysql/mysql.pid</span><br><span class="line">[client]</span><br><span class="line">socket=/data/mysql/mysql.sock</span><br></pre></td></tr></table></figure><ul><li>初始化数据库文件并提取root密码</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -pv /data/mysql</span><br><span class="line">grep password /data/mysql/mysql.log</span><br></pre></td></tr></table></figure><p>生成随机密码</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize --user=mysql --datadir=/data/mysql</span><br></pre></td></tr></table></figure><p>生成空密码</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure --user=mysql --datadir=/data/mysql</span><br></pre></td></tr></table></figure><ul><li>准备服务脚本和启动</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky local]# cp /usr/local/mysql/support-files/mysql.server  /etc/init.d/mysqld</span><br><span class="line"></span><br><span class="line">chkconfig --add mysqld</span><br><span class="line"># 启动服务</span><br><span class="line">service mysqld start</span><br></pre></td></tr></table></figure><ul><li>修改口令</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 修改随机密码为指定密码</span><br><span class="line">mysqladmin -uroot -p&#x27;9ATjCOB(jIef&#x27; password 123456</span><br><span class="line"></span><br><span class="line">#修改前面生成的空密码为指定密码</span><br><span class="line">mysqladmin -uroot password 123456</span><br></pre></td></tr></table></figure><ul><li>测试登录</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p&#x27;123456&#x27;</span><br></pre></td></tr></table></figure><p>注意：登录mysql报如下信息</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql: error while loading shared libraries: libtinfo.so.5: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><p>解决方法：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/lib64/libtinfo.so.6.1 /usr/lib64/libtinfo.so.5</span><br></pre></td></tr></table></figure><p>登录成功：</p><p> <img src="/../image.assets/1664459241867.png" alt="1664459241867"> </p><h3 id="源码编译安装"><a href="#源码编译安装" class="headerlink" title="源码编译安装"></a>源码编译安装</h3><h1 id="MySQL多实例"><a href="#MySQL多实例" class="headerlink" title="MySQL多实例"></a>MySQL多实例</h1><h1 id="SQL语言"><a href="#SQL语言" class="headerlink" title="SQL语言"></a>SQL语言</h1><h2 id="SQL语言的兴起与语法标准"><a href="#SQL语言的兴起与语法标准" class="headerlink" title="SQL语言的兴起与语法标准"></a>SQL语言的兴起与语法标准</h2><h3 id="SQL语句分类"><a href="#SQL语句分类" class="headerlink" title="SQL语句分类"></a>SQL语句分类</h3><ul><li>DDL: Data Defination Language 数据定义语言<br>CREATE，DROP，ALTER</li><li>DML: Data Manipulation Language 数据操纵语言<br>INSERT，DELETE，UPDATE<br>软件开发：CRUD</li><li>DQL：Data Query Language 数据查询语言<br>SELECT</li><li>DCL：Data Control Language 数据控制语言<br>GRANT，REVOKE</li><li>TCL：Transaction Control Language 事务控制语言<br>COMMIT，ROLLBACK，SAVEPOINT</li></ul><h3 id="字符集和排序"><a href="#字符集和排序" class="headerlink" title="字符集和排序"></a>字符集和排序</h3><ul><li>查看所有支持的字符集</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show character set;</span><br><span class="line">show charset;</span><br></pre></td></tr></table></figure><ul><li>查看支持的所有排序</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">show collation;</span><br><span class="line">#注意</span><br><span class="line">utf8_general_ci不区分大小写</span><br><span class="line">utf8_bin 区分大小写</span><br></pre></td></tr></table></figure><ul><li>查看当前使用的排序规则</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &#x27;collation%&#x27;;</span><br><span class="line">+----------------------+-------------------+</span><br><span class="line">| Variable_name        | Value             |</span><br><span class="line">+----------------------+-------------------+</span><br><span class="line">| collation_connection | utf8_general_ci   |</span><br><span class="line">| collation_database   | latin1_swedish_ci |</span><br><span class="line">| collation_server     | latin1_swedish_ci |</span><br><span class="line">+----------------------+-------------------+</span><br><span class="line">3 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><ul><li>设置服务器端默认字符集</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line">#针对mysql客户端</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line">#针对所有MySQL客户端</span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8mb4</span><br></pre></td></tr></table></figure><ul><li>查看当前字符集的使用情况</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &#x27;character%&#x27;;</span><br><span class="line">+--------------------------+----------------------------------------------------------------+</span><br><span class="line">| Variable_name            | Value                                                          |</span><br><span class="line">+--------------------------+----------------------------------------------------------------+</span><br><span class="line">| character_set_client     | utf8mb4                                                        |</span><br><span class="line">| character_set_connection | utf8mb4                                                        |</span><br><span class="line">| character_set_database   | latin1                                                         |</span><br><span class="line">| character_set_filesystem | binary                                                         |</span><br><span class="line">| character_set_results    | utf8mb4                                                        |</span><br><span class="line">| character_set_server     | latin1                                                         |</span><br><span class="line">| character_set_system     | utf8                                                           |</span><br><span class="line">| character_sets_dir       | /usr/local/mysql-5.7.39-linux-glibc2.12-x86_64/share/charsets/ |</span><br><span class="line">+--------------------------+----------------------------------------------------------------+</span><br><span class="line">8 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure><p><strong>面试题: VARCHAR(50) 能存放几个 UTF8 编码的汉字？</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">存放的汉字个数与版本相关。</span><br><span class="line">mysql 4.0以下版本，varchar(50) 指的是 50 字节，如果存放 UTF8 格式编码的汉字时（每个汉字3字</span><br><span class="line">节），只能存放16 个。</span><br><span class="line">mysql 5.0以上版本，varchar(50) 指的是 50 字符，无论存放的是数字、字母还是 UTF8 编码的汉字，</span><br><span class="line">都可以存放 50 个。</span><br></pre></td></tr></table></figure><h1 id="MySQL用户管理"><a href="#MySQL用户管理" class="headerlink" title="ＭySQL用户管理"></a>ＭySQL用户管理</h1><ul><li>相关数据库和表</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">元数据数据库：mysql</span><br><span class="line">系统授权表：db, host, user,columns_priv, tables_priv, procs_priv, proxies_priv</span><br></pre></td></tr></table></figure><ul><li>用户账号</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x27;USERNAME&#x27;@&#x27;HOST&#x27;</span><br><span class="line">@&#x27;HOST&#x27;: 主机名： user1@&#x27;web1.magedu.org&#x27;</span><br><span class="line">IP地址或Network</span><br><span class="line">通配符： % _</span><br><span class="line">示例：wang@&#x27;172.16.%.%&#x27;</span><br><span class="line">user2@&#x27;192.168.1.%&#x27;</span><br><span class="line">mage@&#x27;10.0.0.0/255.255.0.0&#x27;</span><br></pre></td></tr></table></figure><ul><li>创建用户：create user</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE USER &#x27;USERNAME&#x27;@&#x27;HOST&#x27; [IDENTIFIED BY &#x27;password&#x27;]；</span><br><span class="line">#示例:</span><br><span class="line">create user test@&#x27;10.0.0.0/255.255.255.0&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">create user test2@&#x27;10.0.0.%&#x27; identified by 123456</span><br></pre></td></tr></table></figure><p>新建用户的默认权限：USAGE</p><ul><li>用户重命名：RENAME USER</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RENAME USER old_user_name TO new_user_name;</span><br></pre></td></tr></table></figure><ul><li>删除用户</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP USER &#x27;USERNAME&#x27;@&#x27;HOST&#x27;</span><br></pre></td></tr></table></figure><p><strong>删除空用户</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP USER &#x27;&#x27;@&#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure><p><strong>修改密码</strong></p><ul><li>注意</li></ul><p>新版mysql中用户密码可以保存在mysql.user表的authentication_string字段中<br>如果mysql.user表的authentication_string和password字段都保存密码，authentication_string<br>优先生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#方法1,用户可以也可通过此方式修改自已的密码</span><br><span class="line">SET PASSWORD FOR &#x27;user&#x27;@&#x27;host&#x27; = PASSWORD(&#x27;password&#x27;); #MySQL8.0 版本不支持此方法,</span><br><span class="line">因为password函数被取消</span><br><span class="line">set password for root@&#x27;localhost&#x27;=&#x27;123456&#x27; ; #MySQL8.0版本支持此方法,此方式直接将密码</span><br><span class="line">123456加密后存放在mysql.user表的authentication_string字段</span><br><span class="line">#方法2</span><br><span class="line">ALTER USER test@&#x27;%&#x27; IDENTIFIED BY &#x27;centos&#x27;; #通用改密码方法, 用户可以也可通过此方式修</span><br><span class="line">改自已的密码,MySQL8 版本修改密码</span><br><span class="line">#方法3 此方式MySQL8.0不支持,因为password函数被取消</span><br><span class="line">UPDATE mysql.user SET password=PASSWORD(&#x27;password&#x27;) WHERE clause;</span><br><span class="line">#mariadb 10.3</span><br><span class="line">update mysql.user set authentication_string=password(&#x27;ubuntu&#x27;) where</span><br><span class="line">user=&#x27;mage&#x27;;</span><br><span class="line">#此方法需要执行下面指令才能生效：</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p><strong>忘记管理员密码解决方法</strong></p><ol><li>启动mysqld进程时，为其使用如下选项：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--skip-grant-tables</span><br><span class="line">--skip-networking</span><br></pre></td></tr></table></figure><ol start="2"><li>使用UPDATE命令修改管理员密码</li><li>关闭mysqld进程，移除上述两个选项，重启mysqld</li></ol><p>范例:Mariadb 和MySQL5.6版之前破解root密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">skip-grant-tables</span><br><span class="line">skip-networking</span><br><span class="line">[root@centos8 ~]#systemctl restart mysqld|mariadb</span><br><span class="line">[root@centos8 ~]#mysql</span><br><span class="line">#方法1</span><br><span class="line">#mariadb 旧版和MySQL5.6版之前</span><br><span class="line">MariaDB [(none)]&gt; update mysql.user set password=password(&#x27;ubuntu&#x27;) where</span><br><span class="line">user=&#x27;root&#x27;;</span><br><span class="line">#mariadb 新版</span><br><span class="line">MariaDB [(none)]&gt; update mysql.user set authentication_string=password(&#x27;ubuntu&#x27;)</span><br><span class="line">where user=&#x27;root&#x27;;</span><br><span class="line">#方法2</span><br><span class="line">MariaDB [(none)]&gt; flush privileges;</span><br><span class="line">MariaDB [(none)]&gt; alter user root@&#x27;localhost&#x27; identified by &#x27;ubuntu&#x27;;</span><br><span class="line">[root@centos8 ~]#vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">#skip-grant-tables</span><br><span class="line">#skip-networking</span><br><span class="line"></span><br><span class="line">[root@centos8 ~]#systemctl restart mysqld|mariadb</span><br><span class="line">[root@centos8 ~]#mysql -uroot -pubuntu</span><br></pre></td></tr></table></figure><p>范例: MySQL5.7和8.0 破解root密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">skip-grant-tables</span><br><span class="line">skip-networking #MySQL8.0不需要</span><br><span class="line">[root@centos8 ~]#systemctl restart mysqld</span><br><span class="line">#方法1</span><br><span class="line">mysql&gt; update mysql.user set authentication_string=&#x27;&#x27; where user=&#x27;root&#x27; and</span><br><span class="line">host=&#x27;localhost&#x27;;</span><br><span class="line">#方法2</span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">#再执行下面任意一个命令</span><br><span class="line">mysql&gt; alter user root@&#x27;localhost&#x27; identified by &#x27;ubuntu&#x27;;</span><br><span class="line">mysql&gt; set password for root@&#x27;localhost&#x27;=&#x27;ubuntu&#x27;;</span><br><span class="line">[root@centos8 ~]#vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">#skip-grant-tables</span><br><span class="line">#skip-networking</span><br><span class="line">[root@centos8 ~]#systemctl restart mysqld</span><br><span class="line">[root@centos8 ~]#mysql -uroot -pubuntu</span><br></pre></td></tr></table></figure><p>范例: 删库跑路之清空root密码方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#此方法适用于包安装方式的MySQL或Mariadb</span><br><span class="line">[root@centos8 ~]#systemctl stop mysqld</span><br><span class="line">[root@centos8 ~]#rm -rf /var/lib/mysql/*</span><br><span class="line">[root@centos8 ~]#systemctl start mysqld</span><br></pre></td></tr></table></figure><h1 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h1><p><strong>权限类别：</strong></p><ul><li><p>管理类</p></li><li><p>程序类</p></li><li><p>数据库级别</p></li><li><p>表级别</p></li><li><p>字段级别</p></li></ul><p><strong>管理类：</strong></p><ul><li>CREATE USER</li><li>FILE</li><li>SUPER</li><li>SHOW DATABASES</li><li>RELOAD</li><li>SHUTDOWN</li><li>REPLICATION SLAVE</li><li>REPLICATION CLIENT</li><li>LOCK TABLES</li><li>PROCESS</li><li>CREATE TEMPORARY TABLES</li></ul><p><strong>程序类：针对 FUNCTION、PROCEDURE、TRIGGER</strong></p><ul><li>CREATE</li><li>ALTER</li><li>DROP</li><li>EXCUTE<br><strong>库和表级别：针对 DATABASE、TABLE</strong></li><li>ALTER</li><li>CREATE</li><li>CREATE VIEW</li><li>DROP INDEX</li><li>SHOW VIEW</li><li>WITH GRANT OPTION：能将自己获得的权限转赠给其他用户<br><strong>数据操作</strong></li><li>SELECT<br>-INSERT</li><li>DELETE</li><li>UPDATE<br><strong>字段级别</strong></li><li>SELECT(col1,col2,…)</li><li>UPDATE(col1,col2,…)</li><li>INSERT(col1,col2,…)<br><strong>所有权限</strong></li><li>ALL PRIVILEGES 或 ALL</li></ul><p><strong>授权</strong></p><ul><li>授权：GRANT</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GRANT SELECT (col1), INSERT (col1,col2) ON mydb.mytbl TO &#x27;someuser&#x27;@&#x27;somehost&#x27;;</span><br><span class="line">GRANT ALL ON wordpress.* TO wordpress@&#x27;10.0.0.%&#x27; ;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;10.0.0.%&#x27; WITH GRANT OPTION;</span><br><span class="line">#创建用户和授权同时执行的方式在MySQL8.0取消了</span><br><span class="line">GRANT ALL ON wordpress.* TO wordpress@&#x27;192.168.8.%&#x27; IDENTIFIED BY &#x27;magedu&#x27;;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;192.168.8.%&#x27; IDENTIFIED BY &#x27;magedu&#x27;</span><br><span class="line">WITH GRANT OPTION;</span><br></pre></td></tr></table></figure><p><strong>取消授权</strong></p><ul><li>取消授权：REVOKE</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REVOKE DELETE ON *.* FROM &#x27;testuser&#x27;@&#x27;172.16.0.%&#x27;;</span><br></pre></td></tr></table></figure><p><strong>查看指定用户获得的授权</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Help SHOW GRANTS</span><br><span class="line">SHOW GRANTS FOR &#x27;user&#x27;@&#x27;host&#x27;;</span><br><span class="line">SHOW GRANTS FOR CURRENT_USER[()];</span><br></pre></td></tr></table></figure><p><strong>注意：</strong><br>MariaDB服务进程启动时会读取mysql库中所有授权表至内存<br>(1) GRANT或REVOKE等执行权限操作会保存于系统表中，MariaDB的服务进程通常会自动重读授权表，<br>使之生效<br>(2) 对于不能够或不能及时重读授权表的命令，可手动让MariaDB的服务进程重读授权表：<br>mysql&gt; FLUSH PRIVILEGES;</p><h1 id="MyISAM-存储引擎"><a href="#MyISAM-存储引擎" class="headerlink" title="MyISAM 存储引擎"></a>MyISAM 存储引擎</h1><h2 id="MyISAM-引擎特点"><a href="#MyISAM-引擎特点" class="headerlink" title="MyISAM 引擎特点"></a>MyISAM 引擎特点</h2><ul><li>不支持事务</li><li>表级锁定</li><li>读写相互阻塞，写入不能读，读时不能写</li><li>只缓存索引</li><li>不支持外键约束</li><li>不支持聚簇索引</li><li>读取数据较快，占用资源较少</li><li>不支持MVCC（多版本并发控制机制）高并发</li><li>崩溃恢复性较差</li><li>MySQL5.5.5 前默认的数据库引擎</li></ul><h2 id="MyISAM-存储引擎适用场景"><a href="#MyISAM-存储引擎适用场景" class="headerlink" title="MyISAM 存储引擎适用场景"></a>MyISAM 存储引擎适用场景</h2><ul><li>只读（或者写较少）</li><li>表较小（可以接受长时间进行修复操作）</li></ul><h2 id="MyISAM-引擎文件"><a href="#MyISAM-引擎文件" class="headerlink" title="MyISAM 引擎文件"></a>MyISAM 引擎文件</h2><ul><li>tbl_name.frm 表格式定义</li><li>tbl_name.MYD 数据文件</li><li>tbl_name.MYI 索引文件</li></ul><h1 id="InnoDB-引擎"><a href="#InnoDB-引擎" class="headerlink" title="InnoDB 引擎"></a>InnoDB 引擎</h1><h2 id="InnoDB引擎特点"><a href="#InnoDB引擎特点" class="headerlink" title="InnoDB引擎特点"></a>InnoDB引擎特点</h2><ul><li>行级锁</li><li>支持事务，适合处理大量短期事务</li><li>读写阻塞与事务隔离级别相关</li><li>可缓存数据和索引</li><li>支持聚簇索引</li><li>崩溃恢复性更好</li><li>支持MVCC高并发</li><li>从MySQL5.5后支持全文索引</li><li>从MySQL5.5.5开始为默认的数据库引擎</li></ul><h1 id="管理存储引擎"><a href="#管理存储引擎" class="headerlink" title="管理存储引擎"></a>管理存储引擎</h1><p>查看mysql支持的存储引擎</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show engines;</span><br></pre></td></tr></table></figure><p>查看当前默认的存储引擎</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#x27;%storage_engine%&#x27;;</span><br></pre></td></tr></table></figure><p>设置默认的存储引擎</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">default_storage_engine= InnoDB</span><br></pre></td></tr></table></figure><p>查看库中所有表使用的存储引擎</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show table status from db_name;</span><br></pre></td></tr></table></figure><p>查看库中指定表的存储引擎</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show table status like &#x27;tb_name&#x27;;</span><br><span class="line">show create table tb_name;</span><br></pre></td></tr></table></figure><p>设置表的存储引擎：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE tb_name(... ) ENGINE=InnoDB;</span><br><span class="line">ALTER TABLE tb_name ENGINE=InnoDB;</span><br></pre></td></tr></table></figure><h1 id="实战案例：数据库冷备份和热备份"><a href="#实战案例：数据库冷备份和热备份" class="headerlink" title="实战案例：数据库冷备份和热备份"></a>实战案例：数据库冷备份和热备份</h1><p>MySQL8.0</p><p>冷备份：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">备份过程</span><br><span class="line"># 停止数据库</span><br><span class="line">systemctl stop mysql</span><br><span class="line"># rsync可以保留文件属性</span><br><span class="line">[root@centos8 ~]#rsync -a /var/lib/mysql 10.0.0.28:/data/</span><br><span class="line">#如果配置及二进制文件相关有特殊设置也需要备份</span><br><span class="line">#还原</span><br><span class="line">[root@centos8 ~]#yum -y install mysql-server</span><br><span class="line">[root@centos8 ~]#cp -a /data/mysql/* /var/lib/mysql/</span><br><span class="line">[root@centos8 ~]#systemctl start mysqld</span><br></pre></td></tr></table></figure><h1 id="mysqldump备份工具"><a href="#mysqldump备份工具" class="headerlink" title="mysqldump备份工具"></a>mysqldump备份工具</h1><p>mysqldump 说明<br>逻辑备份工具：<br>mysqldump, mydumper, phpMyAdmin<br>Schema和数据存储在一起、巨大的SQL语句、单个巨大的备份文件<br>mysqldump是MySQL的客户端命令，通过mysql协议连接至mysql服务器进行备份<br>命令格式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysqldump [OPTIONS] database [tables] #支持指定数据库和指定多表的备份，但数据库本身定义</span><br><span class="line">不备份</span><br><span class="line">mysqldump [OPTIONS] -B DB1 [DB2 DB3...] #支持指定数据库备份，包含数据库本身定义也会备份</span><br><span class="line">mysqldump [OPTIONS] -A [OPTIONS] #备份所有数据库，包含数据库本身定义也会备份</span><br></pre></td></tr></table></figure><p>mysqldump参考：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://dev.mysql.com/doc/refman/5.7/en/mysqldump.html</span><br></pre></td></tr></table></figure><p>mysqldump 常见通用选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">-u, --user=name User for login if not current user</span><br><span class="line">-p, --password[=name] Password to use when connecting to server</span><br><span class="line">-A, --all-databases #备份所有数据库，含create database</span><br><span class="line">-B, --databases db_name… #指定备份的数据库，包括create database语句</span><br><span class="line">-E, --events：#备份相关的所有event scheduler</span><br><span class="line">-R, --routines：#备份所有存储过程和自定义函数</span><br><span class="line">--triggers：#备份表相关触发器，默认启用,用--skip-triggers，不备份触发器</span><br><span class="line">--default-character-set=utf8 #指定字符集</span><br><span class="line">--master-data[=#]：#注意：MySQL8.0.26版以后，此选项变为--source-data</span><br><span class="line">#此选项须启用二进制日志</span><br><span class="line">#1：所备份的数据之前加一条记录为CHANGE MASTER TO语句，非注释，不指定#，默认为1，适合于主从复</span><br><span class="line">制多机使用</span><br><span class="line">#2：记录为被注释的#CHANGE MASTER TO语句，适合于单机使用,适用于备份还原</span><br><span class="line">#此选项会自动关闭--lock-tables功能，自动打开-x | --lock-all-tables功能（除非开启--</span><br><span class="line">single-transaction）</span><br><span class="line">-F, --flush-logs #备份前滚动日志，锁定表完成后，执行flush logs命令,生成新的二进制日志文件，</span><br><span class="line">配合-A 或 -B 选项时，会导致刷新多次数据库。建议在同一时刻执行转储和日志刷新，可通过和--single-</span><br><span class="line">transaction或-x，--master-data 一起使用实现，此时只刷新一次二进制日志</span><br><span class="line">--compact #去掉注释，适合调试，节约备份占用的空间,生产不使用</span><br><span class="line">-d, --no-data #只备份表结构,不备份数据,即只备份create table</span><br><span class="line">-t, --no-create-info #只备份数据,不备份表结构,即不备份create table</span><br><span class="line">-n,--no-create-db #不备份create database，可被-A或-B覆盖</span><br><span class="line">--flush-privileges #备份mysql或相关时需要使用</span><br><span class="line">-f, --force #忽略SQL错误，继续执行</span><br><span class="line">--hex-blob #使用十六进制符号转储二进制列，当有包括BINARY,VARBINARY,BLOB，</span><br><span class="line">BIT的数据类型的列时使用，避免乱码</span><br><span class="line">-q, --quick #不缓存查询，直接输出，加快备份速度</span><br></pre></td></tr></table></figure><p>mysqldump的MyISAM存储引擎相关的备份选项：<br>MyISAM不支持事务，只能支持温备；不支持热备，所以必须先锁定要备份的库，而后启动备份操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-x,--lock-all-tables #加全局读锁，锁定所有库的所有表，同时加--single-transaction或--</span><br><span class="line">lock-tables选项会关闭此选项功能，注意：数据量大时，可能会导致长时间无法并发访问数据库</span><br><span class="line">-l,--lock-tables #对于需要备份的每个数据库，在启动备份之前分别锁定其所有表，默认为on,--</span><br><span class="line">skip-lock-tables选项可禁用,对备份MyISAM的多个库,可能会造成数据不一致</span><br><span class="line">#注：以上选项对InnoDB表一样生效，实现温备，但不推荐使用</span><br></pre></td></tr></table></figure><p>mysqldump的InnoDB存储引擎相关的备份选项：<br>InnoDB 存储引擎支持事务,可以利用事务的相应的隔离级别,实现热备，也可以实现温备但不建议用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">--single-transaction</span><br><span class="line">#此选项Innodb中推荐使用，不适用MyISAM，此选项会开始备份前，先执行START TRANSACTION指令开启</span><br><span class="line">事务</span><br><span class="line">#此选项通过在单个事务中转储所有表来创建一致的快照。 仅适用于存储在支持多版本控制的存储引擎中的表</span><br><span class="line">（目前只有InnoDB可以）; 转储不保证与其他存储引擎保持一致。 在进行单事务转储时，要确保有效的转储</span><br><span class="line">文件（正确的表内容和二进制日志位置），没有其他连接应该使用以下语句：ALTER TABLE，DROP TABLE，</span><br><span class="line">RENAME TABLE，TRUNCATE TABLE,此选项和--lock-tables（此选项隐含提交挂起的事务）选项是相互</span><br><span class="line">排斥,备份大型表时，建议将--single-transaction选项和--quick结合一起使用</span><br></pre></td></tr></table></figure><h1 id="生产环境实战备份策略"><a href="#生产环境实战备份策略" class="headerlink" title="生产环境实战备份策略"></a>生产环境实战备份策略</h1><p>InnoDB建议备份策略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p -A -F -E -R --triggers --single-transaction --master-data=1</span><br><span class="line">--flush-privileges --default-character-set=utf8 --hex-blob</span><br><span class="line">&gt;$&#123;BACKUP&#125;/fullbak_$&#123;BACKUP_TIME&#125;.sql</span><br></pre></td></tr></table></figure><p>MyISAM建议备份策略</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p -A -F -E -R -x --master-data=1 --flush-privileges --</span><br><span class="line">triggers --default-character-set=utf8 --hex-blob</span><br><span class="line">&gt;$&#123;BACKUP&#125;/fullbak_$&#123;BACKUP_TIME&#125;.sql</span><br></pre></td></tr></table></figure><h1 id="mysqldump-备份还原实战案例"><a href="#mysqldump-备份还原实战案例" class="headerlink" title="mysqldump 备份还原实战案例"></a>mysqldump 备份还原实战案例</h1><h2 id="实战案例：特定数据库的备份脚本"><a href="#实战案例：特定数据库的备份脚本" class="headerlink" title="实战案例：特定数据库的备份脚本"></a>实战案例：特定数据库的备份脚本</h2><p>系统：centos8.5</p><p>mysql:8.0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">TIME=`date +%F_%H-%M-%S`</span><br><span class="line"># 备份目录</span><br><span class="line">DIR=/mysql_backup</span><br><span class="line"># 备份数据库</span><br><span class="line">DB=hellodb</span><br><span class="line"># 数据库密码</span><br><span class="line">PASSWD=123456</span><br><span class="line"></span><br><span class="line"># 判断备份数据库目录是否存在</span><br><span class="line"></span><br><span class="line">[ -d $DIR ] || mkdir $DIR</span><br><span class="line"></span><br><span class="line"># 备份</span><br><span class="line">mysqldump -uroot -p&quot;$PASSWD&quot; -F -E -R --triggers --single-transaction --master-data=2 --default-character-set=utf8mb4 -q -B $DB | gzip &gt; $&#123;DIR&#125;/$&#123;DB&#125;_$&#123;TIME&#125;.sql.gz</span><br></pre></td></tr></table></figure><h1 id="实战案例：分库备份的实战脚本"><a href="#实战案例：分库备份的实战脚本" class="headerlink" title="实战案例：分库备份的实战脚本"></a>实战案例：分库备份的实战脚本</h1><ul><li>系统：centos8.5</li><li>MySQL版本：8.0</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">TIME=`date +%F_%H-%M-%S`</span><br><span class="line">DIR=/backup</span><br><span class="line">PASS=123456</span><br><span class="line">[ -d &quot;$DIR&quot; ] || mkdir $DIR</span><br><span class="line">for DB in `mysql -uroot -p&quot;$PASS&quot; -e &#x27;show databases&#x27; | grep -Ev &quot;^Database|.*schema$&quot;`;do</span><br><span class="line">    mysqldump -uroot -p&quot;$PASS&quot; -F --single-transaction --master-data=2 --default-character-set=utf8mb4 -q -B $DB | gzip &gt; $&#123;DIR&#125;/$&#123;DB&#125;_$&#123;TIME&#125;.sql.gz</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="实战案例：完全备份和还原"><a href="#实战案例：完全备份和还原" class="headerlink" title="实战案例：完全备份和还原"></a>实战案例：完全备份和还原</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#开启二进制日志</span><br><span class="line">[root@centos8 ~]#vim /etc/my.cnf.d/mariadb-server.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">log-bin</span><br><span class="line">#备份</span><br><span class="line">[root@centos8 ~]#mysqldump -uroot -pmagedu -A -F --single-transaction --master-</span><br><span class="line">data=2 |gzip &gt; /backup/all-`date +%F`.sql.gz</span><br><span class="line">#还原</span><br><span class="line">[root@centos8 backup]#dnf install mariadb-server</span><br><span class="line">[root@centos8 backup]#gzip -d all-2019-11-27.sql.gz</span><br><span class="line">[root@centos8 ~]#mysql</span><br><span class="line">MariaDB [(none)]&gt; set sql_log_bin=off;</span><br><span class="line">MariaDB [(none)]&gt; source /backup/all-2019-11-27.sql</span><br><span class="line">MariaDB [(none)]&gt; set sql_log_bin=on;</span><br></pre></td></tr></table></figure><h1 id="实战案例：恢复误删除的表"><a href="#实战案例：恢复误删除的表" class="headerlink" title="实战案例：恢复误删除的表"></a>实战案例：恢复误删除的表</h1><p>案例说明：每天2：30做完全备份，早上10：00误删除了表students，10：10才发现故障，现需要将数<br>据库还原到10：10的状态，且恢复被删除的students表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">#查看数据库是否开启二进制</span><br><span class="line">mysql&gt; select @@log_bin;</span><br><span class="line">+-----------+</span><br><span class="line">| @@log_bin |</span><br><span class="line">+-----------+</span><br><span class="line">|         1 |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select @@sql_log_bin;</span><br><span class="line">+---------------+</span><br><span class="line">| @@sql_log_bin |</span><br><span class="line">+---------------+</span><br><span class="line">|             1 |</span><br><span class="line">+---------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br><span class="line"></span><br><span class="line"># log_bin、sql_log_bin的值为1说明已经开启二进制日志</span><br><span class="line"></span><br><span class="line"># 查看当前二进制文件在什么位置</span><br><span class="line">mysql&gt; show master logs;</span><br><span class="line">+------------------+-----------+-----------+</span><br><span class="line">| Log_name         | File_size | Encrypted |</span><br><span class="line">+------------------+-----------+-----------+</span><br><span class="line">| mysql-bin.000001 |       204 | No        |</span><br><span class="line">| mysql-bin.000002 |       157 | No        |</span><br><span class="line">+------------------+-----------+-----------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br><span class="line"># 备份的时候开启刷新二进制日志，会生成新的二进制的日志</span><br><span class="line"></span><br><span class="line">#完全备份</span><br><span class="line">[root@centos7 ~]# mysqldump -uroot -p123456 -A -F --single-transaction --master-data=2 | gzip &gt; /backup/all_`date +%F`.sql.gz</span><br><span class="line"></span><br><span class="line"># 完全备份后进行数据更新</span><br><span class="line">mysql&gt; insert students (name,age,gender) values(&#x27;jack&#x27;,22,&#x27;M&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert students (name,age,gender) values(&#x27;rose&#x27;,20,&#x27;f&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line"># 误删除学生表</span><br><span class="line">mysql&gt; drop table students;</span><br><span class="line">Query OK, 0 rows affected (0.07 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br><span class="line"></span><br><span class="line"># 后续其他表继续更新</span><br><span class="line">mysql&gt; insert teachers (name,age,gender)values(&#x27;wang&#x27;,30,&#x27;M&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br><span class="line"></span><br><span class="line">mysql&gt; insert teachers (name,age,gender)values(&#x27;mage&#x27;,28,&#x27;M&#x27;);</span><br><span class="line">Query OK, 1 row affected (0.05 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br><span class="line"></span><br><span class="line"># 停止数据库访问</span><br><span class="line"></span><br><span class="line"># 备份从完全备份后的二进制日志</span><br><span class="line">[root@centos7 ~]# mysqlbinlog --start-position=157 /data/mysql/mysql-bin.000003 &gt; /backup/inc.sql</span><br><span class="line"></span><br><span class="line"># 找到误删除的语句，从备份中删除此语句</span><br><span class="line">#DROP TABLE `students` /* generated by server */</span><br><span class="line">#利用完全备份和修改过的二进制日志进行还原</span><br><span class="line">[root@centos8 ~]#mysql -uroot -p</span><br><span class="line">mysql&gt; set sql_log_bin=0;</span><br><span class="line">mysql&gt; source /backup/allbackup_2019-11-27_10:20:08.sql;</span><br><span class="line">mysql&gt; source /backup/inc.sql</span><br><span class="line">mysql&gt; set sql_log_bin=1;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux防火墙</title>
      <link href="/2022/09/25/FireWall/"/>
      <url>/2022/09/25/FireWall/</url>
      
        <content type="html"><![CDATA[<p class="note note-success"> firewall一般指防火墙。 防火墙（英语：Firewall）技术是通过有机结合各类用于安全管理与筛选的软件和硬件设备，帮助计算机网络于其内、外网之间构建一道相对隔绝的保护屏障，以保护用户资料与信息安全性的一种技术。 </p><span id="more"></span>  <h1 id="防火墙基本认识"><a href="#防火墙基本认识" class="headerlink" title="防火墙基本认识"></a>防火墙基本认识</h1><h2 id="Netfilter"><a href="#Netfilter" class="headerlink" title="Netfilter"></a>Netfilter</h2><p> <img src="/../image.assets/1664334608880.png" alt="1664334608880"> </p><p>Linux防火墙是由Netfilter组件提供的，Netfilter工作在内核空间，集成在linux内核中。<br>Netfilter 是Linux 2.4.x之后新一代的Linux防火墙机制，是linux内核的一个子系统。Netfilter采用模块<br>化设计，具有良好的可扩充性，提供扩展各种网络服务的结构化底层框架。Netfilter与IP协议栈是无缝<br>契合，并允许对数据报进行过滤、地址转换、处理等操作。  </p><p><a href="https://netfilter.org/documentation/">Netfilter官网文档</a>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# grep -m 10 NETFILTER /boot/config-3.10.0-1160.el7.x86_64 </span><br><span class="line">CONFIG_NETFILTER=y</span><br><span class="line"># CONFIG_NETFILTER_DEBUG is not set</span><br><span class="line">CONFIG_NETFILTER_ADVANCED=y</span><br><span class="line">CONFIG_BRIDGE_NETFILTER=m</span><br><span class="line">CONFIG_NETFILTER_NETLINK=m</span><br><span class="line">CONFIG_NETFILTER_NETLINK_ACCT=m</span><br><span class="line">CONFIG_NETFILTER_NETLINK_QUEUE=m</span><br><span class="line">CONFIG_NETFILTER_NETLINK_LOG=m</span><br><span class="line">CONFIG_NETFILTER_NETLINK_QUEUE_CT=y</span><br><span class="line">CONFIG_NETFILTER_SYNPROXY=m</span><br><span class="line">[root@centos7 ~]# </span><br></pre></td></tr></table></figure><h2 id="防火墙工具介绍"><a href="#防火墙工具介绍" class="headerlink" title="防火墙工具介绍"></a>防火墙工具介绍</h2><h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h3><p>由软件包iptables提供的命令行工具，工作在用户空间，用来编写规则，写好的规则被送往netfilter，告<br>诉内核如何去处理信息包。</p><ul><li>查看iptables信息</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# rpm -qi iptables</span><br><span class="line">Name        : iptables</span><br><span class="line">Version     : 1.4.21</span><br><span class="line">Release     : 35.el7</span><br><span class="line">Architecture: x86_64</span><br><span class="line">Install Date: Sat 17 Sep 2022 10:31:09 AM CST</span><br><span class="line">Group       : System Environment/Base</span><br><span class="line">Size        : 1556976</span><br><span class="line">License     : GPLv2</span><br><span class="line">Signature   : RSA/SHA256, Thu 15 Oct 2020 02:51:02 AM CST, Key ID 24c6a8a7f4a80eb5</span><br><span class="line">Source RPM  : iptables-1.4.21-35.el7.src.rpm</span><br><span class="line">Build Date  : Fri 02 Oct 2020 12:52:54 AM CST</span><br><span class="line">Build Host  : x86-01.bsys.centos.org</span><br><span class="line">Relocations : (not relocatable)</span><br><span class="line">Packager    : CentOS BuildSystem &lt;http://bugs.centos.org&gt;</span><br><span class="line">Vendor      : CentOS</span><br><span class="line">URL         : http://www.netfilter.org/</span><br><span class="line">Summary     : Tools for managing Linux kernel packet filtering capabilities</span><br><span class="line">Description :</span><br><span class="line">The iptables utility controls the network packet filtering code in the</span><br><span class="line">Linux kernel. If you need to set up firewalls and/or IP masquerading,</span><br><span class="line">you should install this package.</span><br><span class="line">[root@centos7 ~]# </span><br></pre></td></tr></table></figure><p><strong>范例：安装iptables的server包</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 安装dnf</span><br><span class="line">[root@centos7 ~]# yum install dnf</span><br><span class="line"># 安装iptables-services</span><br><span class="line">[root@centos7 ~]# dnf -y install iptables-services</span><br><span class="line"># 查看iptables-services文件列表</span><br><span class="line">[root@centos7 ~]# rpm -ql iptables-services</span><br><span class="line">/etc/sysconfig/ip6tables</span><br><span class="line">/etc/sysconfig/iptables</span><br><span class="line">/usr/lib/systemd/system/ip6tables.service</span><br><span class="line">/usr/lib/systemd/system/iptables.service</span><br><span class="line">/usr/libexec/initscripts/legacy-actions/ip6tables</span><br><span class="line">/usr/libexec/initscripts/legacy-actions/ip6tables/panic</span><br><span class="line">/usr/libexec/initscripts/legacy-actions/ip6tables/save</span><br><span class="line">/usr/libexec/initscripts/legacy-actions/iptables</span><br><span class="line">/usr/libexec/initscripts/legacy-actions/iptables/panic</span><br><span class="line">/usr/libexec/initscripts/legacy-actions/iptables/save</span><br><span class="line">/usr/libexec/iptables</span><br><span class="line">/usr/libexec/iptables/ip6tables.init</span><br><span class="line">/usr/libexec/iptables/iptables.init</span><br><span class="line">[root@centos7 ~]# </span><br></pre></td></tr></table></figure><h3 id="firewalld"><a href="#firewalld" class="headerlink" title="firewalld"></a>firewalld</h3><p>从CentOS 7 版开始引入了新的前端管理工具<br>软件包：</p><ul><li>firewalld  </li><li>firewalld-config</li></ul><p>管理工具：  </p><ul><li>firewall-cmd 命令行工具  </li><li>firewall-config 图形工作</li></ul><h3 id="nftables"><a href="#nftables" class="headerlink" title="nftables"></a>nftables</h3><p>它重用了netfilter框架的许多部分，例如连接跟踪和NAT功能。它还保留了命名法和基本iptables设计的几个部分，例如表，链和规则。就像iptables一样，表充当链的容器，并且链包含单独的规则，这些规则可以执行操作，例如丢弃数据包，移至下一个规则或跳至新链。<br>从用户的角度来看，nftables添加了一个名为nft的新工具，该工具替代了iptables，arptables和<br>ebtables中的所有其他工具。从体系结构的角度来看，它还替换了内核中处理数据包过滤规则集运行时评估的那些部分。</p><ul><li>查看软件信息</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# rpm -qi nftables</span><br><span class="line">Name        : nftables</span><br><span class="line">Epoch       : 1</span><br><span class="line">Version     : 0.8</span><br><span class="line">Release     : 14.el7</span><br><span class="line">Architecture: x86_64</span><br><span class="line">Install Date: Wed 28 Sep 2022 11:36:55 AM CST</span><br><span class="line">Group       : Unspecified</span><br><span class="line">Size        : 500068</span><br><span class="line">License     : GPLv2</span><br><span class="line">Signature   : RSA/SHA256, Fri 23 Aug 2019 05:36:19 AM CST, Key ID 24c6a8a7f4a80eb5</span><br><span class="line">Source RPM  : nftables-0.8-14.el7.src.rpm</span><br><span class="line">Build Date  : Fri 09 Aug 2019 09:13:15 AM CST</span><br><span class="line">Build Host  : x86-01.bsys.centos.org</span><br><span class="line">Relocations : (not relocatable)</span><br><span class="line">Packager    : CentOS BuildSystem &lt;http://bugs.centos.org&gt;</span><br><span class="line">Vendor      : CentOS</span><br><span class="line">URL         : http://netfilter.org/projects/nftables/</span><br><span class="line">Summary     : Netfilter Tables userspace utillites</span><br><span class="line">Description :</span><br><span class="line">Netfilter Tables userspace utilities.</span><br><span class="line">[root@centos7 ~]# </span><br></pre></td></tr></table></figure><p><strong>范例：centos8支持三种防火墙服务</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky ~]# systemctl status iptables.service</span><br><span class="line">● iptables.service - IPv4 firewall with iptables</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/iptables.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">[root@rocky ~]# systemctl status firewalld.service</span><br><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:firewalld(1)</span><br><span class="line">[root@rocky ~]# systemctl status nftables.service</span><br><span class="line">● nftables.service - Netfilter Tables</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/nftables.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:nft(8)</span><br><span class="line">[root@rocky ~]# </span><br></pre></td></tr></table></figure><h2 id="netfilter中五个勾子函数和报文流向"><a href="#netfilter中五个勾子函数和报文流向" class="headerlink" title="netfilter中五个勾子函数和报文流向"></a>netfilter中五个勾子函数和报文流向</h2><p>Netfilter在内核中选取五个位置放了五个hook(勾子) function(INPUT、OUTPUT、FORWARD、<br>PREROUTING、POSTROUTING)，而这五个hook function向用户开放，用户可以通过一个命令工具<br>（iptables）向其写入规则。</p><p>由信息过滤表（table）组成，包含控制IP包处理的规则集（rules），规则被分组放在链（chain）上。</p><p> <img src="/../image.assets/1664336861788.png" alt="1664336861788"> </p><p>提示：从 Linux kernel 4.2 版以后，Netfilter 在prerouting 前加了一个 ingress 勾子函数。可以使用这<br>个新的入口挂钩来过滤来自第2层的流量，这个新挂钩比预路由要早，基本上是 tc 命令（流量控制工<br>具）的替代品。<br><strong>三种报文流向</strong></p><ul><li>流入本机：PREROUTING –&gt; INPUT–&gt;用户空间进程</li><li>流出本机：用户空间进程 –&gt;OUTPUT–&gt; POSTROUTING</li><li>转发：PREROUTING –&gt; FORWARD –&gt; POSTROUTING</li></ul><h2 id="iptables组成"><a href="#iptables组成" class="headerlink" title="iptables组成"></a>iptables组成</h2><p>iptables由五个表table和五个链chain以及一些规则组成</p><p> <img src="/../image.assets/1664337377531.png" alt="1664337377531"> </p><p><strong>链 chain：</strong></p><ul><li>内置链：每个内置链对应于一个钩子函数</li><li>自定义链：用于对内置链进行扩展或补充，可实现更灵活的规则组织管理机制；只有Hook钩子调<br>用自定义链时，才生效</li></ul><p><strong>五个内置链chain:</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INPUT,OUTPUT,FORWARD,PREROUTING,POSTROUTING</span><br></pre></td></tr></table></figure><p><strong>五个表：filter、nat、mangle、raw、security</strong></p><ul><li>filter：过滤规则表，根据预定义的规则过滤符合条件的数据包,默认表</li><li>nat：network address translation 地址转换规则表</li><li>mangle：修改数据标记位规则表</li><li>raw：关闭启用的连接跟踪机制，加快封包穿越防火墙速度</li><li>security：用于强制访问控制（MAC）网络规则，由Linux安全模块（如SELinux）实现<br>优先级由高到低的顺序为：</li></ul><p><strong>优先级由高到低的顺序为</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">security --&gt;raw--&gt;mangle--&gt;nat--&gt;filter</span><br></pre></td></tr></table></figure><p><strong>表和链对应关系</strong></p><p> <img src="/../image.assets/1664338350371.png" alt="1664338350371"> </p><p><strong>数据包过滤匹配流程</strong></p><p> <img src="/../image.assets/1664338392568.png" alt="1664338392568"> </p><p><strong>内核中数据包的传输过程</strong></p><ul><li>当一个数据包进入网卡时，数据包首先进入PREROUTING链，内核根据数据包目的IP判断是否需要<br>转送出去</li><li>如果数据包是进入本机的，数据包就会沿着图向下移动，到达INPUT链。数据包到达INPUT链后，<br>任何进程都会收到它。本机上运行的程序可以发送数据包，这些数据包经过OUTPUT链，然后到达<br>POSTROUTING链输出</li><li>如果数据包是要转发出去的，且内核允许转发，数据包就会向右移动，经过FORWARD链，然后到<br>达POSTROUTING链输出</li></ul><p><strong>范例</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky ~]# iptables -vnL -t filter </span><br><span class="line">Chain INPUT (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt in     out     source               destination         </span><br><span class="line">  168 10248 ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            state RELATED,ESTABLISHED</span><br><span class="line">    0     0 ACCEPT     icmp --  *      *       0.0.0.0/0            0.0.0.0/0           </span><br><span class="line">    0     0 ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0           </span><br><span class="line">    0     0 ACCEPT     tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            state NEW tcp dpt:22</span><br><span class="line">    0     0 REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            reject-with icmp-host-prohibited</span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)</span><br><span class="line"> pkts bytes target     prot opt in     out     source               destination         </span><br><span class="line">    0     0 REJECT     all  --  *      *       0.0.0.0/0            0.0.0.0/0            reject-with icmp-host-prohibited</span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT 101 packets, 11034 bytes)</span><br><span class="line"> pkts bytes target     prot opt in     out     source               destination         </span><br><span class="line">[root@rocky ~]# </span><br></pre></td></tr></table></figure><p><strong>CentOS 6 nat表不支持INPUT链</strong></p><h1 id="iptables-1"><a href="#iptables-1" class="headerlink" title="iptables"></a>iptables</h1><h2 id="iptables规则说明"><a href="#iptables规则说明" class="headerlink" title="iptables规则说明"></a>iptables规则说明</h2><h3 id="iptables规则组成"><a href="#iptables规则组成" class="headerlink" title="iptables规则组成"></a>iptables规则组成</h3><p>规则rule：根据规则的匹配条件尝试匹配报文，对匹配成功的报文根据规则定义的处理动作作出处理，<br>规则在链接上的次序即为其检查时的生效次序<br>匹配条件：默认为与条件，同时满足<br>基本匹配：IP，端口，TCP的Flags（SYN,ACK等）<br>扩展匹配：通过复杂高级功能匹配<br>处理动作：称为target，跳转目标</p><ul><li>内建处理动作：ACCEPT,DROP,REJECT,SNAT,DNAT,MASQUERADE,MARK,LOG…</li><li>自定义处理动作：自定义chain，利用分类管理复杂情形</li></ul><p>规则要添加在链上，才生效；添加在自定义链上不会自动生效<br>白名单:只有指定的特定主机可以访问,其它全拒绝<br>黑名单:只有指定的特定主机拒绝访问,其它全允许,默认方式</p><h3 id="iptables规则添加时考量点"><a href="#iptables规则添加时考量点" class="headerlink" title="iptables规则添加时考量点"></a>iptables规则添加时考量点</h3><ul><li>要实现哪种功能：判断添加在哪张表上</li><li>报文流经的路径：判断添加在哪个链上</li><li>报文的流向：判断源和目的</li><li>匹配规则：业务需要</li></ul><h2 id="iptables用法说明"><a href="#iptables用法说明" class="headerlink" title="iptables用法说明"></a>iptables用法说明</h2><p>帮助：man 8 iptables<br>格式：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables [-t table] &#123;-A|-C|-D&#125; chain rule-specification</span><br></pre></td></tr></table></figure><p><strong>范例：filter表中INPUT规则</strong></p><p> <img src="/../image.assets/1664348845247.png" alt="1664348845247"> </p><p><strong>iptables命令格式详解</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables [-t table] SUBCOMMAND chain [-m matchname [per-match-options]]</span><br><span class="line">-j targetname [per-target-options]</span><br></pre></td></tr></table></figure><p>1、-t table：指定表<br>raw, mangle, nat, [filter]默认<br>2、SUBCOMMAND：子命令<br>链管理类：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-N：new, 自定义一条新的规则链</span><br><span class="line">-E：重命名自定义链；引用计数不为0的自定义链不能够被重命名，也不能被删除</span><br><span class="line">-X：delete，删除自定义的空的规则链</span><br><span class="line">-P：Policy，设置默认策略；对filter表中的链而言，其默认策略有：ACCEPT：接受, DROP：丢弃</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 定义新的规则链</span><br><span class="line">[root@rocky ~]# iptables -N web_chain</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS服务</title>
      <link href="/2022/09/22/DNS/"/>
      <url>/2022/09/22/DNS/</url>
      
        <content type="html"><![CDATA[<p class="note note-success"> DNS一般指域名系统。 域名系统（英文：Domain Name System，缩写：DNS）是互联网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用UDP端口53 </p><span id="more"></span>  <h1 id="名字解析介绍和DNS"><a href="#名字解析介绍和DNS" class="headerlink" title="名字解析介绍和DNS"></a>名字解析介绍和DNS</h1><h2 id="DNS服务工作原理"><a href="#DNS服务工作原理" class="headerlink" title="DNS服务工作原理"></a>DNS服务工作原理</h2><p> <img src="/../image.assets/1664088991760.png" alt="1664088991760"> </p><h2 id="DNS查询类型"><a href="#DNS查询类型" class="headerlink" title="DNS查询类型"></a>DNS查询类型</h2><p> <img src="/../image.assets/1664089216470.png" alt="1664089216470"> </p><ul><li>递归查询：<br>是指DNS服务器在收到用户发起的请求时，必须向用户返回一个准确的查询结果。如果DNS服务器<br>本地没有存储与之对应的信息，则该服务器需要询问其他服务器，并将返回的查询结构提交给用<br>户。<br>一般客户机和本地DNS服务器之间属于递归查询，即当客户机向DNS服务器发出请求后,若DNS服<br>务器本身不能解析，则会向另外的DNS服务器发出查询请求，得到最终的肯定或否定的结果后转交<br>给客户机。此查询的源和目标保持不变,为了查询结果只需要发起一次查询<br>递归算法:客户端向LocalDNS发起域名查询–&gt;localDNS不知道域名对应的IP–&gt;但它知道谁知道-&gt;他<br>代为帮客户端去查找–&gt;最后再返回最终结果</li><li>迭代查询：<br>是指DNS服务器在收到用户发起的请求时，并不直接回复查询结果，而是告诉另一台DNS服务器的<br>地址，用户再向这台DNS服务器提交请求，这样依次反复，直到返回查询结果。<br>一般情况下(有例外)本地的DNS服务器向其它DNS服务器的查询属于迭代查询,如：若对方不能返回<br>权威的结果，则它会向下一个DNS服务器(参考前一个DNS服务器返回的结果)再次发起进行查询，<br>直到返回查询的结果为止。此查询的源不变,但查询的目标不断变化,为查询结果一般需要发起多次<br>查询</li><li>迭代算法︰<br>客户端向LocalDNS发起域名查询–&gt;localDNS不知道域名对应的IP–&gt;但它知道谁知道并<br>推荐客户端应该找谁–&gt;客户端自己去找它</li><li>DNS缓存:<br>DNS缓存是将解析数据存储在靠近发起请求的客户端的位置，也可以说DNS数据是可以缓存在任意<br>位置，最终目的是以此减少递归查询过程，可以更快的让用户获得请求结果。</li></ul><h2 id="解析类型"><a href="#解析类型" class="headerlink" title="解析类型"></a>解析类型</h2><ul><li>FQDN –&gt; IP 正向解析  </li><li>IP –&gt; FQDN 反向解析<br><strong>注意：正反向解析是两个不同的名称空间，是两棵不同的解析树</strong></li></ul><h2 id="完整查询流程"><a href="#完整查询流程" class="headerlink" title="完整查询流程"></a>完整查询流程</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Client --&gt;hosts文件 --&gt; Client DNS Service Local Cache --&gt; DNS Server (recursion递</span><br><span class="line">归) --&gt; DNS Server Cache --&gt;DNS iteration(迭代) --&gt; 根--&gt; 顶级域名DNS--&gt;二级域名DNS…</span><br></pre></td></tr></table></figure><h1 id="DNS服务相关概念和技术"><a href="#DNS服务相关概念和技术" class="headerlink" title="DNS服务相关概念和技术"></a>DNS服务相关概念和技术</h1><h2 id="各种资源记录"><a href="#各种资源记录" class="headerlink" title="各种资源记录"></a>各种资源记录</h2><p>区域解析库：由众多资源记录RR(Resource Record)组成<br>记录类型：A, AAAA, PTR, SOA, NS, CNAME, MX</p><ul><li>SOA：Start Of Authority，起始授权记录；一个区域解析库有且仅能有一个SOA记录，必须位于解析库的第一条记录  </li><li>A：internet Address，作用，FQDN –&gt; IP  </li><li>AAAA：FQDN –&gt; IPv6  </li><li>PTR：PoinTeR，IP –&gt; FQDN  </li><li>NS：Name Server，专用于标明当前区域的DNS服务器  </li><li>CNAME ： Canonical Name，别名记录  </li><li>MX：Mail eXchanger，邮件交换器  </li><li>TXT：对域名进行标识和说明的一种方式，一般做验证记录时会使用此项，如：SPF（反垃圾邮<br>件）记录，https验证等，如下示例：  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_dnsauth TXT 2012011200000051qgs69bwoh4h6nht4n1h0lr038x</span><br></pre></td></tr></table></figure></li></ul><h3 id="SOA记录"><a href="#SOA记录" class="headerlink" title="SOA记录"></a>SOA记录</h3><p>name: 当前区域的名字，例如”magedu.org.”<br>value: 有多部分组成<br>注意：</p><ol><li>当前区域的主DNS服务器的FQDN，也可以使用当前区域的名字，只是注释功能，可以不需要配置<br>对应的NS记录和A记录</li><li>当前区域管理员的邮箱地址；但地址中不能使用@符号，一般用.替换，例如：admin.magedu.org</li><li>主从服务区域传输相关定义以及否定的答案的统一的TTL</li></ol><p><strong>范例</strong>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">magedu.org. 86400 IN SOA ns.magedu.org. nsadmin.magedu.org. (</span><br><span class="line">2015042201 ;序列号</span><br><span class="line">2H ;刷新时间</span><br><span class="line">10M ;重试时间</span><br><span class="line">1W ;过期时间</span><br><span class="line">1D ;否定答案的TTL值</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="NS记录"><a href="#NS记录" class="headerlink" title="NS记录"></a>NS记录</h3><p>name: 当前区域的名字<br>value: 当前区域的某DNS服务器的名字，例如: ns.magedu.org.<br>注意：</p><ol><li>相邻的两个资源记录的name相同时，后续的可省略</li><li>对NS记录而言，任何一个ns记录后面的服务器名字，都应该在后续有一个A记录</li><li>一个区域可以有多个NS记录<br>范例：  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">magedu.org. IN NS ns1.magedu.org.</span><br><span class="line">magedu.org. IN NS ns2.magedu.org.</span><br></pre></td></tr></table></figure></li></ol><h3 id="MX记录"><a href="#MX记录" class="headerlink" title="MX记录"></a>MX记录</h3><p>name: 当前区域的名字<br>value: 当前区域的某邮件服务器(smtp服务器)的主机名<br><strong>注意：</strong>  </p><ol><li>一个区域内，MX记录可有多个；但每个记录的value之前应该有一个数字(0-99)，表示此服务器的优先级；数字越小优先级越高  </li><li>对MX记录而言，任何一个MX记录后面的服务器名字，都应该在后续有一个A记录<br>范例：<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">magedu.org. IN MX 10 mx1.magedu.org.</span><br><span class="line">IN MX 20 mx2.magedu.org.</span><br><span class="line">mx1 A 10.0.0.100</span><br><span class="line">mx2 A 10.0.0.200  </span><br></pre></td></tr></table></figure></li></ol><h3 id="A记录"><a href="#A记录" class="headerlink" title="A记录"></a>A记录</h3><p>name: 某主机的FQDN，例如：<a href="http://www.magedu.org/">www.magedu.org</a>.<br>value: 主机名对应主机的IP地址<br>避免用户写错名称时给错误答案，可通过泛域名解析进行解析至某特定地址<br>范例：  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">www.magedu.org. IN A 1.1.1.1</span><br><span class="line">www.magedu.org. IN A 2.2.2.2</span><br><span class="line">mx1.magedu.org. IN A 3.3.3.3</span><br><span class="line">mx2.magedu.org. IN A 4.4.4.4</span><br><span class="line">$GENERATE 1-254 HOST$ IN A 1.2.3.$</span><br><span class="line">*.magedu.org. IN A 5.5.5.5</span><br><span class="line">magedu.org. IN A 6.6.6.6</span><br><span class="line">#注意：如果有和DNS的IP相同的多个同名的A记录，优先返回DNS的本机IP  </span><br></pre></td></tr></table></figure><h3 id="AAAA记录"><a href="#AAAA记录" class="headerlink" title="AAAA记录"></a>AAAA记录</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name: FQDN  </span><br><span class="line">value: IPv6  </span><br></pre></td></tr></table></figure><h3 id="PTR记录"><a href="#PTR记录" class="headerlink" title="PTR记录"></a>PTR记录</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name: IP，有特定格式，把IP地址反过来写，1.2.3.4，要写作4.3.2.1；而有特定后缀：in-</span><br><span class="line">addr.arpa.，所以完整写法为：4.3.2.1.in-addr.arpa.</span><br><span class="line">value: FQDN</span><br></pre></td></tr></table></figure><p>注意：网络地址及后缀可省略；主机地址依然需要反着写<br>例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4.3.2.1.in-addr.arpa. IN PTR www.magedu.org.</span><br><span class="line">#如1.2.3为网络地址，可简写成：</span><br><span class="line">4 IN PTR www.magedu.org.</span><br></pre></td></tr></table></figure><h3 id="CNAME别名记录"><a href="#CNAME别名记录" class="headerlink" title="CNAME别名记录"></a>CNAME别名记录</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name: 别名的FQDN</span><br><span class="line">value: 真正名字的FQDN  </span><br></pre></td></tr></table></figure><p><strong>例如</strong> </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.magedu.org. IN CNAME websrv.magedu.org.</span><br></pre></td></tr></table></figure><h2 id="DNS软件bind"><a href="#DNS软件bind" class="headerlink" title="DNS软件bind"></a>DNS软件bind</h2><p>DNS服务器软件：bind，powerdns，dnsmasq，unbound，coredns  </p><h3 id="bind相关程序包"><a href="#bind相关程序包" class="headerlink" title="bind相关程序包"></a>bind相关程序包</h3><p>yum list all bind* </p><p>bind：服务器<br>bind-utils: 客户端<br>bind-libs：相关库,依赖关系自动安装<br>bind-chroot: 安全包，将dns相关文件放至 &#x2F;var&#x2F;named&#x2F;chroot&#x2F;</p><p><strong>范例：安装bind软件</strong>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#dnf -y install bind bind-utils</span><br><span class="line">[root@ubuntu2004 ~]#apt -y install bind9 bind9-utils</span><br></pre></td></tr></table></figure><h3 id="bind包相关文件"><a href="#bind包相关文件" class="headerlink" title="bind包相关文件"></a>bind包相关文件</h3><p>BIND主程序：&#x2F;usr&#x2F;sbin&#x2F;named<br>服务脚本和Unit名称：&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;named，&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;named.service<br>主配置文件：&#x2F;etc&#x2F;named.conf, &#x2F;etc&#x2F;named.rfc1912.zones, &#x2F;etc&#x2F;rndc.key<br>管理工具：&#x2F;usr&#x2F;sbin&#x2F;rndc：remote name domain controller，默认与bind安装在同一主机，且<br>只能通过127.0.0.1连接named进程，提供辅助性的管理功能；953&#x2F;tcp<br>解析库文件：&#x2F;var&#x2F;named&#x2F;ZONE_NAME.ZONE<br>注意：<br>(1) 一台物理服务器可同时为多个区域提供解析<br>(2) 必须要有根区域文件；named.ca<br>(3) 应该有两个（如果包括ipv6的，应该更多）实现localhost和本地回环地址的解析库</p><h3 id="主配置文件"><a href="#主配置文件" class="headerlink" title="主配置文件"></a>主配置文件</h3><ul><li>全局配置：options {};</li><li>日志子系统配置：logging {};</li><li>区域定义：本机能够为哪些zone进行解析，就要定义哪些zone<br>zone “ZONE_NAME” IN {};<br><strong>注意：</strong></li><li>任何服务程序如果期望其能够通过网络被其它主机访问，至少应该监听在一个能与外部主机通信的<br>IP地址上 </li><li>缓存名称服务器的配置：监听外部地址即可  </li><li>dnssec: 建议关闭dnssec，设为no</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间同步机制和架构</title>
      <link href="/2022/09/17/TimeSynchronization/"/>
      <url>/2022/09/17/TimeSynchronization/</url>
      
        <content type="html"><![CDATA[<p class="note note-success">多主机协作工作时，各个主机的时间同步很重要，时间不一致会造成很多重要应用的故障，如：加密协议，日志，集群等， 利用NTP（Network Time Protocol） 协议使网络中的各个计算机时间达到同步。目前NTP协议属于运维基础架构中必备的基本服务之一</p><span id="more"></span><h1 id="时间同步服务"><a href="#时间同步服务" class="headerlink" title="时间同步服务"></a>时间同步服务</h1><p>时间同步软件  </p><ul><li>ntpdate</li><li>chrony</li></ul><p><strong>ntp:</strong></p><p>将系统时钟和世界协调时钟UTC同步，精度在局域网内可达0.1ms，在互联网上绝大多数的地方精度可以<br>达到1-50ms<br>项目官网：<a href="http://www.ntp.org/">http://www.ntp.org</a>  </p><p><strong>范例：ubuntu同步时间</strong></p><ul><li>安装ntpdate</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install ntpdate</span><br></pre></td></tr></table></figure><ul><li>同步时间</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># ntp.aliyun.com阿里云时间同步服务器地址</span><br><span class="line">ntpdate ntp.aliyun.com</span><br></pre></td></tr></table></figure><p>扩展：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">阿里云公共NTP服务器</span><br><span class="line">Unix/linux类：ntp.aliyun.com，ntp1-7.aliyun.com</span><br><span class="line">windows类： time.pool.aliyun.com</span><br><span class="line">腾讯公共NTP</span><br><span class="line">time1-5.cloud.tencent.com</span><br><span class="line">大学ntp服务</span><br><span class="line">s1a.time.edu.cn 北京邮电大学</span><br><span class="line">s1b.time.edu.cn 清华大学</span><br><span class="line">s1c.time.edu.cn 北京大学</span><br><span class="line">国家授时中心服务器：210.72.145.44</span><br><span class="line">美国标准技术院: time.nist.gov</span><br></pre></td></tr></table></figure><p  class="note note-warning" >注意：CentOS 8上已经没有ntpdate命令，因此该种时间同步方式不建议使用</p>**chrony：**实现NTP协议的的自由软件。可使系统时钟与NTP服务器，参考时钟（例如GPS接收器）以及使用手表和键盘的手动输入进行同步。还可以作为NTPv4（RFC 5905）服务器和对等体运行，为网络中的计算机提供时间服务。设计用于在各种条件下良好运行，包括间歇性和高度拥挤的网络连接，温度变化（计算机时钟对温度敏感），以及不能连续运行或在虚拟机上运行的系统。通过Internet同步的两台机器之间的典型精度在几毫秒之内，在LAN上，精度通常为几十微秒。利用硬件时间戳或硬件参考时钟，可实现亚微秒的精度  <h1 id="chrony"><a href="#chrony" class="headerlink" title="chrony"></a>chrony</h1><h2 id="chrony介绍"><a href="#chrony介绍" class="headerlink" title="chrony介绍"></a>chrony介绍</h2><p>chrony 的优势：  </p><ul><li>更快的同步只需要数分钟而非数小时时间，从而最大程度减少了时间和频率误差，对于并非全天<br>24 小时运行的虚拟计算机而言非常有用  </li><li>能够更好地响应时钟频率的快速变化，对于具备不稳定时钟的虚拟机或导致时钟频率发生变化的节<br>能技术而言非常有用  </li><li>在初始同步后，它不会停止时钟，以防对需要系统时间保持单调的应用程序造成影响  </li><li>在应对临时非对称延迟时（例如，在大规模下载造成链接饱和时）提供了更好的稳定性  </li><li>无需对服务器进行定期轮询，因此具备间歇性网络连接的系统仍然可以快速同步时钟<br>chrony官网：<a href="https://chrony.tuxfamily.org/">https://chrony.tuxfamily.org</a><br>chrony官方文档：<a href="https://chrony.tuxfamily.org/documentation.html">https://chrony.tuxfamily.org/documentation.html</a></li></ul><h2 id="chrony-文件组成"><a href="#chrony-文件组成" class="headerlink" title="chrony 文件组成"></a>chrony 文件组成</h2><p>包：chrony<br>两个主要程序：chronyd和chronyc  </p><ul><li>chronyd：后台运行的守护进程，用于调整内核中运行的系统时钟和时钟服务器同步。它确定计算<br>机增减时间的比率，并对此进行补偿  </li><li>chronyc：命令行用户工具，用于监控性能并进行多样化的配置。它可以在chronyd实例控制的计<br>算机上工作，也可在一台不同的远程计算机上工作<br>服务unit 文件： &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;chronyd.service<br>监听端口： 服务端: 123&#x2F;udp,客户端: 323&#x2F;udp<br>配置文件： &#x2F;etc&#x2F;chrony.conf</li></ul><h2 id="配置文件chrony-conf"><a href="#配置文件chrony-conf" class="headerlink" title="配置文件chrony.conf"></a>配置文件chrony.conf</h2><p>官网文档: <a href="https://chrony.tuxfamily.org/doc/3.5/chrony.conf.html">https://chrony.tuxfamily.org/doc/3.5/chrony.conf.html</a>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server #可用于时钟服务器，iburst 选项当服务器可达时，发送一个八个数据包而不是通常的一个数据</span><br><span class="line">包。 包间隔通常为2秒,可加快初始同步速度</span><br><span class="line">pool #该指令的语法与server 指令的语法相似，不同之处在于它用于指定NTP服务器池而不是单个</span><br><span class="line">NTP服务器。池名称应解析为随时间可能会变化的多个地址</span><br><span class="line">driftfile #根据实际时间计算出计算机增减时间的比率，将它记录到一个文件中，会在重启后为系统时钟作</span><br><span class="line">出补偿</span><br><span class="line">rtcsync #启用内核模式，系统时间每11分钟会拷贝到实时时钟（RTC）</span><br><span class="line">allow / deny #指定一台主机、子网，或者网络以允许或拒绝访问本服务器</span><br><span class="line">cmdallow / cmddeny #可以指定哪台主机可以通过chronyd使用控制命令</span><br><span class="line">bindcmdaddress #允许chronyd监听哪个接口来接收由chronyc执行的命令</span><br><span class="line">makestep # 通常chronyd将根据需求通过减慢或加速时钟，使得系统逐步纠正所有时间偏差。在某些特定</span><br><span class="line">情况下，系统时钟可能会漂移过快，导致该调整过程消耗很长的时间来纠正系统时钟。该指令强制chronyd在</span><br><span class="line">调整期大于某个阀值时调整系统时钟</span><br><span class="line">local stratum 10 #即使server指令中时间服务器不可用，也允许将本地时间作为标准时间授时给其它</span><br><span class="line">客户端</span><br></pre></td></tr></table></figure><h2 id="NTP-客户端工具"><a href="#NTP-客户端工具" class="headerlink" title="NTP 客户端工具"></a>NTP 客户端工具</h2><p>chronyc 可以运行在交互式和非交互式两种方式，支持以下子命令  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">help 命令可以查看更多chronyc的交互命令</span><br><span class="line">accheck 检查是否对特定主机可访问当前服务器</span><br><span class="line">activity 显示有多少NTP源在线/离线</span><br><span class="line">sources [-v] 显示当前时间源的同步信息</span><br><span class="line">sourcestats [-v]显示当前时间源的同步统计信息</span><br><span class="line">add server 手动添加一台新的NTP服务器</span><br><span class="line">clients 报告已访问本服务器的客户端列表</span><br><span class="line">delete 手动移除NTP服务器或对等服务器</span><br><span class="line">settime 手动设置守护进程时间</span><br><span class="line">tracking 显示系统时间信息</span><br></pre></td></tr></table></figure><h2 id="时间工具"><a href="#时间工具" class="headerlink" title="时间工具"></a>时间工具</h2><ul><li>timedatectl 时间和时区管理</li></ul><p><strong>查看日期时间和时区以及NTP状态</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu2004:~# timedatectl</span><br><span class="line">               Local time: Sat 2022-09-17 11:49:00 UTC</span><br><span class="line">           Universal time: Sat 2022-09-17 11:49:00 UTC</span><br><span class="line">                 RTC time: Sat 2022-09-17 11:49:00    </span><br><span class="line">                Time zone: Etc/UTC (UTC, +0000)       </span><br><span class="line">System clock synchronized: yes                        </span><br><span class="line">              NTP service: active                     </span><br><span class="line">          RTC in local TZ: no                         </span><br><span class="line">root@ubuntu2004:~# </span><br></pre></td></tr></table></figure><p><strong>查看时区列表</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu2004:~# </span><br><span class="line">root@ubuntu2004:~# timedatectl list-timezones</span><br><span class="line">Africa/Abidjan</span><br><span class="line">Africa/Accra</span><br><span class="line">Africa/Addis_Ababa</span><br><span class="line">Africa/Algiers</span><br><span class="line">Africa/Asmara</span><br><span class="line">Africa/Asmera</span><br><span class="line">Africa/Bamako</span><br><span class="line">Africa/Bangui</span><br><span class="line">Africa/Banjul</span><br><span class="line">Africa/Bissau</span><br><span class="line">Africa/Blantyre</span><br><span class="line">Africa/Brazzaville</span><br><span class="line">Africa/Bujumbura</span><br><span class="line">Africa/Cairo</span><br><span class="line">Africa/Casablanca</span><br><span class="line">Africa/Ceuta</span><br><span class="line">.........</span><br><span class="line">.........</span><br></pre></td></tr></table></figure><p><strong>修改时区</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 修改时区亚洲上海</span><br><span class="line">root@ubuntu2004:~# timedatectl set-timezone Asia/Shanghai</span><br><span class="line">root@ubuntu2004:~# </span><br></pre></td></tr></table></figure><p><strong>修改时区方式2</strong>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#修改时区</span><br><span class="line">root@ubuntu2004:~# rm -f /etc/localtime</span><br><span class="line">root@ubuntu2004:~# ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line">#修改日期时间：</span><br><span class="line">timedatectl set-time &quot;2017-01-23 10:30:00&quot;</span><br><span class="line">#开启NTP：</span><br><span class="line">timedatectl set-ntp true/false</span><br></pre></td></tr></table></figure><p><strong>修改时间</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#修改日期时间：</span><br><span class="line">timedatectl set-time &quot;2017-01-23 10:30:00&quot;  </span><br><span class="line"></span><br><span class="line">#需要修改时间为24小时，可以修改/etc/default/locale，默认没有LC_TIME这个变量，在文件中增加一行：</span><br><span class="line">LC_TIME=en_DK.UTF-8  </span><br><span class="line"></span><br><span class="line">#开启NTP：</span><br><span class="line">timedatectl set-ntp true/false</span><br></pre></td></tr></table></figure><h2 id="实战：实现私有的时间服务器"><a href="#实战：实现私有的时间服务器" class="headerlink" title="实战：实现私有的时间服务器"></a>实战：实现私有的时间服务器</h2><p> <img src="/../image.assets/1663418081035.png" alt="1663418081035"> </p><ul><li>安装chrony</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># centos系统检查是否安装</span><br><span class="line">rpm -q chrony</span><br><span class="line"></span><br><span class="line"># 安装</span><br><span class="line">yum install chrony</span><br><span class="line"></span><br><span class="line"># 启动服务  </span><br><span class="line">systemctl start chronyd  </span><br><span class="line"></span><br><span class="line"># ubuntu系统上安装,ubuntu系统上安装完成后已经启动  </span><br><span class="line">apt install chrony</span><br></pre></td></tr></table></figure><ul><li>服务器端配置</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># IP:192.168.179.146作为时间同步服务器端，192.168.179.146的时间与阿里云时间同步器服务器同步</span><br><span class="line">[root@centos7 ~]# hostname -I</span><br><span class="line">192.168.179.146 </span><br><span class="line">[root@centos7 ~]#   </span><br><span class="line"></span><br><span class="line"># 修改192.168.179.146配置文件  /etc/chrony.conf</span><br><span class="line">server ntp.aliyun.com iburst</span><br><span class="line">server ntp1.aliyun.com iburst</span><br><span class="line">server ntp2.aliyun.com iburst</span><br></pre></td></tr></table></figure><p> <img src="/../image.assets/1663419170404.png" alt="1663419170404"> </p><p>allow 0.0.0.0&#x2F;0 #加此行,指定允许同步的网段</p><p> <img src="/../image.assets/1663419297813.png" alt="1663419297813"> </p><p>删除此行注释,当互联网无法连接,仍然可以为客户端提供时间同步服务 </p><p> <img src="/../image.assets/1663419361157.png" alt="1663419361157"> </p><p>重启chrony服务  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart chronyd</span><br></pre></td></tr></table></figure><p>服务启动后会打开端口123&#x2F;udp  </p><p> <img src="/../image.assets/1663419502330.png" alt="1663419502330"> </p><p>显示当前的时间源同步信息 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# chronyc sources -V</span><br><span class="line">210 Number of sources = 2</span><br><span class="line">MS Name/IP address         Stratum Poll Reach LastRx Last sample               </span><br><span class="line">===============================================================================</span><br><span class="line">^* 203.107.6.88                  2   6    37    58   -365us[-3079us] +/-   40ms</span><br><span class="line">^? 120.25.115.20                 2   7   110   123   -773us[-3488us] +/-   26ms</span><br><span class="line">[root@centos7 ~]# </span><br><span class="line"></span><br><span class="line"># *号表示当前同步的时间源地址</span><br></pre></td></tr></table></figure><p>客户端配置  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 客户端</span><br><span class="line">root@ubuntu2004:~# hostname -I</span><br><span class="line">192.168.179.147 </span><br><span class="line">root@ubuntu2004:~# </span><br><span class="line"></span><br><span class="line">#ubuntu系统配置文件与centos目录不一样</span><br><span class="line">root@ubuntu2004:~# vim /etc/chrony/chrony.conf</span><br></pre></td></tr></table></figure><p> <img src="/../image.assets/1663420018409.png" alt="1663420018409"> </p><p>重启chrony服务  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu2004:~# systemctl restart chronyd</span><br></pre></td></tr></table></figure><p>确认同步成功  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu2004:~# chronyc sources -V</span><br><span class="line">210 Number of sources = 1</span><br><span class="line">MS Name/IP address         Stratum Poll Reach LastRx Last sample               </span><br><span class="line">===============================================================================</span><br><span class="line">^* 192.168.179.146               3   6    17    44    +64us[ +218us] +/-   38ms</span><br><span class="line">root@ubuntu2004:~# </span><br><span class="line"></span><br><span class="line">#  ^* 192.168.179.146表示已经成功与192.168.179.146时间同步</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批量修改多台主机的root密码为随机密码</title>
      <link href="/2022/09/12/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%AF%86%E7%A0%81%E4%B8%BA%E9%9A%8F%E6%9C%BA%E5%AD%97%E7%AC%A6/"/>
      <url>/2022/09/12/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%AF%86%E7%A0%81%E4%B8%BA%E9%9A%8F%E6%9C%BA%E5%AD%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<p class= "note note-success">批量修改多台主机的root密码为随机密码<p/><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># 检查sshpass是否安装，没有安装则安装sshpass</span><br><span class="line">rpm -q sshpass &amp;&gt; /dev/null || yum install sshpass</span><br><span class="line"></span><br><span class="line"># 主机root用户密码</span><br><span class="line">export SSHPASS=123456</span><br><span class="line"></span><br><span class="line"># 主机地址</span><br><span class="line">NET=192.168.179</span><br><span class="line"></span><br><span class="line"># 主机地址</span><br><span class="line">for i in &#123;20..140&#125;;do</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">    # 生成随机密码</span><br><span class="line">    PASS=`openssl rand -base64 9`</span><br><span class="line">    # 链接远程主机并修改root用户密码  StrictHostKeyChecking=no 跳过检查</span><br><span class="line">    sshpass -e ssh -o StrictHostKeyChecking=no $&#123;NET&#125;.$&#123;i&#125; &quot;echo root:$&#123;PASS&#125; | chpasswd &amp;&gt; /dev/null&quot;</span><br><span class="line">    # IP和密码重定向到文件中</span><br><span class="line">    echo $NET.$i:$PASS &gt;&gt; host.txt</span><br><span class="line"></span><br><span class="line">     &#125;&amp; # 后台运行</span><br><span class="line">done</span><br><span class="line">wait</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>sshpass使用帮助</strong> </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 data]# sshpass --help</span><br><span class="line">sshpass: invalid option -- &#x27;-&#x27;</span><br><span class="line">Usage: sshpass [-f|-d|-p|-e] [-hV] command parameters</span><br><span class="line">   -f filename   Take password to use from file</span><br><span class="line">   -d number     Use number as file descriptor for getting password</span><br><span class="line">   -p password   Provide password as argument (security unwise)</span><br><span class="line">   -e            Password is passed as env-var &quot;SSHPASS&quot;</span><br><span class="line">   With no parameters - password will be taken from stdin</span><br><span class="line"></span><br><span class="line">   -P prompt     Which string should sshpass search for to detect a password prompt</span><br><span class="line">   -v            Be verbose about what you&#x27;re doing</span><br><span class="line">   -h            Show help (this screen)</span><br><span class="line">   -V            Print version information</span><br><span class="line">At most one of -f, -d, -p or -e should be used</span><br><span class="line">[root@centos7 data]# </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> shell脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSH服务</title>
      <link href="/2022/09/12/ssh%E6%9C%8D%E5%8A%A1/"/>
      <url>/2022/09/12/ssh%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p class="note note-success">ssh: secure shell protocol, 22/tcp, 安全的远程登录，实现加密通信，代替传统的 telnet 协议</p><span id="more"></span><h1 id="ssh服务介绍"><a href="#ssh服务介绍" class="headerlink" title="ssh服务介绍"></a>ssh服务介绍</h1><p>ssh: secure shell protocol, 22&#x2F;tcp, 安全的远程登录，实现加密通信，代替传统的 telnet 协议<br><strong>具体的软件实现：</strong></p><ul><li>OpenSSH：ssh协议的开源实现，CentOS 默认安装</li><li>dropbear：另一个ssh协议的开源项目的实现</li></ul><p><strong>SSH 协议版本</strong></p><ul><li>v1：基于CRC-32做MAC，不安全；man-in-middle</li><li>v2：双方主机协议选择安全的MAC方式，基于DH算法做密钥交换，基于RSA或DSA实现身份认证</li></ul><h1 id="openssh-服务"><a href="#openssh-服务" class="headerlink" title="openssh 服务"></a>openssh 服务</h1><p>OpenSSH是SSH （Secure SHell） 协议的免费开源实现，一般在各种Linux版本中会默认安装，基于C&#x2F;S结构<br><strong>Openssh软件相关包：</strong></p><ul><li>openssh</li><li>openssh-clients</li><li>openssh-server</li></ul><h2 id="客户端-ssh命令"><a href="#客户端-ssh命令" class="headerlink" title="客户端 ssh命令"></a>客户端 ssh命令</h2><p>ssh命令是ssh客户端，允许实现对远程系统经验证地加密安全访问<br>当用户远程连接ssh服务器时，会复制ssh服务器&#x2F;etc&#x2F;ssh&#x2F;ssh_host*key.pub文件中的公钥到客户机的~&#x2F;.ssh&#x2F;know_hosts中。下次连接时，会自动匹配相对应的私钥，不能匹配，将拒绝连接<br> **ssh客户端配置文件： &#x2F;etc&#x2F;ssh&#x2F;ssh_config **<br>**主要配置:  **</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#StrictHostKeyChecking ask</span><br><span class="line">#首次登录不显示检查提示</span><br><span class="line">StrictHostKeyChecking no</span><br><span class="line"># IdentityFile ~/.ssh/id_rsa</span><br><span class="line"># IdentityFile ~/.ssh/id_dsa</span><br><span class="line"># IdentityFile ~/.ssh/id_ecdsa</span><br><span class="line"># IdentityFile ~/.ssh/id_ed25519</span><br><span class="line"># Port 22</span><br></pre></td></tr></table></figure><p><strong>范例：禁止首次连接的询问过程</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]#sed -i.bak &#x27;/StrictHostKeyChecking/s/.*/StrictHostKeyChecking</span><br><span class="line">no/&#x27; /etc/ssh/ssh_config</span><br></pre></td></tr></table></figure><p><strong>格式</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh [user@]host [COMMAND]</span><br><span class="line">ssh [-l user] host [COMMAND]</span><br></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-p port #远程服务器监听的端口</span><br><span class="line">-b #指定连接的源IP</span><br><span class="line">-v #调试模式</span><br><span class="line">-C #压缩方式</span><br><span class="line">-X #支持x11转发</span><br><span class="line">-t #强制伪tty分配，如：ssh -t remoteserver1 ssh -t remoteserver2 ssh</span><br><span class="line">remoteserver3</span><br><span class="line">-o option 如：-o StrictHostKeyChecking=no</span><br><span class="line">-i &lt;file&gt; #指定私钥文件路径，实现基于key验证，默认使用文件： ~/.ssh/id_dsa,</span><br><span class="line">~/.ssh/id_ecdsa, ~/.ssh/id_ed25519，~/.ssh/id_rsa等</span><br></pre></td></tr></table></figure><p><strong>在远程主机执行本地脚本</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky ~]# cat test.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">hostname -I</span><br><span class="line">[root@rocky ~]# ssh root@192.168.179.145 /bin/bash &lt;test.sh </span><br><span class="line">root@192.168.179.145&#x27;s password: </span><br><span class="line">192.168.179.145 </span><br><span class="line">[root@rocky ~]# </span><br></pre></td></tr></table></figure><h2 id="其他ssh客户端工具"><a href="#其他ssh客户端工具" class="headerlink" title="其他ssh客户端工具"></a>其他ssh客户端工具</h2><h3 id="scp命令"><a href="#scp命令" class="headerlink" title="scp命令"></a>scp命令</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp [options] SRC... DEST/</span><br></pre></td></tr></table></figure><p><strong>方式：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp [options] [user@]host:/sourcefile /destpath</span><br><span class="line">scp [options] /sourcefile [user@]host:/destpath</span><br><span class="line">scp [options] [user@]host1:/sourcetpath [user@]host2:/destpath</span><br></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-C 压缩数据流</span><br><span class="line">-r 递归复制</span><br><span class="line">-p 保持原文件的属性信息</span><br><span class="line">-q 静默模式</span><br><span class="line">-P PORT 指明remote host的监听的端口</span><br></pre></td></tr></table></figure><p><strong>范例:从远程机器复制文件到本地目录</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp root@10.10.10.10:/opt/soft/nginx-0.5.38.tar.gz /opt/soft/ </span><br></pre></td></tr></table></figure><p><strong>范例： 上传本地文件到远程机器指定目录</strong> </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /opt/soft/nginx-0.5.38.tar.gz root@10.10.10.10:/opt/soft/scptest</span><br></pre></td></tr></table></figure><p class="note note-success"> 注:复制目录加上选项-r</p>###  rsync命令<p>rsync工具可以基于ssh和rsync协议实现高效率的远程系统之间复制文件，使用安全的shell连接做为传输方式，比scp更快，基于增量数据同步，即只复制两方不同的文件，此工具来自于rsync包<br><strong>注意：通信两端主机都需要安装 rsync 软件</strong>  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rsync -av /etc server1:/tmp/ #复制目录和目录下文件</span><br><span class="line">rsync -av /etc/ server1:/tmp/ #只复制目录下文件</span><br></pre></td></tr></table></figure><p>** 常用选型**</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-n 模拟复制过程</span><br><span class="line">-v 显示详细过程</span><br><span class="line">-r 递归复制目录树</span><br><span class="line">-p 保留权限</span><br><span class="line">-t 保留修改时间戳</span><br><span class="line">-g 保留组信息</span><br><span class="line">-o 保留所有者信息</span><br><span class="line">-l 将软链接文件本身进行复制（默认）</span><br><span class="line">-L 将软链接文件指向的文件复制</span><br><span class="line">-u 如果接收者的文件比发送者的文件较新，将忽略同步</span><br><span class="line">-z 压缩，节约网络带宽</span><br><span class="line">-a 存档，相当于-rlptgoD，但不保留ACL（-A）和SELinux属性（-X）</span><br><span class="line">--delete 源数据删除，目标数据也自动同步删除</span><br><span class="line">--progress 显示进度</span><br><span class="line">--bwlimit=5120 #限速以KB为单位,5120表示5MB</span><br></pre></td></tr></table></figure><p><strong>范例:复制文件到远程主机目录下</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync ./test.sh root@192.168.179.145:/root</span><br></pre></td></tr></table></figure><h3 id="自动登录-ssh工具-sshpass"><a href="#自动登录-ssh工具-sshpass" class="headerlink" title="自动登录 ssh工具 sshpass"></a>自动登录 ssh工具 sshpass</h3><p>由EPEL源提供，ssh登陆不能在命令行中指定密码。sshpass的出现，解决了这一问题。sshpass用于非<br>交互SSH的密码验证，一般用在sh脚本中，无须再次输入密码（本机known_hosts文件中有的主机才能<br>生效）。它允许你用 -p 参数指定明文密码，然后直接登录远程服务器，它支持密码从命令行、文件、环<br>境变量中读取。<br><strong>格式：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sshpass [option] command parameters</span><br></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-p password #后跟密码它允许你用 -p 参数指定明文密码，然后直接登录远程服务器</span><br><span class="line">-f filename #后跟保存密码的文件名，密码是文件内容的第一行</span><br><span class="line">-e #将环境变量SSHPASS作为密码</span><br></pre></td></tr></table></figure><p><strong>范例:登录远程主机执行指定命令</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 检测sshpass是否安装</span><br><span class="line">[root@rocky ~]# rpm -q sshpass</span><br><span class="line">package sshpass is not installed</span><br><span class="line"># 安装sshpass</span><br><span class="line">[root@rocky ~]# yum install sshpass</span><br><span class="line"># 登录远程主机，首次登录不显示检查提示，执行hostname -I命令</span><br><span class="line">[root@rocky ~]# sshpass -p 123456 ssh -o StrictHostKeyChecking=no root@192.168.179.145 hostname -I</span><br><span class="line">192.168.179.145 </span><br><span class="line">[root@rocky ~]# </span><br></pre></td></tr></table></figure><h2 id="实现基于密钥登录方式验证"><a href="#实现基于密钥登录方式验证" class="headerlink" title="实现基于密钥登录方式验证"></a>实现基于密钥登录方式验证</h2><p><strong>在客户端生成密钥对</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa [-P &#x27;password&#x27;] [-f “~/.ssh/id_rsa&quot;]</span><br></pre></td></tr></table></figure><p><strong>把公钥文件传输至远程服务器对应用户的家目录</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id [-i [identity_file]] [user@]host</span><br></pre></td></tr></table></figure><p><strong>重设私钥口令：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -p</span><br></pre></td></tr></table></figure><p>在SecureCRT或Xshell实现基于key验证<br>在SecureCRT工具—&gt;创建公钥—&gt;生成Identity.pub文件<br>转化为openssh兼容格式（适合SecureCRT，Xshell不需要转化格式），并复制到需登录主机上相应文<br>件authorized_keys中,注意权限必须为600，在需登录的ssh主机上执行：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -i -f Identity.pub &gt;&gt; .ssh/authorized_keys</span><br></pre></td></tr></table></figure><p><strong>范例：实现基于 key 验证</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#ssh-keygen</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/root/.ssh/id_rsa): #回车，接受默认值</span><br><span class="line">Enter passphrase (empty for no passphrase): #回车，接受默认值，空密码</span><br><span class="line">Enter same passphrase again: #回车，接受默认值</span><br><span class="line">Your identification has been saved in /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:vpPtmqRv1llmoSvqT2Lx5C0LPGTE0pvdAqhDqlR5jLY root@centos8.wangxiaochun.com</span><br><span class="line">The key&#x27;s randomart image is:</span><br><span class="line">+---[RSA 3072]----+</span><br><span class="line">| |</span><br><span class="line">| ++ |</span><br><span class="line">| .=oo= |</span><br><span class="line">| oo.oo = . . |</span><br><span class="line">|..oE * S .. . |</span><br><span class="line">|o . + * o. + |</span><br><span class="line">|. * B+.* |</span><br><span class="line">| . B*== |</span><br><span class="line">| .+*B=. |</span><br><span class="line">+----[SHA256]-----+</span><br><span class="line">[root@centos8 ~]#ll .ssh/</span><br><span class="line">total 8</span><br><span class="line">-rw------- 1 root root 2622 May 22 09:51 id_rsa</span><br><span class="line">-rw-r--r-- 1 root root 583 May 22 09:51 id_rsa.pub</span><br><span class="line">[root@centos8 ~]#</span><br><span class="line"></span><br><span class="line"># 将本主机的公钥复制到远程主机的authorized_keys中</span><br><span class="line">[root@centos8 ~]#ssh-copy-id root@10.0.0.7</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed:</span><br><span class="line">&quot;/root/.ssh/id_rsa.pub&quot;</span><br><span class="line">The authenticity of host &#x27;10.0.0.7 (10.0.0.7)&#x27; can&#x27;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:s//WMgPVXmOjqfOg3f3X0nmaPZF+Fj5vPdWCnAzDcpU.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter</span><br><span class="line">out any that are already installed</span><br><span class="line">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are</span><br><span class="line">prompted now it is to install the new keys</span><br><span class="line">root@10.0.0.7&#x27;s password: #输入远程用户的密码</span><br><span class="line">Number of key(s) added: 1</span><br><span class="line">Now try logging into the machine, with: &quot;ssh &#x27;10.0.0.7&#x27;&quot;</span><br><span class="line">and check to make sure that only the key(s) you wanted were added.</span><br><span class="line"></span><br><span class="line">#对私钥加密</span><br><span class="line">[root@centos8 ~]#ssh-keygen -p</span><br></pre></td></tr></table></figure><h2 id="ssh服务配置"><a href="#ssh服务配置" class="headerlink" title="ssh服务配置"></a>ssh服务配置</h2><p><strong>服务器端：sshd<br>服务器端的配置文件: &#x2F;etc&#x2F;ssh&#x2F;sshd_config<br>服务器端的配置文件帮助：man 5 sshd_config<br>常用参数：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Port 22 #生产建议修改</span><br><span class="line">ListenAddress ip</span><br><span class="line">LoginGraceTime 2m</span><br><span class="line">PermitRootLogin yes #默认ubuntu不允许root远程ssh登录</span><br><span class="line">StrictModes yes #检查.ssh/文件的所有者，权限等</span><br><span class="line">MaxAuthTries 6 #pecifies the maximum number of authentication</span><br><span class="line">attempts permitted per connection. Once the number of failures reaches half this</span><br><span class="line">value, additional failures are logged. The default is 6.</span><br><span class="line">MaxSessions 10 #同一个连接最大会话</span><br><span class="line">PubkeyAuthentication yes #基于key验证</span><br><span class="line">PermitEmptyPasswords no #空密码连接</span><br><span class="line">PasswordAuthentication yes #基于用户名和密码连接</span><br><span class="line">GatewayPorts no</span><br><span class="line">ClientAliveInterval 10 #单位:秒</span><br><span class="line">ClientAliveCountMax 3 #默认3</span><br><span class="line">UseDNS yes #提高速度可改为no</span><br><span class="line">GSSAPIAuthentication yes #提高速度可改为no</span><br><span class="line">MaxStartups #未认证连接最大值，默认值10</span><br><span class="line">Banner /path/file</span><br><span class="line">#以下可以限制可登录用户的办法：</span><br><span class="line">AllowUsers user1 user2 user3</span><br><span class="line">DenyUsers user1 user2 user3</span><br><span class="line">AllowGroups g1 g2</span><br><span class="line">DenyGroups g1 g2</span><br></pre></td></tr></table></figure><p><strong>范例：设置 ssh 空闲60s 自动注销</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Vim /etc/ssh/sshd_config</span><br><span class="line">ClientAliveInterval 60</span><br><span class="line">ClientAliveCountMax 0</span><br><span class="line">Service sshd restart</span><br><span class="line">#注意：新开一个连接才有效</span><br></pre></td></tr></table></figure><p><strong>范例：解决ssh登录缓慢的问题</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line">UseDNS no</span><br><span class="line">GSSAPIAuthentication no</span><br><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rocky上实现私有CA和证书申请</title>
      <link href="/2022/09/11/Rocky%E4%B8%8A%E5%AE%9E%E7%8E%B0%E7%A7%81%E6%9C%89CA%E5%92%8C%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/"/>
      <url>/2022/09/11/Rocky%E4%B8%8A%E5%AE%9E%E7%8E%B0%E7%A7%81%E6%9C%89CA%E5%92%8C%E8%AF%81%E4%B9%A6%E7%94%B3%E8%AF%B7/</url>
      
        <content type="html"><![CDATA[<p class= "note note-success"> OpenSSL计划在1998年开始，其目标是发明一套自由的加密工具，在互联网上使用。OpenSSL以Eric Young以及Tim Hudson两人开发的SSLeay为基础，随着两人前往RSA公司任职，SSLeay在1998年12月停止开发。因此在1998年12月，社群另外分支出OpenSSL，继续开发下去</p><span id="more"></span>  <h1 id="在rocky上实现私有CA和证书申请"><a href="#在rocky上实现私有CA和证书申请" class="headerlink" title="在rocky上实现私有CA和证书申请"></a>在rocky上实现私有CA和证书申请</h1><ul><li><strong>创建CA相关目录和文件&#x2F;etc&#x2F;pki&#x2F;CA</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky pki]# mkdir -pv /etc/pki/CA/&#123;certs,crl,newcerts,private&#125;</span><br><span class="line">mkdir: created directory &#x27;/etc/pki/CA&#x27;</span><br><span class="line">mkdir: created directory &#x27;/etc/pki/CA/certs&#x27;</span><br><span class="line">mkdir: created directory &#x27;/etc/pki/CA/crl&#x27;</span><br><span class="line">mkdir: created directory &#x27;/etc/pki/CA/newcerts&#x27;</span><br><span class="line">mkdir: created directory &#x27;/etc/pki/CA/private&#x27;</span><br><span class="line">[root@rocky pki]#</span><br></pre></td></tr></table></figure><ul><li><strong>创建index.txt文件(&#x2F;etc&#x2F;pki&#x2F;CA目录下)</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky CA]# touch index.txt</span><br><span class="line"></span><br><span class="line">#指定第一个颁发证书的序列号，为16进制数</span><br><span class="line">[root@rocky CA]# echo 01 &gt; /etc/pki/CA/serial</span><br><span class="line">0F /etc/pki/CA/certs</span><br><span class="line">[root@rocky CA]# </span><br><span class="line"></span><br><span class="line">[root@rocky CA]# tree</span><br><span class="line">.</span><br><span class="line">├── certs</span><br><span class="line">├── crl</span><br><span class="line">├── index.txt</span><br><span class="line">├── newcerts</span><br><span class="line">└── private</span><br><span class="line"></span><br><span class="line">4 directories, 1 file</span><br><span class="line">[root@rocky CA]# </span><br></pre></td></tr></table></figure><ul><li><strong>创建CA的私钥</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky CA]# pwd</span><br><span class="line">/etc/pki/CA</span><br><span class="line"></span><br><span class="line">#因为加了小括号，因此是在子进程中运行的，umask的值不会影响当前进程</span><br><span class="line">[root@rocky CA]# (umask 066;openssl genrsa -out private/cakey.pem 2048)</span><br><span class="line">Generating RSA private key, 2048 bit long modulus (2 primes)</span><br><span class="line">.................................................................................................................................+++++</span><br><span class="line">.............+++++</span><br><span class="line">e is 65537 (0x010001)</span><br><span class="line">[root@rocky CA]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><p> <img src="/../image.assets/1662984286147.png" alt="1662984286147"> </p><p> <img src="/../image.assets/1662984391511.png" alt="1662984391511"> </p><ul><li><strong>给CA颁发自签名证书</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky pki]# openssl req -new -x509 -key /etc/pki/CA/private/cakey.pem -days 3650 -out /etc/pki/CA/cacert.pem</span><br><span class="line"></span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter &#x27;.&#x27;, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN   # 指定国家</span><br><span class="line">State or Province Name (full name) []:guizhou   # 指定省</span><br><span class="line">Locality Name (eg, city) [Default City]:duyun   # 指定城市</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:magedu     # 公司</span><br><span class="line">Organizational Unit Name (eg, section) []:it   # 部门</span><br><span class="line">Common Name (eg, your name or your server&#x27;s hostname) []:m48   # 指定给颁发者</span><br><span class="line">Email Address []:    # 邮箱地址</span><br></pre></td></tr></table></figure><p><strong>参数说明</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-new：生成新证书签署请求；</span><br><span class="line"></span><br><span class="line">-x509：专用用于CA生成字签证书</span><br><span class="line"></span><br><span class="line">-key：生成请求时用到的私钥文件</span><br><span class="line"></span><br><span class="line">-day：证书的有效期限</span><br><span class="line"></span><br><span class="line">-out：证书的保存路径（在配置文件当中有固定路径，该文件可以自动生成）</span><br></pre></td></tr></table></figure><ul><li><strong>用户生成私钥和证书申请</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky CA]# mkdir -pv /data/app1</span><br><span class="line">mkdir: created directory &#x27;/data&#x27;</span><br><span class="line">mkdir: created directory &#x27;/data/app1&#x27;</span><br><span class="line">[root@rocky CA]# </span><br><span class="line"># 生成私钥文件  </span><br><span class="line">[root@rocky app1]# (umask 066;openssl genrsa -out  /data/app1/app1.key 2048)</span><br><span class="line">Generating RSA private key, 2048 bit long modulus (2 primes)</span><br><span class="line">.......................+++++</span><br><span class="line">.............+++++</span><br><span class="line">e is 65537 (0x010001)</span><br><span class="line">[root@rocky app1]# </span><br><span class="line"></span><br><span class="line">#生成证书申请文件</span><br><span class="line">[root@rocky app1]# openssl req -new -key /data/app1/app1.key -out /data/app1/app1.csr</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter &#x27;.&#x27;, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:guizhou</span><br><span class="line">string is too long, it needs to be no more than 2 bytes long</span><br><span class="line">Country Name (2 letter code) [XX]:duyun^C</span><br><span class="line">[root@rocky app1]# openssl req -new -key /data/app1/app1.key -out /data/app1/app1.csr</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter &#x27;.&#x27;, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:guizhou</span><br><span class="line">Locality Name (eg, city) [Default City]:duyun</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:magedu</span><br><span class="line">Organizational Unit Name (eg, section) []:it</span><br><span class="line">Common Name (eg, your name or your server&#x27;s hostname) []:m48</span><br><span class="line">Email Address []:</span><br></pre></td></tr></table></figure><p><strong>注意：默认要求 国家，省，公司名称三项必须和CA一致</strong></p><ul><li><strong>CA颁发证书</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky CA]# openssl  ca -in /data/app1/app1.csr -out /etc/pki/CA/certs/app1.crt -days 1000</span><br><span class="line">Using configuration from /etc/pki/tls/openssl.cnf</span><br><span class="line">Check that the request matches the signature</span><br><span class="line">Signature ok</span><br><span class="line">Certificate Details:</span><br><span class="line">        Serial Number: 1 (0x1)</span><br><span class="line">        Validity</span><br><span class="line">            Not Before: Sep 12 04:28:42 2022 GMT</span><br><span class="line">            Not After : Jun  8 04:28:42 2025 GMT</span><br><span class="line">        Subject:</span><br><span class="line">            countryName               = CN</span><br><span class="line">            stateOrProvinceName       = guizhou</span><br><span class="line">            organizationName          = magedu</span><br><span class="line">            organizationalUnitName    = it</span><br><span class="line">            commonName                = m48</span><br><span class="line">        X509v3 extensions:</span><br><span class="line">            X509v3 Basic Constraints: </span><br><span class="line">                CA:FALSE</span><br><span class="line">            Netscape Comment: </span><br><span class="line">                OpenSSL Generated Certificate</span><br><span class="line">            X509v3 Subject Key Identifier: </span><br><span class="line">                F9:E4:5D:C9:C7:70:0C:E9:17:CC:90:88:7E:78:20:57:38:04:EC:69</span><br><span class="line">            X509v3 Authority Key Identifier: </span><br><span class="line">                keyid:EA:34:E4:C1:8C:1B:F2:F9:22:D5:A2:AE:BD:2F:EA:13:28:24:43:60</span><br><span class="line"></span><br><span class="line">Certificate is to be certified until Jun  8 04:28:42 2025 GMT (1000 days)</span><br><span class="line">Sign the certificate? [y/n]:y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1 out of 1 certificate requests certified, commit? [y/n]y</span><br><span class="line">Write out database with 1 new entries</span><br><span class="line">Data Base Updated</span><br><span class="line">[root@rocky CA]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><p> <img src="/../image.assets/1662988208721.png" alt="1662988208721"> </p><ul><li><strong>查看证书</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky CA]# cat /etc/pki/CA/certs/app1.crt </span><br><span class="line">Certificate:</span><br><span class="line">    Data:</span><br><span class="line">        Version: 3 (0x2)</span><br><span class="line">        Serial Number: 1 (0x1)</span><br><span class="line">        Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">        Issuer: C=CN, ST=guizhou, L=duyun, O=magedu, OU=it, CN=m48</span><br><span class="line">        Validity</span><br><span class="line">            Not Before: Sep 12 04:28:42 2022 GMT</span><br><span class="line">            Not After : Jun  8 04:28:42 2025 GMT</span><br><span class="line">        Subject: C=CN, ST=guizhou, O=magedu, OU=it, CN=m48</span><br><span class="line">        Subject Public Key Info:</span><br><span class="line">            Public Key Algorithm: rsaEncryption</span><br><span class="line">                RSA Public-Key: (2048 bit)</span><br><span class="line">                Modulus:</span><br><span class="line">                    00:b1:d4:eb:6e:8d:32:db:5e:ce:5d:6c:43:73:ef:</span><br><span class="line">                    28:d3:08:8b:ae:8b:42:bf:6a:57:27:76:03:fe:ac:</span><br><span class="line">                    55:62:2f:7a:9c:97:37:aa:53:40:df:35:6c:be:28:</span><br><span class="line">                    c1:c2:b5:e0:af:f0:d3:be:40:3c:15:1e:59:47:40:</span><br><span class="line">                    f0:85:20:c2:da:ca:83:a2:6f:7a:89:3d:35:ba:cf:</span><br><span class="line">                    03:cb:cd:e0:15:96:76:56:23:30:ce:be:c6:1e:d0:</span><br><span class="line">                    a1:fb:27:0c:0f:cf:19:1b:03:9a:08:c8:a2:f1:46:</span><br><span class="line">                    18:b6:f0:08:ef:10:26:12:2b:de:ba:a3:9b:8e:f5:</span><br><span class="line">                    13:ab:6a:4d:08:8c:59:30:ef:78:d1:29:6d:3a:4e:</span><br><span class="line">                    df:c0:cc:d8:04:84:e8:3d:5f:90:67:45:b5:a8:22:</span><br><span class="line">                    8f:6f:ad:83:c9:04:ba:5e:98:3f:f8:2b:49:45:31:</span><br><span class="line">                    01:0e:7d:60:b3:ad:44:5f:9d:90:6c:34:9d:5c:31:</span><br><span class="line">                    26:01:d3:75:fe:58:66:81:b5:d9:b3:83:99:e0:10:</span><br><span class="line">                    62:26:37:62:0e:6c:ea:06:ff:3e:b6:a1:c0:e2:27:</span><br><span class="line">                    0e:85:4c:44:eb:84:16:b6:36:b9:4f:74:fa:c7:89:</span><br><span class="line">                    32:a2:c4:e3:d4:11:a2:7c:61:2d:82:a8:3d:2c:e3:</span><br><span class="line">                    17:c4:ec:de:ae:28:07:07:94:3c:62:1d:49:c0:c0:</span><br><span class="line">                    12:41</span><br><span class="line">                Exponent: 65537 (0x10001)</span><br><span class="line">        X509v3 extensions:</span><br><span class="line">            X509v3 Basic Constraints: </span><br><span class="line">                CA:FALSEs</span><br><span class="line">            Netscape Comment: </span><br><span class="line">                OpenSSL Generated Certificate</span><br><span class="line">            X509v3 Subject Key Identifier: </span><br><span class="line">                F9:E4:5D:C9:C7:70:0C:E9:17:CC:90:88:7E:78:20:57:38:04:EC:69</span><br><span class="line">            X509v3 Authority Key Identifier: </span><br><span class="line">                keyid:EA:34:E4:C1:8C:1B:F2:F9:22:D5:A2:AE:BD:2F:EA:13:28:24:43:60</span><br><span class="line"></span><br><span class="line">    Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">         0c:90:51:c2:89:75:d7:e1:92:e7:a3:90:cb:f0:c0:96:a7:0f:</span><br><span class="line">         9f:e6:b5:2b:45:ed:be:ee:86:cf:0c:f9:06:9c:21:27:25:f8:</span><br><span class="line">         6c:d9:1c:84:87:8f:df:c2:c9:8f:65:7a:e9:84:2c:13:a8:1d:</span><br><span class="line">         d9:ab:65:02:c4:d5:8f:b3:17:a1:7c:d3:e3:06:83:06:43:5c:</span><br><span class="line">         f6:a1:1a:b8:f4:98:7c:28:a9:4e:44:f5:82:ac:9f:77:b7:2f:</span><br><span class="line">         cd:a6:c7:df:8c:24:84:0c:36:ad:2e:69:24:b7:0f:17:80:7d:</span><br><span class="line">         f5:57:4c:df:8d:fb:7d:9e:27:22:bb:7e:b9:e4:aa:45:63:63:</span><br><span class="line">         41:00:64:c6:ff:69:47:1c:b2:ca:49:2a:56:3a:9c:c0:3b:19:</span><br><span class="line">         58:64:22:c2:e2:6c:27:bb:c1:d6:8f:55:a0:77:a0:a8:10:6d:</span><br><span class="line">         5c:cb:01:50:91:ab:86:ac:88:ee:dc:0e:9d:6c:35:c4:7b:fe:</span><br><span class="line">         33:52:a3:f8:a8:25:1d:51:51:ed:2c:25:cf:c7:d3:18:73:81:</span><br><span class="line">         42:0f:6f:b7:e6:3f:87:2a:12:4b:71:9c:a1:c2:07:91:a6:10:</span><br><span class="line">         5f:5f:c2:28:59:f6:2b:ba:ff:d6:56:69:03:c2:49:36:f0:35:</span><br><span class="line">         b4:38:70:7c:29:b8:f6:7d:72:c7:6f:cf:23:ef:e2:5f:d3:73:</span><br><span class="line">         fc:26:9a:ec</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIDnDCCAoSgAwIBAgIBATANBgkqhkiG9w0BAQsFADBbMQswCQYDVQQGEwJDTjEQ</span><br><span class="line">MA4GA1UECAwHZ3VpemhvdTEOMAwGA1UEBwwFZHV5dW4xDzANBgNVBAoMBm1hZ2Vk</span><br><span class="line">dTELMAkGA1UECwwCaXQxDDAKBgNVBAMMA200ODAeFw0yMjA5MTIwNDI4NDJaFw0y</span><br><span class="line">NTA2MDgwNDI4NDJaMEsxCzAJBgNVBAYTAkNOMRAwDgYDVQQIDAdndWl6aG91MQ8w</span><br><span class="line">DQYDVQQKDAZtYWdlZHUxCzAJBgNVBAsMAml0MQwwCgYDVQQDDANtNDgwggEiMA0G</span><br><span class="line">CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCx1OtujTLbXs5dbENz7yjTCIuui0K/</span><br><span class="line">alcndgP+rFViL3qclzeqU0DfNWy+KMHCteCv8NO+QDwVHllHQPCFIMLayoOib3qJ</span><br><span class="line">PTW6zwPLzeAVlnZWIzDOvsYe0KH7JwwPzxkbA5oIyKLxRhi28AjvECYSK966o5uO</span><br><span class="line">9ROrak0IjFkw73jRKW06Tt/AzNgEhOg9X5BnRbWoIo9vrYPJBLpemD/4K0lFMQEO</span><br><span class="line">fWCzrURfnZBsNJ1cMSYB03X+WGaBtdmzg5ngEGImN2IObOoG/z62ocDiJw6FTETr</span><br><span class="line">hBa2NrlPdPrHiTKixOPUEaJ8YS2CqD0s4xfE7N6uKAcHlDxiHUnAwBJBAgMBAAGj</span><br><span class="line">ezB5MAkGA1UdEwQCMAAwLAYJYIZIAYb4QgENBB8WHU9wZW5TU0wgR2VuZXJhdGVk</span><br><span class="line">IENlcnRpZmljYXRlMB0GA1UdDgQWBBT55F3Jx3AM6RfMkIh+eCBXOATsaTAfBgNV</span><br><span class="line">HSMEGDAWgBTqNOTBjBvy+SLVoq69L+oTKCRDYDANBgkqhkiG9w0BAQsFAAOCAQEA</span><br><span class="line">DJBRwol11+GS56OQy/DAlqcPn+a1K0Xtvu6Gzwz5BpwhJyX4bNkchIeP38LJj2V6</span><br><span class="line">6YQsE6gd2atlAsTVj7MXoXzT4waDBkNc9qEauPSYfCipTkT1gqyfd7cvzabH34wk</span><br><span class="line">hAw2rS5pJLcPF4B99VdM3437fZ4nIrt+ueSqRWNjQQBkxv9pRxyyykkqVjqcwDsZ</span><br><span class="line">WGQiwuJsJ7vB1o9VoHegqBBtXMsBUJGrhqyI7twOnWw1xHv+M1Kj+KglHVFR7Swl</span><br><span class="line">z8fTGHOBQg9vt+Y/hyoSS3GcocIHkaYQX1/CKFn2K7r/1lZpA8JJNvA1tDhwfCm4</span><br><span class="line">9n1yx2/PI+/iX9Nz/Caa7A==</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line">[root@rocky CA]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky CA]# openssl x509 -in /etc/pki/CA/certs/app1.crt -noout -issuer</span><br><span class="line">issuer=C = CN, ST = guizhou, L = duyun, O = magedu, OU = it, CN = m48</span><br><span class="line">[root@rocky CA]# </span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 验证指定编号对应证书的有效性</span><br><span class="line">[root@rocky CA]# openssl ca -status 01</span><br><span class="line">Using configuration from /etc/pki/tls/openssl.cnf</span><br><span class="line">01=Valid (V)</span><br><span class="line">[root@rocky CA]# </span><br></pre></td></tr></table></figure><ul><li><strong>证书的吊销</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky newcerts]# openssl ca -revoke /etc/pki/CA/newcerts/01.pem </span><br><span class="line">Using configuration from /etc/pki/tls/openssl.cnf</span><br><span class="line">Revoking Certificate 01.</span><br><span class="line">Data Base Updated</span><br><span class="line"></span><br><span class="line">[root@rocky newcerts]# openssl ca -status 01</span><br><span class="line">Using configuration from /etc/pki/tls/openssl.cnf</span><br><span class="line">01=Revoked (R)</span><br><span class="line">[root@rocky newcerts]# </span><br></pre></td></tr></table></figure><ul><li><strong>生成证书吊销列表文件</strong></li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky newcerts]#echo 01 &gt; /etc/pki/CA/crlnumber</span><br><span class="line">[root@rocky newcerts]#openssl ca -gencrl -out /etc/pki/CA/crl.pem</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux定时执行任务</title>
      <link href="/2022/09/05/Linux%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1/"/>
      <url>/2022/09/05/Linux%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="一、at命令"><a href="#一、at命令" class="headerlink" title="一、at命令"></a>一、at命令</h1><h2 id="1、at命令的准备工作"><a href="#1、at命令的准备工作" class="headerlink" title="1、at命令的准备工作"></a>1、at命令的准备工作</h2><p><strong>1）安装 at 软件包</strong> </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# yum install -y at</span><br></pre></td></tr></table></figure><p><strong>2）需要 atd 服务的支持。atd 服务是独立的服务</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查看atd服务状态：# systemctl status atd  </span><br><span class="line"></span><br><span class="line">开启atd服务：# systemctl start atd</span><br><span class="line"></span><br><span class="line">关闭atd服务：# systemctl stop atd</span><br></pre></td></tr></table></figure><p><strong>3）查看是否开始开机启动服务：如果弹出enabled，说明开机启动此服务</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky ~]# systemctl is-enabled atd</span><br><span class="line">enabled</span><br><span class="line">[root@rocky ~]# </span><br></pre></td></tr></table></figure><p><strong>4）安装好 at 软件包并开启 atd 服务之后，at 命令才可以正常使用。</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky ~]# systemctl start atd </span><br><span class="line">[root@rocky ~]# systemctl status atd</span><br></pre></td></tr></table></figure><p> <img src="/../image.assets/1662393874290.png" alt="1662393874290"> </p><h2 id="2、at-命令的访问控制"><a href="#2、at-命令的访问控制" class="headerlink" title="2、at 命令的访问控制"></a>2、at 命令的访问控制</h2><p>访问控制：是指允许哪些用户使用 at 命令设定定时任务，或者不允许哪些用户使用 at 命令。可以将其想象成设定黑名单或白名单。at 命令的访问控制是依靠 &#x2F;etc&#x2F;at.allow（白名单）和 &#x2F;etc&#x2F;at.deny（黑名单）这两个文件来实现的，具体规则如下：</p><ul><li><p>1)如果系统中有 &#x2F;etc&#x2F;at.allow 文件，那么只有写入 &#x2F;etc&#x2F;at.allow 文件（白名单）中的用户可以使用 at 命令，其他用户不能使用 at 命令(（注意，&#x2F;etc&#x2F;at.allow 文件的优先级更高，也就是说，如果同一个用户既写入 &#x2F;etc&#x2F;at.allow 文件，又写入 &#x2F;etc&#x2F;at.deny 文件，那么这个用户是可以使用 at 命令的);</p></li><li><p>2)如果系统中没有 &#x2F;etc&#x2F;at.allow 文件，只有 &#x2F;etc&#x2F;at.deny 文件，那么写入 &#x2F;etc&#x2F;at.deny 文件（黑名单）中的用户不能使用 at 命令，其他用户可以使用 at 命令。不过这个文件对 root 用户不生效;</p></li><li><p>3)如果系统中这两个文件都不存在，那么只有 root 用户可以使用 at 命令;</p></li><li><p>4)系统中默认只有 &#x2F;etc&#x2F;at.deny 文件，而且这个文件是空的，因此，系统中所有的用户都可以使用 at 命令。如果我们打算控制用户的 at 命令权限，那么只需把用户名写入 &#x2F;etc&#x2F;at.deny 文件即可。</p></li></ul><h2 id="3、at-命令语法添加定时执行任务"><a href="#3、at-命令语法添加定时执行任务" class="headerlink" title="3、at 命令语法添加定时执行任务"></a>3、at 命令语法添加定时执行任务</h2><p><strong>基本格式</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">at [选项] [时间] or at [option] TIME</span><br></pre></td></tr></table></figure><p><strong>选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-V 显示版本信息</span><br><span class="line">-t time 时间格式 [[CC]YY]MMDDhhmm[.ss]</span><br><span class="line">-l 列出指定队列中等待运行的作业；相当于atq</span><br><span class="line">-d N 删除指定的N号作业；相当于atrm</span><br><span class="line">-c N 查看具体作业N号任务</span><br><span class="line">-f file 指定的文件中读取任务</span><br><span class="line">-m 当任务被完成之后，将给用户发送邮件，即使没有标准输出  </span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>作业执行命令的结果中的标准输出和错误以执行任务的用户身份发邮件通知给 root</li><li>默认CentOS 8 最小化安装没有安装邮件服务,需要自行安装</li><li>TIME：定义出什么时候进行 at 这项任务的时间</li></ul><p><strong>此命令中关于时间参数可用的以下格式：</strong></p><table><thead><tr><th>格式</th><th>用法</th></tr></thead><tbody><tr><td>HH:MM</td><td>比如 04:00 AM。</td></tr><tr><td>Midnight（midnight）</td><td>代表 12:00 AM</td></tr><tr><td>Noon（noon）</td><td>代表 12:00 PM（相当于 12:00）</td></tr><tr><td>Teatime（teatime）</td><td>代表 4:00 PM（相当于 16:00）。</td></tr><tr><td>英文月名 日期 年份</td><td>比如 January 15 2018 表示 2018 年 1 月 15 号，年份可有可无。</td></tr><tr><td>MMDDYY、MM&#x2F;DD&#x2F;YY、MM.DD.YY</td><td>比如 011518 表示 2018 年 1 月 15 号。</td></tr><tr><td>now+时间</td><td>以 minutes、hours、days 或 weeks 为单位，例如 now+5 days 表示命令在 5 天之后的此时此刻执行。</td></tr><tr><td><strong>具体的使用方法：</strong></td><td></td></tr></tbody></table><p>at命令后想要输入执行程序的确切时间，然后回车，接着在 &gt; 后输入想要执行的命令，最后用 Ctrl+d 组合键退出 at 命令。</p><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# at now+2 min</span><br><span class="line">at&gt; ls ./ &gt; a.log</span><br></pre></td></tr></table></figure><p><strong>范例: ubuntu at任务存放路径</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404-1:~# ll /var/spool/cron/</span><br><span class="line">total 20</span><br><span class="line">drwxr-xr-x 5 root   root    4096 Feb 23  2022 ./</span><br><span class="line">drwxr-xr-x 4 root   root    4096 Feb 23  2022 ../</span><br><span class="line">drwxrwx--T 2 daemon daemon  4096 Sep  6 13:32 atjobs/</span><br><span class="line">drwxrwx--T 2 daemon daemon  4096 Nov 12  2018 atspool/</span><br><span class="line">drwx-wx--T 2 root   crontab 4096 Feb 13  2020 crontabs/</span><br><span class="line"></span><br><span class="line">root@ubuntu200404-1:~# ll /var/spool/cron/atjobs/</span><br><span class="line">total 16</span><br><span class="line">drwxrwx--T 2 daemon daemon 4096 Sep  6 13:32 ./</span><br><span class="line">drwxr-xr-x 5 root   root   4096 Feb 23  2022 ../</span><br><span class="line">-rwx------ 1 root   daemon 2838 Sep  6 13:33 a0000101a6c9d1*</span><br><span class="line">-rw------- 1 daemon daemon    6 Sep  6 13:32 .SEQ</span><br><span class="line">root@ubuntu200404-1:~# </span><br></pre></td></tr></table></figure><p><strong>范例：centos at任务存放路径</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# ll /var/spool/at/</span><br><span class="line">total 4</span><br><span class="line">-rwx------. 1 root root 2831 Sep  6 21:37 a0000501a6c9d5</span><br><span class="line">drwx------. 2 root root   19 Sep  6 21:31 spool</span><br><span class="line">[root@centos7 ~]# </span><br></pre></td></tr></table></figure><h1 id="二、-crontab命令"><a href="#二、-crontab命令" class="headerlink" title="二、 crontab命令"></a>二、 crontab命令</h1><p>  at 命令：是在指定的时间只能执行一次任务。 crontab 命令：可以循环重复的执行定时任务。</p><h2 id="1、crontab-命令的准备工作"><a href="#1、crontab-命令的准备工作" class="headerlink" title="1、crontab 命令的准备工作"></a>1、crontab 命令的准备工作</h2><p>crontab 命令需要 crond 服务支持。crond 是 Linux 下用来周期地执行某种任务或等待处理某些事件的一个守护进程，在安装完成操作系统后，默认会安装 crond 服务工具，且 crond 服务默认就是自启动的。crond 进程每分钟会定期检查是否有要执行的任务，如果有，则会自动执行该任务。</p><p>crontab 命令和 at 命令类似，也是通过 &#x2F;etc&#x2F;cron.allow 和 &#x2F;etc&#x2F;cron.deny 文件来限制某些用户是否可以使用 crontab 命令的。</p><p>启动crond服务之后才能使用crontab 命令：  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># systemctl start crond 或者  # systemctl enable crond</span><br></pre></td></tr></table></figure><h2 id="2、-crontab-命令语法"><a href="#2、-crontab-命令语法" class="headerlink" title="2、 crontab 命令语法"></a>2、 <strong>crontab 命令语法</strong></h2><p><strong>命令格式</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab [-u user] [-l | -r | -e] [-i]</span><br></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-l 列出所有任务</span><br><span class="line">-e 编辑任务</span><br><span class="line">-r 移除所有任务</span><br><span class="line">-i 同-r一同使用，以交互式模式移除指定任务</span><br><span class="line">-u user 指定用户管理cron任务,仅root可运行</span><br></pre></td></tr></table></figure><p> crontab 定时任务非常简单，只需执“crontab -e”命令，然后输入想要定时执行的任务即可。注意文件格式如下： </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]## crontab -e</span><br><span class="line">#进入 crontab 编辑界面。会打开Vim编辑你的任务</span><br><span class="line">* * * * * 执行的任务</span><br></pre></td></tr></table></figure><p>&#x2F;etc&#x2F;crontab 格式说明，详情参见 man 5 crontab<br>注释行以 # 开头</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# cat /etc/crontab </span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">MAILTO=root</span><br><span class="line"></span><br><span class="line"># For details see man 4 crontabs</span><br><span class="line"></span><br><span class="line"># Example of job definition:</span><br><span class="line"># .---------------- minute (0 - 59)</span><br><span class="line"># |  .------------- hour (0 - 23)</span><br><span class="line"># |  |  .---------- day of month (1 - 31)</span><br><span class="line"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</span><br><span class="line"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</span><br><span class="line"># |  |  |  |  |</span><br><span class="line"># *  *  *  *  * user-name  command to be executed</span><br><span class="line"></span><br><span class="line">You have mail in /var/spool/mail/root</span><br><span class="line">[root@centos7 ~]# </span><br></pre></td></tr></table></figure><table><thead><tr><th>项目</th><th>含义</th><th>范围</th></tr></thead><tbody><tr><td>第一个”*”</td><td>一小时当中的第几分钟（minute）</td><td>0~59</td></tr><tr><td>第二个”*”</td><td>一天当中的第几小时（hour）</td><td>0~23</td></tr><tr><td>第三个”*”</td><td>一个月当中的第几天（day）</td><td>1~31</td></tr><tr><td>第四个”*”</td><td>一年当中的第几个月（month）</td><td>1~12</td></tr><tr><td>第五个”*”</td><td>一周当中的星期几（week）</td><td>0~7（0和7都代表星期日）</td></tr></tbody></table><p>**在这个时间的表达式中，还有一些特殊符号如下：    **</p><table><thead><tr><th>特殊符号</th><th>含义</th></tr></thead><tbody><tr><td>*（星号）</td><td>代表任何时间。比如第一个”*”就代表一小时种每分钟都执行一次的意思。</td></tr><tr><td>,（逗号）</td><td>代表不连续的时间。比如”0 8，12，16***命令”就代表在每天的 8 点 0 分、12 点 0 分、16 点 0 分都执行一次命令。</td></tr><tr><td>-（中杠）</td><td>代表连续的时间范围。比如”0 5 ** 1-6命令”，代表在周一到周六的凌晨 5 点 0 分执行命令。</td></tr><tr><td>&#x2F;（正斜线）</td><td>代表每隔多久执行一次。比如”<em>&#x2F;10</em>***命令”，代表每隔 10 分钟就执行一次命令。</td></tr></tbody></table><p>当“crontab -e”编辑完成之后，一旦保存退出，那么这个定时任务实际就会写入 &#x2F;var&#x2F;spool&#x2F;cron&#x2F; 目录中，每个用户的定时任务用自己的用户名进行区分。而且 crontab 命令只要保存就会生效，只要 crond 服务是启动的。</p><p>这里举几个时间的例子来熟悉一下时间字段（星期几和几日最好不要同时出现，非常容易让管理员混淆）：</p><table><thead><tr><th>时间</th><th>含义</th></tr></thead><tbody><tr><td>1 2 * * *</td><td>在每天凌晨 2 点 1 分执行命令</td></tr><tr><td>0 17 * * 1</td><td>在每周一的 17 点 0 分执行命令</td></tr><tr><td>0 5 1,15 * *</td><td>在每月 1 日和 15 日的凌晨 5 点 0 分执行命令</td></tr><tr><td>40 4 * * 1-5</td><td>在每周一到周五的凌晨 4 点 40 分执行命令</td></tr><tr><td>*&#x2F;10 4 * * *</td><td>在每天的凌晨 4 点，每隔 10 分钟执行命令</td></tr><tr><td>3,15 8-11 *&#x2F;2 * *</td><td>在每隔两天的上午 8 点到 11 点的第 3 和第 15 分钟执行命令。</td></tr></tbody></table><p> <img src="/../image.assets/join.gif" alt="img"> </p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进程和线程相关概念</title>
      <link href="/2022/09/04/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
      <url>/2022/09/04/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<p><strong>Linux系统状态的查看及管理工具：</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pstree</span><br><span class="line">ps</span><br><span class="line">pidof</span><br><span class="line">pgrep</span><br><span class="line">top</span><br><span class="line">htop</span><br><span class="line">glance</span><br><span class="line">pmap</span><br><span class="line">vmstat</span><br><span class="line">dstat</span><br><span class="line">kill</span><br><span class="line">pkill</span><br><span class="line">job</span><br><span class="line">bg</span><br><span class="line">fg</span><br><span class="line">nohup</span><br></pre></td></tr></table></figure><h1 id="1-进程管理和性能相关工具"><a href="#1-进程管理和性能相关工具" class="headerlink" title="1 进程管理和性能相关工具"></a>1 进程管理和性能相关工具</h1><h2 id="1-1-进程树pstree"><a href="#1-1-进程树pstree" class="headerlink" title="1.1 进程树pstree"></a>1.1 进程树pstree</h2><p>pstree 可以用来显示进程的父子关系，以树形结构显示<br>格式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pstree [OPTION] [ PID | USER ]</span><br></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-p 显示PID</span><br><span class="line">-T 不显示线程thread,默认显示线程</span><br><span class="line">-u 显示用户切换</span><br><span class="line">-H pid 高亮显示指定进程及其前辈进程</span><br></pre></td></tr></table></figure><h2 id="1-2-进程信息PS"><a href="#1-2-进程信息PS" class="headerlink" title="1.2 进程信息PS"></a>1.2 进程信息PS</h2><p>ps 即 process state，可以进程当前状态的快照，默认显示当前终端中的进程，Linux系统各进程的相关<br>信息均保存在&#x2F;proc&#x2F;PID目录下的各文件中<br>ps格式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps [OPTION]...</span><br></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">a 选项包括所有终端中的进程</span><br><span class="line">x 选项包括不链接终端的进程</span><br><span class="line">u 选项显示进程所有者的信息</span><br><span class="line">f 选项显示进程树,相当于 --forest</span><br><span class="line">k|--sort 属性 对属性排序,属性前加 - 表示倒序</span><br><span class="line">o 属性… 选项显示定制的信息 pid、cmd、%cpu、%mem</span><br><span class="line">L 显示支持的属性列表</span><br><span class="line">-C cmdlist 指定命令，多个命令用，分隔</span><br><span class="line">-L 显示线程</span><br><span class="line">-e 显示所有进程，相当于-A</span><br><span class="line">-f 显示完整格式程序信息</span><br><span class="line">-F 显示更完整格式的进程信息</span><br><span class="line">-H 以进程层级格式显示进程相关信息</span><br><span class="line">-u userlist 指定有效的用户ID或名称</span><br><span class="line">-U userlist 指定真正的用户ID或名称</span><br><span class="line">-g gid或groupname 指定有效的gid或组名称</span><br><span class="line">-G gid或groupname 指定真正的gid或组名称</span><br><span class="line">-p pid 显示指pid的进程</span><br><span class="line">--ppid pid 显示属于pid的子进程</span><br><span class="line">-t ttylist 指定tty,相当于 t</span><br><span class="line">-M 显示SELinux信息，相当于Z</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux运维工程师面试题汇总(2022)</title>
      <link href="/2022/09/02/Linux%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB(2022)/"/>
      <url>/2022/09/02/Linux%E8%BF%90%E7%BB%B4%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB(2022)/</url>
      
        <content type="html"><![CDATA[<h2 id="一、linux"><a href="#一、linux" class="headerlink" title="一、linux"></a><strong>一、linux</strong></h2><h3 id="1-linux系统启动流程"><a href="#1-linux系统启动流程" class="headerlink" title="1.linux系统启动流程"></a><strong>1.linux系统启动流程</strong></h3><ul><li>第一步：开机自检，加载BIOS</li><li>第二步：读取ＭＢＲ</li><li>第三步：Boot Loader　grub引导菜单</li><li>第四步：加载kernel内核</li><li>第五步：init进程依据inittab文件夹来设定运行级别</li><li>第六步：init进程执行rc.sysinit</li><li>第七步：启动内核模块</li><li>第八步：执行不同运行级别的脚本程序</li><li>第九步：执行&#x2F;etc&#x2F;rc.d&#x2F;rc.lo</li></ul><h3 id="2-linux文件类型"><a href="#2-linux文件类型" class="headerlink" title="2.linux文件类型"></a><strong>2.linux文件类型</strong></h3><table><thead><tr><th>文件属性</th><th>文件类型</th></tr></thead><tbody><tr><td>-</td><td>常规文件，即file</td></tr><tr><td>d</td><td>目录文件</td></tr><tr><td>b</td><td>block device 即块设备文件，如硬盘;支持以block为单位进行随机访问</td></tr><tr><td>c</td><td>character device 即字符设备文件，如键盘支持以character为单位进行线性访问</td></tr><tr><td>l</td><td>symbolic link 即符号链接文件，又称软链接文件</td></tr><tr><td>p</td><td>pipe 即命名管道文件</td></tr><tr><td>s</td><td>socket 即套接字文件，用于实现两个进程进行通信</td></tr></tbody></table><h3 id="3-centos6和7怎么将源码安装的程序添加到开机自启动？"><a href="#3-centos6和7怎么将源码安装的程序添加到开机自启动？" class="headerlink" title="3.centos6和7怎么将源码安装的程序添加到开机自启动？"></a><strong>3.centos6和7怎么将源码安装的程序添加到开机自启动？</strong></h3><ul><li>通用方法：编辑&#x2F;etc&#x2F;rc.d&#x2F;rc.local文件，在文件末尾添加启动服务命令</li><li>centos6<br>①进入到&#x2F;etc&#x2F;rc.d&#x2F;init.d目录下；<br>②新建一个服务启动脚本，脚本中指定chkconfig参数；<br>③添加执行权限；<br>④执行chkconfig –add 添加服务自启动；</li><li>centos7<br>①进入到&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system目录下；<br>②新建自定义服务文件，文件中包含[Unit] [Service] [Install]相关配置，然后添加下执行权限；<br>③执行systemctl enable 服务名称；</li></ul><h3 id="4-简述lvm，如何给使用lvm的-x2F-分区扩容？"><a href="#4-简述lvm，如何给使用lvm的-x2F-分区扩容？" class="headerlink" title="4.简述lvm，如何给使用lvm的&#x2F;分区扩容？"></a><strong>4.简述lvm，如何给使用lvm的&#x2F;分区扩容？</strong></h3><ul><li>功能：可以对磁盘进行动态管理。动态按需调整大小</li><li>概念：</li></ul><p>①PV - 物理卷：物理卷在逻辑卷管理中处于最底层，它可以是实际物理硬盘上的分区，也可以是整个物理硬盘，也可以是raid设备。<br>②VG - 卷组：卷组建立在物理卷之上，一个卷组中至少要包括一个物理卷，在卷组建立之后可动态添加物理卷到卷组中。一个逻辑卷管理系统工程中可以只有一个卷组，也可以拥有多个卷组。<br>③LV - 逻辑卷：逻辑卷建立在卷组之上，卷组中的未分配空间可以用于建立新的逻辑卷，逻辑卷建立后可以动态地扩展和缩小空间。系统中的多个逻辑卷可以属于同一个卷组，也可以属于不同的多个卷组。</p><p><img src="/../img/v2-95936b7fee09f7e980e5342affd6723e_720w.jpg" alt="alt"></p><ul><li>给&#x2F;分区扩容步骤：</li></ul><p>①添加磁盘<br>②使用fdisk命令对新增加的磁盘进行分区<br>③分区完成后修改分区类型为lvm<br>④使用pvcreate创建物理卷<br>⑤使用vgextend命令将新增加的分区加入到根目录分区中<br>⑥使用lvextend命令进行扩容<br>⑦使用xfs_growfs调整卷分区大小</p><h3 id="5-为何du和df统计结果不一致？"><a href="#5-为何du和df统计结果不一致？" class="headerlink" title="5.为何du和df统计结果不一致？"></a><strong>5.为何du和df统计结果不一致？</strong></h3><ul><li>用户删除了大量的文件被删除后，在文件系统目录中已经不可见了，所以du就不会再统计它。</li><li>然而如果此时还有运行的进程持有这个已经被删除的文件句柄，那么这个文件就不会真正在磁盘中被删除，分区超级块中的信息也就不会更改，df仍会统计这个被删除的文件。</li><li>可通过 lsof命令查询处于deleted状态的文件，被删除的文件在系统中被标记为deleted。如果系统有大量deleted状态的文件，会导致du和df统计结果不一致。</li></ul><h3 id="6-如何升级内核？"><a href="#6-如何升级内核？" class="headerlink" title="6.如何升级内核？"></a><strong>6.如何升级内核？</strong></h3><ul><li>方法一</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 添加第三方yum源进行下载安装。</span><br><span class="line">Centos 6 YUM源：http://www.elrepo.org/elrepo-release-6-6.el6.elrepo.noarch.rpm</span><br><span class="line">Centos 7 YUM源：http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span><br><span class="line"># 先导入elrepo的key，然后安装elrepo的yum源：</span><br><span class="line">rpm -import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span><br><span class="line"># 查看可用的内核相关包</span><br><span class="line">yum --disablerepo=&quot;*&quot; --enablerepo=&quot;elrepo-kernel&quot; list available </span><br><span class="line">yum -y --enablerepo=elrepo-kernel install</span><br></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 通过下载kernel image的rpm包进行安装。</span><br><span class="line">官方 Centos 6: http://elrepo.org/linux/kernel/el6/x86_64/RPMS/</span><br><span class="line">官方 Centos 7: http://elrepo.org/linux/kernel/el7/x86_64/RPMS/</span><br><span class="line"># 获取下载链接进行下载安装即可</span><br><span class="line">wget https://elrepo.org/linux/kernel/el7/x86_64/RPMS/kernel-lt-4.4.185-1.el7.elrepo.x86_64.rpm</span><br><span class="line">rpm -ivh kernel-lt-4.4.185-1.el7.elrepo.x86_64.rp</span><br><span class="line"># 查看默认启动顺序</span><br><span class="line">[root@localhost ~]# awk -F\&#x27; &#x27;$1==&quot;menuentry &quot; &#123;print $2&#125;&#x27; /etc/grub2.cfg</span><br><span class="line">CentOS Linux (5.2.2-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (4.4.182-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (3.10.0-957.21.3.el7.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (3.10.0-957.10.1.el7.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (3.10.0-327.el7.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (0-rescue-e34fb4f1527b4f2d9fc75b77c016b6e7) 7 (Core)</span><br><span class="line">由上面可以看出新内核(4.12.4)目前位置在0，原来的内核(3.10.0)目前位置在1</span><br><span class="line"># 设置默认启动</span><br><span class="line">[root@localhost ~]# grub2-set-default 0　　// 0代表当前第一行，也就是4.12.4版本</span><br><span class="line"># 重启验证</span><br></pre></td></tr></table></figure><p><strong>7.nginx日志访问量前十的ip怎么统计？</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk &#x27;&#123;array[$1]++&#125;END&#123;for (ip in array)print ip,array[ip]&#125;&#x27; access.log |sort -k2 -rn|head</span><br></pre></td></tr></table></figure><p><strong>8.如何删除&#x2F;var&#x2F;log&#x2F;下.log结尾的30天前的日志？</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /var/log/ -type f -name .*.log -mtime 30|xargs rm -f</span><br></pre></td></tr></table></figure><p><strong>9.ansible有哪些模块？功能是什么？</strong></p><table><thead><tr><th>模块</th><th>功能</th></tr></thead><tbody><tr><td>copy</td><td>拷贝文件到被控端</td></tr><tr><td>cron</td><td>定时任务</td></tr><tr><td>fetch</td><td>拷贝被控端文件到本地</td></tr><tr><td>file</td><td>文件模块</td></tr><tr><td>group</td><td>用户组模块</td></tr><tr><td>user</td><td>用户模块</td></tr><tr><td>hostname</td><td>主机名模块</td></tr><tr><td>script</td><td>脚本模块</td></tr><tr><td>service</td><td>服务启动模块</td></tr><tr><td>command</td><td>远程执行命令模块</td></tr><tr><td>shell</td><td>远程执行命令模块，command高级用法</td></tr><tr><td>yum</td><td>安装包组模块</td></tr><tr><td>setup</td><td>查看主机系统信息</td></tr></tbody></table><p><strong>10.nginx为什么比apache快？</strong></p><ul><li>nginx采用epoll模型</li><li>apache采用select模型</li></ul><p><strong>11. 四层负载和七层负载区别是什么？</strong></p><ul><li>四层基于IP+端口进行转发</li><li>七层就是基于URL等应用层信息的负载均衡</li></ul><p><strong>12. lvs有哪些工作模式？哪个性能高？</strong></p><ul><li>dr：直接路由模式，请求由 LVS 接受，由真实提供服务的服务器直接返回给用户，返回的时候不经过 LVS。（<strong>性能最高</strong>）</li><li>tun：隧道模式，客户端将访问vip报文发送给LVS服务器。LVS服务器将请求报文重新封装，发送给后端真实服务器。后端真实服务器将请求报文解封，在确认自身有vip之后进行请求处理。后端真实服务器在处理完数据请求后，直接响应客户端。</li><li>nat：网络报的进出都要经过 LVS 的处理。LVS 需要作为 RS 的网关。当包到达 LVS 时，LVS 做目标地址转换（DNAT），将目标 IP 改为 RS 的 IP。RS 接收到包以后，仿佛是客户端直接发给它的一样。RS 处理完，返回响应时，源 IP 是 RS IP，目标 IP 是客户端的 IP。这时 RS 的包通过网关（LVS）中转，LVS 会做源地址转换（SNAT），将包的源地址改为 VIP，这样，这个包对客户端看起来就仿佛是 LVS 直接返回给它的。客户端无法感知到后端 RS 的存在。</li><li>fullnat模式：fullnat模式和nat模式相似，但是与nat不同的是nat模式只做了两次地址转换，fullnat模式却做了四次。</li></ul><p><strong>13. tomcat各个目录含义，如何修改端口，如何修改内存数？</strong></p><ul><li>bin 存放tomcat命令</li><li>conf 存放tomcat配置文件</li><li>lib 存放tomcat运行需要加载的jar包</li><li>log 存在Tomcat运行产生的日志</li><li>temp 运行过程中产生的临时文件</li><li>webapps 站点目录</li><li>work 存放tomcat运行时的编译后的文件</li><li>conf&#x2F;server.xml 修改端口号</li><li>bin&#x2F;catalina.sh 修改jvm内存</li></ul><p><strong>14. nginx反向代理时，如何使后端获取真正的访问来源ip？</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 在location配置段添加以下内容：</span><br><span class="line">proxy_set_header Host $http_host;</span><br><span class="line">proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">proxy_set_header X-Forwarded-Proto $scheme;</span><br></pre></td></tr></table></figure><p><strong>15. nginx负载均衡算法有哪些？</strong></p><ul><li>rr 轮训</li><li>weight 加权轮训</li><li>ip_hash 静态调度算法</li><li>fair 动态调度算法</li><li>url_hash url哈希</li><li>leat_conn 最小连接数</li></ul><p><strong>16. 如何进行压力测试？</strong></p><p>例如：模拟10个用户，对百度首页发起总共100次请求。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 测试命令：</span><br><span class="line">ab -n 100 -c 10 https://www.baidu.com/index.htm</span><br></pre></td></tr></table></figure><p><strong>17. curl命令如何发送https请求？如何查看response头信息？如何发送get和post表单信息？</strong></p><ul><li>发送https请求：</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --tlsv1 &#x27;https://www.bitstamp.net/api/v2/transactions/btcusd/&#x27;</span><br></pre></td></tr></table></figure><ul><li>response头信息 ：curl -I</li><li>get：curl 请求地址?key1&#x3D;value1&amp;key2&#x3D;value2&amp;key3&#x3D;value3</li><li>post：curl -d “key1&#x3D;value1&amp;key2&#x3D;value2&amp;key3&#x3D;value3”</li></ul><h2 id="二、mysql"><a href="#二、mysql" class="headerlink" title="二、mysql"></a><strong>二、mysql</strong></h2><h3 id="1-索引的为什么使查询加快？有啥缺点？"><a href="#1-索引的为什么使查询加快？有啥缺点？" class="headerlink" title="1. 索引的为什么使查询加快？有啥缺点？"></a><strong>1. 索引的为什么使查询加快？有啥缺点？</strong></h3><p>默认的方式是根据搜索条件进行全表扫描，遇到匹配条件的就加入搜索结果集合。如果我们对某一字段增加索引，查询时就会先去索引列表中一次定位到特定值的行数，大大减少遍历匹配的行数，所以能明显增加查询的速度<br>缺点：</p><ul><li>创建索引和维护索引要耗费时间，这种时间随着数据量的增加而增加</li><li>索引需要占物理空间，除了数据表占用数据空间之外，每一个索引还要占用一定的物理空间，如果需要建立聚簇索引，那么需要占用的空间会更大</li><li>以表中的数据进行增、删、改的时候，索引也要动态的维护，这就降低了整数的维护速度</li></ul><h3 id="2-sql语句左外连接-右外连接-内连接-全连接区别"><a href="#2-sql语句左外连接-右外连接-内连接-全连接区别" class="headerlink" title="2. sql语句左外连接 右外连接 内连接 全连接区别"></a><strong>2. sql语句左外连接 右外连接 内连接 全连接区别</strong></h3><p><img src="/../img/v2-2267ea8a39799ed2fd53736c1ce5a2ed_720w.jpg"></p><h2 id="3-mysql数据备份方式，如何恢复？你们的备份策略是什么？"><a href="#3-mysql数据备份方式，如何恢复？你们的备份策略是什么？" class="headerlink" title="3. mysql数据备份方式，如何恢复？你们的备份策略是什么？"></a><strong>3. mysql数据备份方式，如何恢复？你们的备份策略是什么？</strong></h2><ul><li>物理完全备份</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">备份所有数据库文件：/var/lib/mysql/*</span><br><span class="line">备份所有binlog文件:  /var/lib/mysql/mysql-bin.*</span><br><span class="line">备份选项文件: /etc/my.cnf</span><br></pre></td></tr></table></figure><ul><li>mysqldump逻辑备份</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p --all-databases &gt; /backup/mysqldump/all.db</span><br></pre></td></tr></table></figure><ul><li>物理备份恢复</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#先把原来的数据目录改名</span><br><span class="line">mv /var/lib/mysql /var/lib/mysql.old  </span><br><span class="line">cp -a /backups/mysql /var/lib</span><br></pre></td></tr></table></figure><ul><li>逻辑备份数据恢复</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; use db_name</span><br><span class="line">mysql &gt; source /backup/mysqldump/db_name.db</span><br></pre></td></tr></table></figure><h2 id="4-如何配置数据库主从同步，实际工作中是否遇到数据不一致问题？如何解决？"><a href="#4-如何配置数据库主从同步，实际工作中是否遇到数据不一致问题？如何解决？" class="headerlink" title="4. 如何配置数据库主从同步，实际工作中是否遇到数据不一致问题？如何解决？"></a><strong>4. 如何配置数据库主从同步，实际工作中是否遇到数据不一致问题？如何解决？</strong></h2><p>为每个服务器配置唯一值的server-id</p><ul><li>主库</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">开启binlog日志</span><br><span class="line">创建主从复制用户</span><br><span class="line">查看master的状态</span><br></pre></td></tr></table></figure><ul><li>从库</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">change master to设置主库信息</span><br><span class="line">start slave开始复制</span><br></pre></td></tr></table></figure><h2 id="5-mysql约束有哪些？"><a href="#5-mysql约束有哪些？" class="headerlink" title="5. mysql约束有哪些？"></a><strong>5. mysql约束有哪些？</strong></h2><ul><li>非空约束</li><li>唯一约束</li><li>主键约束</li><li>外键约束</li></ul><h2 id="6-二进制日志（binlog）用途？"><a href="#6-二进制日志（binlog）用途？" class="headerlink" title="6. 二进制日志（binlog）用途？"></a><strong>6. 二进制日志（binlog）用途？</strong></h2><p>BINLOG记录数据库的变更过程。例如创建数据库、建表、修改表等DDL操作、以及数据表的相关DML操作，这些操作会导致数据库产生变化，开启binlog以后导致数据库产生变化的操作会按照时间顺序以“事件”的形式记录到binlog二进制文件中。</p><h2 id="7-mysql数据引擎有哪些？"><a href="#7-mysql数据引擎有哪些？" class="headerlink" title="7. mysql数据引擎有哪些？"></a><strong>7. mysql数据引擎有哪些？</strong></h2><ul><li>常用的 myisam、innodb</li><li>区别：</li></ul><p>（1）InnoDB 支持事务，MyISAM 不支持，这一点是非常之重要。事务是一种高级的处理方式，如在一些列增删改中只要哪个出错还可以回滚还原，而 MyISAM就不可以了；<br>（2）MyISAM 适合查询以及插入为主的应用，InnoDB 适合频繁修改以及涉及到安全性较高的应用；<br>（3）InnoDB 支持外键，MyISAM 不支持；<br>（4）MyISAM 是默认引擎，InnoDB 需要指定；<br>（5）InnoDB 不支持 FULLTEXT 类型的索引；<br>（6）InnoDB 中不保存表的行数，如 select count(*) from table 时，InnoDB；需要扫描一遍整个表来计算有多少行，但是 MyISAM 只要简单的读出保存好的行数即可。注意的是，当 count()*语句包含 where 条件时 MyISAM 也需要扫描整个表；<br>（7）对于自增长的字段，InnoDB 中必须包含只有该字段的索引，但是在 MyISAM表中可以和其他字段一起建立联合索引；<br>（8）清空整个表时，InnoDB 是一行一行的删除，效率非常慢。MyISAM 则会重建表；<br>（9）InnoDB 支持行锁（某些情况下还是锁整表，如 update table set a&#x3D;1 where user like ‘%lee%’</p><h2 id="8-如何查询mysql数据库存放路径？"><a href="#8-如何查询mysql数据库存放路径？" class="headerlink" title="8. 如何查询mysql数据库存放路径？"></a><strong>8. 如何查询mysql数据库存放路径？</strong></h2><ul><li>myisam</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.frm文件：保护表的定义</span><br><span class="line">.myd：保存表的数据</span><br><span class="line">.myi：表的索引文件</span><br></pre></td></tr></table></figure><h2 id="9-mysql数据库文件后缀名有哪些？用途什么？"><a href="#9-mysql数据库文件后缀名有哪些？用途什么？" class="headerlink" title="9. mysql数据库文件后缀名有哪些？用途什么？"></a><strong>9. mysql数据库文件后缀名有哪些？用途什么？</strong></h2><ul><li>myisam</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.frm文件：保护表的定义</span><br><span class="line">.myd：保存表的数据</span><br><span class="line">.myi：表的索引文件</span><br></pre></td></tr></table></figure><ul><li>innodb</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.frm：保存表的定义</span><br><span class="line">.ibd：表空间</span><br></pre></td></tr></table></figure><h2 id="10-如何修改数据库用户的密码？"><a href="#10-如何修改数据库用户的密码？" class="headerlink" title="10. 如何修改数据库用户的密码？"></a><strong>10. 如何修改数据库用户的密码？</strong></h2><ul><li>mysql8之前</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set password for 用户名@localhost = password(&#x27;新密码&#x27;); </span><br><span class="line">mysqladmin -u用户名 -p旧密码 password 新密码  </span><br><span class="line">update user set password=password(&#x27;123&#x27;) where user=&#x27;root&#x27; and host=&#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure><ul><li>mysql8之后</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># mysql8初始对密码要求高，简单的字符串不让改。先改成:MyNewPass@123;</span><br><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;MyNewPass@123&#x27;;</span><br><span class="line"># 降低密码难度</span><br><span class="line">set global validate_password.policy=0;</span><br><span class="line">set global validate_password.length=4;</span><br><span class="line"># 修改成简易密码</span><br><span class="line">alter user &#x27;root&#x27;@&#x27;localhost&#x27;IDENTIFIED BY &#x27;1111&#x27;;  </span><br></pre></td></tr></table></figure><h2 id="11-如何修改用户权限？如何查看？"><a href="#11-如何修改用户权限？如何查看？" class="headerlink" title="11. 如何修改用户权限？如何查看？"></a><strong>11. 如何修改用户权限？如何查看？</strong></h2><ul><li>授权：</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all on *.* to user@&#x27;%&#x27; identified by &#x27;passwd&#x27;</span><br></pre></td></tr></table></figure><ul><li>查看权限</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show grants for user@&#x27;%&#x27;;</span><br></pre></td></tr></table></figure><h2 id="三、nosql"><a href="#三、nosql" class="headerlink" title="三、nosql"></a><strong>三、nosql</strong></h2><h2 id="1-redis数据持久化有哪些方式？"><a href="#1-redis数据持久化有哪些方式？" class="headerlink" title="1. redis数据持久化有哪些方式？"></a><strong>1. redis数据持久化有哪些方式？</strong></h2><ul><li>rdb</li><li>aof</li></ul><h2 id="2-redis集群方案有哪些？"><a href="#2-redis集群方案有哪些？" class="headerlink" title="2. redis集群方案有哪些？"></a><strong>2. redis集群方案有哪些？</strong></h2><ul><li>官方cluster方案</li><li>twemproxy代理方案</li><li>哨兵模式</li><li>codis<br>客户端分片</li></ul><h2 id="3-redis如何进行数据备份与恢复？"><a href="#3-redis如何进行数据备份与恢复？" class="headerlink" title="3. redis如何进行数据备份与恢复？"></a><strong>3. redis如何进行数据备份与恢复？</strong></h2><ul><li>备份</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis 127.0.0.1:6379&gt; SAVE</span><br><span class="line">创建 redis 备份文件也可以使用命令 BGSAVE，该命令在后台执行。</span><br></pre></td></tr></table></figure><ul><li>还原</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">只需将备份文件 (dump.rdb) 移动到 redis 安装目录并启动服务即可</span><br><span class="line">redis 127.0.0.1:6379&gt; CONFIG GET dir</span><br></pre></td></tr></table></figure><h2 id="4-MongoDB如何进行数据备份？"><a href="#4-MongoDB如何进行数据备份？" class="headerlink" title="4. MongoDB如何进行数据备份？"></a><strong>4. MongoDB如何进行数据备份？</strong></h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mongoexport / mongoimport</span><br><span class="line">mongodump  / mongorestore</span><br></pre></td></tr></table></figure><h2 id="5-kafka为何比redis-rabbitmq快？"><a href="#5-kafka为何比redis-rabbitmq快？" class="headerlink" title="5. kafka为何比redis rabbitmq快？"></a><strong>5. kafka为何比redis rabbitmq快？</strong></h2><blockquote><p><a href="https://www.zhihu.com/question/22480085">https://www.zhihu.com/question/22480085</a></p></blockquote><h2 id="四、docker"><a href="#四、docker" class="headerlink" title="四、docker"></a><strong>四、docker</strong></h2><h3 id="1-dockerfile有哪些关键字？用途是什么？"><a href="#1-dockerfile有哪些关键字？用途是什么？" class="headerlink" title="1. dockerfile有哪些关键字？用途是什么？"></a><strong>1. dockerfile有哪些关键字？用途是什么？</strong></h3><p><img src="/../img/v2-9ae3aef99f4daee76436faf8555981ac_720w.jpg" alt="img"></p><h3 id="2-如何减小dockerfile生成镜像体积？"><a href="#2-如何减小dockerfile生成镜像体积？" class="headerlink" title="2.如何减小dockerfile生成镜像体积？"></a>2.<strong>如何减小dockerfile生成镜像体积？</strong></h3><ul><li>尽量选取满足需求但较小的基础系统镜像，例如大部分时候可以选择debian:wheezy或debian:jessie镜像，仅有不足百兆大小；</li><li>清理编译生成文件、安装包的缓存等临时文件；</li><li>安装各个软件时候要指定准确的版本号，并避免引入不需要的依赖；</li><li>从安全角度考虑，应用要尽量使用系统的库和依赖；</li><li>如果安装应用时候需要配置一些特殊的环境变量，在安装后要还原不需要保持的变量值；</li></ul><h3 id="3-dockerfile中CMD与ENTRYPOINT区别是什么？"><a href="#3-dockerfile中CMD与ENTRYPOINT区别是什么？" class="headerlink" title="3. dockerfile中CMD与ENTRYPOINT区别是什么？"></a><strong>3. dockerfile中CMD与ENTRYPOINT区别是什么？</strong></h3><ul><li>CMD 和 ENTRYPOINT 指令都是用来指定容器启动时运行的命令。</li><li>指定 ENTRYPOINT 指令为 exec 模式时，CMD指定的参数会作为参数添加到 ENTRYPOINT 指定命令的参数列表中。</li></ul><h3 id="4-dockerfile中COPY和ADD区别是什么？"><a href="#4-dockerfile中COPY和ADD区别是什么？" class="headerlink" title="4. dockerfile中COPY和ADD区别是什么？"></a><strong>4. dockerfile中COPY和ADD区别是什么？</strong></h3><ul><li>COPY指令和ADD指令都可以将主机上的资源复制或加入到容器镜像中</li><li>区别是ADD可以从 远程URL中的资源不会被解压缩。</li><li>如果是本地的压缩包ADD进去会被解压缩</li></ul><h3 id="5-docker的cs架构组件有哪些？"><a href="#5-docker的cs架构组件有哪些？" class="headerlink" title="5. docker的cs架构组件有哪些？"></a><strong>5. docker的cs架构组件有哪些？</strong></h3><p><img src="/../img/v2-1dd21665d0dc4c3b90d4e51361663f45_720w.jpg" alt="alt"></p><h3 id="6-docker网络类型有哪些？"><a href="#6-docker网络类型有哪些？" class="headerlink" title="6. docker网络类型有哪些？"></a><strong>6. docker网络类型有哪些？</strong></h3><ul><li>host模式</li><li>container模式</li><li>none模式</li><li>bridge模式</li></ul><h3 id="7-如何配置docker远程访问？"><a href="#7-如何配置docker远程访问？" class="headerlink" title="7. 如何配置docker远程访问？"></a><strong>7. 如何配置docker远程访问？</strong></h3><ul><li>vim &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service</li><li>在ExecStart&#x3D;后添加配置，注意，需要先空格后，再输入 -H tcp:&#x2F;&#x2F;0.0.0.0:2375 -H unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock</li></ul><h3 id="8-docker核心namespace-CGroups-联合文件系统功能是什么？"><a href="#8-docker核心namespace-CGroups-联合文件系统功能是什么？" class="headerlink" title="8. docker核心namespace CGroups 联合文件系统功能是什么？"></a><strong>8. docker核心namespace CGroups 联合文件系统功能是什么？</strong></h3><ul><li>namespace：资源隔离</li><li>cgroup：资源控制</li><li>联合文件系统：支持对文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂载到同一个虚拟文件系统下</li></ul><h3 id="9-命令相关：导入导出镜像，进入容器，设置重启容器策略，查看镜像环境变量，查看容器占用资源"><a href="#9-命令相关：导入导出镜像，进入容器，设置重启容器策略，查看镜像环境变量，查看容器占用资源" class="headerlink" title="9. 命令相关：导入导出镜像，进入容器，设置重启容器策略，查看镜像环境变量，查看容器占用资源"></a><strong>9. 命令相关：导入导出镜像，进入容器，设置重启容器策略，查看镜像环境变量，查看容器占用资源</strong></h3><ul><li>导入镜像 docker load -i xx.tar</li><li>导出镜像docker save -o xx.tar image_name</li><li>进入容器docker exec -it 容器命令 &#x2F;bin&#x2F;bash</li><li>设置容器重启策略启动时 –restart选项</li><li>查看容器环境变量 docker exec {containerID} env</li><li>查看容器资源占用docker stats test2</li></ul><h3 id="10-构建镜像有哪些方式？"><a href="#10-构建镜像有哪些方式？" class="headerlink" title="10. 构建镜像有哪些方式？"></a><strong>10. 构建镜像有哪些方式？</strong></h3><ul><li>dockerfile</li><li>容器提交为镜像</li></ul><h3 id="11-docker和vmware虚拟化区别？"><a href="#11-docker和vmware虚拟化区别？" class="headerlink" title="11. docker和vmware虚拟化区别？"></a><strong>11. docker和vmware虚拟化区别？</strong></h3><p><img src="/../img/v2-bd145a7e16d4d62ad1b48c10c84b8acc_720w.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 运维工程师面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维工程师基础面试题目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络管理配置</title>
      <link href="/2022/08/21/network/"/>
      <url>/2022/08/21/network/</url>
      
        <content type="html"><![CDATA[<h1 id="1、网络配置"><a href="#1、网络配置" class="headerlink" title="1、网络配置"></a>1、网络配置</h1><h2 id="基本网络配置"><a href="#基本网络配置" class="headerlink" title="基本网络配置"></a><strong>基本网络配置</strong></h2><p>将Linux主机接入到网络，需要配置网络相关设置<br>一般包括如下内容：</p><ul><li>主机名</li><li>IP&#x2F;netmask</li><li>路由：默认网关<ul><li>DNS服务器</li><li>主DNS服务器</li><li>次DNS服务器</li><li>第三个DNS服务器</li></ul></li></ul><h2 id="1-1-修改主机名称"><a href="#1-1-修改主机名称" class="headerlink" title="1.1 修改主机名称"></a>1.1 修改主机名称</h2><ul><li>CentOs6 及之前的版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改 /etc/sysconfig/network文件HOSTNAME的值</span></span><br><span class="line">[root@centos6 sysconfig]# cat /etc/sysconfig/network</span><br><span class="line">NETWORKING=yes</span><br><span class="line">HOSTNAME=centos6</span><br><span class="line">[root@centos6 sysconfig]# </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改hostname的值为centos6.mg.du</span></span><br><span class="line">[root@centos6 sysconfig]# vi /etc/sysconfig/network</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改后不会马上生效,需要使用hostname命令重写一下</span></span><br><span class="line">[root@centos6 sysconfig]# hostname centos6.mg.du</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启一下看主机名称是否修改成功</span></span><br><span class="line">[root@centos6 sysconfig]# reboot</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hostname命令查看主机名称</span></span><br><span class="line">[root@centos6 ~]# hostname</span><br><span class="line">centos6.mg.du</span><br><span class="line">[root@centos6 ~]#</span><br></pre></td></tr></table></figure><ul><li>CentOs7 及之后的版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">centos7 之后的版本主机名称文件  /etc/hostname</span></span><br><span class="line">[root@centos7 ~]# cat /etc/hostname </span><br><span class="line">centos7</span><br><span class="line">[root@centos7 ~]# </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">centos7 之后的版本直接使用命令修改主机名称</span></span><br><span class="line">[root@centos7 ~]# hostnamectl set-hostname centos7.mg</span><br><span class="line">[root@centos7 ~]# hostname</span><br><span class="line">centos7.mg</span><br><span class="line">[root@centos7 ~]# </span><br></pre></td></tr></table></figure><ul><li>ubuntu修改主机名称</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看主机名称配置文件</span></span><br><span class="line">root@ubuntu200404-1:~# cat /etc/hostname </span><br><span class="line">ubuntu200404-1</span><br><span class="line">root@ubuntu200404-1:~# </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改主机名称可以直接修改/etc/hostname文件，也可以直接使用命令修改</span></span><br><span class="line">hostnamectl set-hostname 主机名</span><br></pre></td></tr></table></figure><h2 id="1-2-网卡名称"><a href="#1-2-网卡名称" class="headerlink" title="1.2 网卡名称"></a>1.2 网卡名称</h2><h3 id="1-2-1-centos-6之前版本的网卡名称"><a href="#1-2-1-centos-6之前版本的网卡名称" class="headerlink" title="1.2.1 centos 6之前版本的网卡名称"></a>1.2.1 centos 6之前版本的网卡名称</h3><p>接口命名方式：CentOS 6</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">以太网： eth[0,1,2,···]</span><br><span class="line">ppp: ppp[0,1,2,···]</span><br></pre></td></tr></table></figure><ul><li>网络接口识别并命名相关的udev配置文件</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/udev/rules.d/70-persistent-net.rules</span><br></pre></td></tr></table></figure><ul><li>查看网卡</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dmesg |grep –i eth</span><br><span class="line">ethtool -i eth0</span><br></pre></td></tr></table></figure><ul><li>卸载网卡驱动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">modprobe -r e1000</span><br><span class="line">rmmod e1000</span><br></pre></td></tr></table></figure><ul><li>装载网卡驱动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">modprobe e1000</span><br></pre></td></tr></table></figure><ul><li>范例：临时修改网卡名称</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos6 ~]#ip link set eth0 down</span><br><span class="line">[root@centos6 ~]#ip link set eth0 name abc</span><br><span class="line">[root@centos6 ~]#ip link set abc up</span><br></pre></td></tr></table></figure><h3 id="1-2-2-Centos7-版本之后的网卡配置"><a href="#1-2-2-Centos7-版本之后的网卡配置" class="headerlink" title="1.2.2 Centos7 版本之后的网卡配置"></a>1.2.2 Centos7 版本之后的网卡配置</h3><p><strong>参考文档</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://access.redhat.com/documentation/en-</span><br><span class="line">us/red_hat_enterprise_linux/8/html/configuring_and_managing_networking/consisten</span><br><span class="line">t-network-interface-device-naming_configuring-and-managing-networking</span><br></pre></td></tr></table></figure><p>CentOS 6之前，网络接口使用连续号码命名：eth0、eth1等,当增加或删除网卡时，名称可能会发生变化<br>CentOS 7 以上版使用基于硬件，设备拓扑和设置类型命名,可以保持网卡名称的稳定<br>CentOS 8 中已弃用network.service，采用NetworkManager（NM）为网卡启用命令。CentOS 8 仍可以安装network.service作为网卡服务，只是默认没有安装，具体方法为： dnf install network-scripts ，不过官方已明确在下一个大版本中，将彻底放弃network.service，不建议继续使用network.service管理网络。</p><p><strong>systemd对网络设备的命名方式</strong></p><ol><li><p>如果Firmware或BIOS为主板上集成的设备提供的索引信息可用，且可预测则根据此索引进行命<br> 名，如：eno1</p></li><li><p>如果Firmware或BIOS为PCI-E扩展槽所提供的索引信息可用，且可预测，则根据此索引进行命名，<br> 如：ens1</p></li><li><p>如果硬件接口的物理位置信息可用，则根据此信息命名，如：enp2s0</p></li><li><p>如果用户显式启动，也可根据MAC地址进行命名，如：enx2387a1dc56</p></li><li><p>上述均不可用时，则使用传统命名机制</p></li></ol><p><strong>基于BIOS支持启用biosdevname软件</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">内置网卡：em1,em2</span><br><span class="line">pci卡：pYpX Y：slot ,X:port</span><br></pre></td></tr></table></figure><p><strong>网卡组成格式</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">en: Ethernet 有线局域网</span><br><span class="line">wl: wlan 无线局域网</span><br><span class="line">ww: wwan无线广域网</span><br><span class="line">o&lt;index&gt;: 集成设备的设备索引号</span><br><span class="line">s&lt;slot&gt;: 扩展槽的索引号</span><br><span class="line">x&lt;MAC&gt;: 基于MAC地址的命名</span><br><span class="line">p&lt;bus&gt;s&lt;slot&gt;: enp2s1</span><br></pre></td></tr></table></figure><p><strong>使用传统方式命名</strong></p><p>（1）编辑&#x2F;etc&#x2F;default&#x2F;grub配置文件</p><ul><li>centos7</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX=&quot;net.ifnames=0 biosdevname=0&quot;</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1661261214996.png" alt="1661261214996"></p><ul><li>ubuntu</li></ul><p><img src="/../image.assets/1661261773303.png" alt="1661261773303"></p><p>(2) 为grub2生成其配置文件</p><ul><li>centos7</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# grub2-mkconfig -o /boot/grub2/grub.cfg</span><br></pre></td></tr></table></figure><ul><li>ubuntu</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><p>(3) 重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p><strong>自定义网卡名称</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]# vi /etc/default/grub</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;net.ifnames.prefix=yuankun&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@centos8 ~]# grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line">[root@centos8 ~]# reboot</span><br></pre></td></tr></table></figure><h2 id="1-3-网络配置文件"><a href="#1-3-网络配置文件" class="headerlink" title="1.3 网络配置文件"></a>1.3 网络配置文件</h2><p><strong>网络基本配置文件</strong></p><p>IP、MASK、GW、DNS相关的配置文件：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/sysconfig/network-scripts/ifcfg-IFACE</span><br></pre></td></tr></table></figure><p><strong>配置参考文件</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/doc/initcripts-*/sysconfig.txt</span><br></pre></td></tr></table></figure><p><strong>常用配置</strong></p><table><thead><tr><th>设置</th><th>说明</th></tr></thead><tbody><tr><td>TYPE</td><td>接口类型；常见有的Ethernet, Bridge</td></tr><tr><td>NAME</td><td>此配置文件应用到的设备</td></tr><tr><td>DEVICE</td><td>设备名</td></tr><tr><td>HWADDR</td><td>对应的设备的MAC地址</td></tr><tr><td>UUID</td><td>设备的唯一标识</td></tr><tr><td>BOOTPROTO</td><td>激活此设备时使用的地址配置协议，常用的dhcp，static, none, bootp</td></tr><tr><td>IPADDR</td><td>指明IP地址</td></tr><tr><td>NETMASK</td><td>子网掩码,如:255.255.255.0</td></tr><tr><td>PREFIX</td><td>网络ID的位数, 如:24</td></tr><tr><td>GATEWAY</td><td>默认网关</td></tr><tr><td>DNS1</td><td>第一个DNS服务器地址</td></tr><tr><td>DNS2</td><td>第二个DNS服务器地址</td></tr><tr><td>DOMAIN</td><td>主机不完整时，自动搜索的域名后缀</td></tr><tr><td>ONBOOT</td><td>在系统引导时是否激活此设备</td></tr><tr><td>USERCTL</td><td>普通用户是否可控制此设备</td></tr><tr><td>PEERDNS</td><td>如果BOOTPROTO的值为“dhcp”，YES将允许dhcp server分配的dns服务<br/>器信息直接覆盖至&#x2F;etc&#x2F;resolv.conf文件，NO不允许修改resolv.conf</td></tr><tr><td>NM_CONTROLLED</td><td>NM是NetworkManager的简写，此网卡是否接受NM控制</td></tr></tbody></table><p><strong>范例</strong></p><ul><li>修改&#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-IFACE</li><li>必须以ifcfg-开头，为了规范一般后面跟网卡名</li><li>配置文件写入内容</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 动态获取ip地址</span><br><span class="line">DEVICE=eth0</span><br><span class="line">NAME=eth0</span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line"></span><br><span class="line"># 静态获取IP地址</span><br><span class="line">DEVICE=eth0</span><br><span class="line">NAME=eth0</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=192.168.179.129</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.179.1</span><br><span class="line">DNS1=192.168.179.1</span><br><span class="line">DNS2=180.76.76.76</span><br></pre></td></tr></table></figure><p>centos8还需要执行以下两条命令才会生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CentOS8和rocky</span><br><span class="line">nmcli connnection reload</span><br><span class="line">nmcli connnettion up eth0</span><br></pre></td></tr></table></figure><p><strong>扩展：CentOS网卡配置文件生效方法</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CentOS6</span><br><span class="line">service network restart</span><br><span class="line">CentOS7</span><br><span class="line">systemctl restart network</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通用方法 重启</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="1-4-ifconfig命令"><a href="#1-4-ifconfig命令" class="headerlink" title="1.4 ifconfig命令"></a>1.4 ifconfig命令</h2><p>来自于net-tools包，建议使用 ip 代替</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#清除eth0上面的IP地址</span><br><span class="line">[root@centos8 ~]#ifconfig eth0 0.0.0.0</span><br><span class="line">#启用和禁用网卡</span><br><span class="line">[root@centos8 ~]#ifconfig eth0 down</span><br><span class="line">[root@centos8 ~]#ifconfig eth0 up</span><br><span class="line">#对一个网卡设置多个IP地址</span><br><span class="line">[root@centos8 ~]#ifconfig eth0:1 172.16.0.8/24</span><br></pre></td></tr></table></figure><h2 id="1-5-route命令"><a href="#1-5-route命令" class="headerlink" title="1.5 route命令"></a>1.5 route命令</h2><p>路由表管理命令<br>路由表主要构成:</p><ul><li>Destination: 目标网络ID,表示可以到达的目标网络ID,0.0.0.0&#x2F;0 表示所有未知网络,又称为默认路由,<br>优先级最低</li><li>Genmask:目标网络对应的netmask</li><li>Iface: 到达对应网络,应该从当前主机哪个网卡发送出来</li><li>Gateway: 到达非直连的网络,将数据发送到临近(下一个)路由器的临近本主机的接口的IP地址,如果<br>是直连网络,gateway是0.0.0.0</li><li>Metric: 开销cost,值越小,路由记录的优先级最高</li></ul><p><strong>查看路由表：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky ~]# route -n</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">0.0.0.0         192.168.179.1   0.0.0.0         UG    100    0        0 eth0</span><br><span class="line">192.168.179.0   0.0.0.0         255.255.255.0   U     100    0        0 eth0</span><br></pre></td></tr></table></figure><p><strong>添加路由：route add</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route add [-net|-host|default] target [netmask Nm] [gw GW] [[dev] If]</span><br></pre></td></tr></table></figure><p><strong>删除路由route del</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route del [-net|-host] target [gw Gw] [netmask Nm] [[dev] If]</span><br></pre></td></tr></table></figure><h2 id="1-6-ubuntu网络配置"><a href="#1-6-ubuntu网络配置" class="headerlink" title="1.6 ubuntu网络配置"></a>1.6 ubuntu网络配置</h2><h3 id="1-6-1-修改主机名"><a href="#1-6-1-修改主机名" class="headerlink" title="1.6.1 修改主机名"></a>1.6.1 修改主机名</h3><ul><li>方法一</li></ul><p>修改配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># /etc/hostname</span><br></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname 主机名</span><br></pre></td></tr></table></figure><h3 id="1-6-2-网卡名称"><a href="#1-6-2-网卡名称" class="headerlink" title="1.6.2 网卡名称"></a>1.6.2 网卡名称</h3><p>默认ubuntu的网卡名称和 CentOS 7 类似，如：ens33，ens38等<br>修改网卡名称为传统命名方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 修改配置文件    /etc/default/grub</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;net.ifnames=0&quot;</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1661777360041.png" alt="1661777360041"></p><p><strong>生成新的grub.cfg文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class="line">#或者</span><br><span class="line">update-grub</span><br><span class="line">grep net.ifnames /boot/grub/grub.cfg</span><br><span class="line"></span><br><span class="line"># 重启生效</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="1-6-3-ubuntu网卡配置"><a href="#1-6-3-ubuntu网卡配置" class="headerlink" title="1.6.3 ubuntu网卡配置"></a>1.6.3 ubuntu网卡配置</h3><ul><li>配置自动获取IP</li></ul><p>网卡配置文件采用YAML格式,必须以 &#x2F;etc&#x2F;netplan&#x2F;XXX.yaml 文件命名方式存放<br>可以每个网卡对应一个单独的配置文件,也可以将所有网卡都放在一个配置文件里</p><p><strong>范例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404-1:~# cat /etc/netplan/eth0.yaml </span><br><span class="line"># This is the network config written by &#x27;subiquity&#x27;</span><br><span class="line">network:</span><br><span class="line">  ethernets:</span><br><span class="line">    eth0:</span><br><span class="line">      dhcp4: true</span><br><span class="line">  version: 2</span><br><span class="line">  </span><br><span class="line"> # 修改网卡配置文件后需要执行命令生效</span><br><span class="line"> netplan apply</span><br></pre></td></tr></table></figure><ul><li>配置静态IP</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404-1:/etc/netplan# cat eth1.yaml </span><br><span class="line"># This is the network config written by &#x27;subiquity&#x27;</span><br><span class="line">network:</span><br><span class="line">  ethernets:</span><br><span class="line">    eth1:</span><br><span class="line">      addresses:</span><br><span class="line">      - 192.168.179.139/24</span><br><span class="line">      gateway4: 192.168.0.2</span><br><span class="line">      nameservers:</span><br><span class="line">        search: [baidu.com]</span><br><span class="line">        # DNS</span><br><span class="line">        addresses: [180.76.76.76]</span><br><span class="line">  version: 2</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"># 修改网卡配置文件后需要执行命令生效</span><br><span class="line"> netplan apply</span><br></pre></td></tr></table></figure><p><strong>查看ip和网关</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看IP</span></span><br><span class="line">root@ubuntu200404-1:/etc/netplan# ip address</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:79:b0:80 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.179.138/24 brd 192.168.179.255 scope global dynamic eth0</span><br><span class="line">       valid_lft 1698sec preferred_lft 1698sec</span><br><span class="line">    inet6 fe80::20c:29ff:fe79:b080/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:79:b0:8a brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.179.139/24 brd 192.168.179.255 scope global eth1</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::20c:29ff:fe79:b08a/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">root@ubuntu200404-1:/etc/netplan# </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看网关</span></span><br><span class="line">root@ubuntu200404-1:/etc/netplan# route -n</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">0.0.0.0         192.168.179.2   0.0.0.0         UG    100    0        0 eth0</span><br><span class="line">192.168.179.0   0.0.0.0         255.255.255.0   U     0      0        0 eth1</span><br><span class="line">192.168.179.0   0.0.0.0         255.255.255.0   U     0      0        0 eth0</span><br><span class="line">192.168.179.2   0.0.0.0         255.255.255.255 UH    100    0        0 eth0</span><br><span class="line">root@ubuntu200404-1:/etc/netplan# </span><br></pre></td></tr></table></figure><p><strong>查看DNS</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu2004:~# resolvectl status #Ubuntu 20.04新命令</span><br><span class="line">root@ubuntu1804:~# systemd-resolve --status</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件管理</title>
      <link href="/2022/08/08/%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
      <url>/2022/08/08/%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="1、软件管理简介"><a href="#1、软件管理简介" class="headerlink" title="1、软件管理简介"></a>1、软件管理简介</h1><p>Redhat和Centos中软件管理是依靠软件包管理器(RPM)来实现的</p><p>RPM(Redhat Package Manager)软件包管理器提供了在Linux操作系统中安装、升级、卸载的方法，并提供对系统中的软件状态信息的查询；除了这些功能外，RPM软件包管理器还提供了制作软件包的功能</p><h1 id="2、软件包管理器简介"><a href="#2、软件包管理器简介" class="headerlink" title="2、软件包管理器简介"></a>2、软件包管理器简介</h1><h2 id="2-1-软件包管理器的职责"><a href="#2-1-软件包管理器的职责" class="headerlink" title="2.1 软件包管理器的职责"></a>2.1 软件包管理器的职责</h2><ul><li>将二进制文件、库文件、配置文件、帮助文件打包成一个文件</li><li>安装软件时按需将二进制、库文件、配置文件、帮助文件放到相应的位置</li><li>生成数据库，追踪所安装的每一个文件</li><li>软件卸载时根据安装时生成的数据库将相应的文件删除</li></ul><h2 id="2-2-软件包管理器的核心功能"><a href="#2-2-软件包管理器的核心功能" class="headerlink" title="2.2 软件包管理器的核心功能"></a>2.2 软件包管理器的核心功能</h2><ul><li>制作软件包</li><li>安装软件</li><li>卸载软件</li><li>升级软件</li><li>查询软件</li><li>校验软件</li></ul><h1 id="3、软件包简介"><a href="#3、软件包简介" class="headerlink" title="3、软件包简介"></a>3、软件包简介</h1><h2 id="3-1-软件包组成"><a href="#3-1-软件包组成" class="headerlink" title="3.1 软件包组成"></a>3.1 软件包组成</h2><ul><li>软件包的组成清单<ul><li>文件清单</li><li>安装或卸载的运行脚本</li></ul></li><li>数据库<ul><li>程序包名称及版本</li><li>依赖关系</li><li>功能说明</li><li>安装生成的各个文件的路径及校验码信息</li></ul></li></ul><h2 id="3-2-软件包分类"><a href="#3-2-软件包分类" class="headerlink" title="3.2 软件包分类"></a>3.2 软件包分类</h2><p><strong>源码格式</strong><br>特点：需要编译成二进制格式才能进行</p><ul><li>命名方式：name-VERSION.tar.gz<ul><li>VERSION：主版本号.次版本号.系统发行版本</li></ul></li></ul><p><strong>二进制格式</strong><br>特点：编译好的，安装之后可以直接运行</p><ul><li>软件的作者下载软件的源码，编译配置为二进制软件包</li><li>Redhat和Centos中使用的二进制包为rpm包</li></ul><p><strong>源码格式和二进制格式的区别</strong></p><ul><li>源码格式的包编译为二进制包时可以选择需要的特性，如果未选择，则编译后安装后的软件就不会有相应的功能</li><li>源码包在编译成为二进制包时可以实现软件功能的定制</li><li>二进制包的本版落后于源码包。</li></ul><h1 id="4、rpm简介"><a href="#4、rpm简介" class="headerlink" title="4、rpm简介"></a>4、rpm简介</h1><p>Redhat和Centos中二进制包的扩展包为.rpm，这是由红帽公司最先发布的一种用来打包软件的文件格式，我们叫做rpm包；RPM软件包管理器就是管理rpm包</p><p>4.1 rpm包命名规范</p><h1 id="5、软件包的获取途径"><a href="#5、软件包的获取途径" class="headerlink" title="5、软件包的获取途径"></a>5、软件包的获取途径</h1><h2 id="5-1-系统发行的光盘"><a href="#5-1-系统发行的光盘" class="headerlink" title="5.1 系统发行的光盘"></a>5.1 系统发行的光盘</h2><p>Linux的IOS镜像文件自带了非常多的系统扩展RPM安装包，且这些软件版本最适合当前Linux系统<br>IOS镜像文件自带的扩展RPM安装包的存放目录为：Packages<br>使用IOS镜像文件自带的扩展RPM安装包前必须先挂载ISO镜像，挂在方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 创建挂载点，挂载光盘镜像到挂载点</span><br><span class="line">[root@jlin ~]# mkdir /mnt/cdrom</span><br><span class="line">[root@jlin ~]# mount /dev/sr0 /mnt/cdrom/</span><br><span class="line"></span><br><span class="line"># 复制挂载点里面所有的文件到/media/目录，避免光盘断开连接就读取不到扩展RPM安装包</span><br><span class="line">[root@jlin ~]# cp -r /mnt/cdrom/ /media/</span><br><span class="line">[root@jlin ~]# cd /media/cdrom/</span><br><span class="line">[root@jlin cdrom]# ll</span><br><span class="line">总用量 320</span><br><span class="line">-rw-r--r-- 1 root root     14 7月  10 08:27 CentOS_BuildTag</span><br><span class="line">drwxr-xr-x 3 root root     35 7月  10 08:27 EFI</span><br><span class="line">-rw-r--r-- 1 root root    227 7月  10 08:27 EULA</span><br><span class="line">-rw-r--r-- 1 root root  18009 7月  10 08:27 GPL</span><br><span class="line">drwxr-xr-x 3 root root     57 7月  10 08:27 images</span><br><span class="line">drwxr-xr-x 2 root root    198 7月  10 08:27 isolinux</span><br><span class="line">drwxr-xr-x 2 root root     43 7月  10 08:27 LiveOS</span><br><span class="line">drwxr-xr-x 2 root root 221184 7月  10 08:29 Packages</span><br><span class="line">drwxr-xr-x 2 root root   4096 7月  10 08:29 repodata</span><br><span class="line">-rw-r--r-- 1 root root   1690 7月  10 08:29 RPM-GPG-KEY-CentOS-7</span><br><span class="line">-rw-r--r-- 1 root root   1690 7月  10 08:29 RPM-GPG-KEY-CentOS-Testing-7</span><br><span class="line">-r--r--r-- 1 root root   2883 7月  10 08:29 TRANS.TBL</span><br></pre></td></tr></table></figure><h2 id="5-2-开源镜像站"><a href="#5-2-开源镜像站" class="headerlink" title="5.2 开源镜像站"></a>5.2 开源镜像站</h2><p>开源镜像站上会存放RPM安装包</p><ul><li>阿里巴巴开源镜像站</li></ul><blockquote><p><a href="http://mirrors.aliyun.com/">http://mirrors.aliyun.com</a></p></blockquote><ul><li>网易开源镜像站</li></ul><blockquote><p><a href="http://mirrors.163.com/">http://mirrors.163.com</a></p></blockquote><ul><li>清华大学开源镜像站</li></ul><blockquote><p><a href="https://mirrors.tuna.tsinghua.edu.cn/">https://mirrors.tuna.tsinghua.edu.cn</a></p></blockquote><h2 id="5-3-搜索引擎"><a href="#5-3-搜索引擎" class="headerlink" title="5.3 搜索引擎"></a>5.3 搜索引擎</h2><p>有一些搜索引擎直接提供rpm包搜索功能</p><ul><li>rpmfind</li></ul><blockquote><p><a href="http://rpmfind.net/">http://rpmfind.net</a></p></blockquote><ul><li>rpm pbone</li></ul><blockquote><p><a href="http://rpm.pbone.net/">http://rpm.pbone.net</a></p></blockquote><ul><li>pkgs</li></ul><blockquote><p><a href="http://pkgs.org/">http://pkgs.org/</a></p></blockquote><h1 id="6、rpm包管理"><a href="#6、rpm包管理" class="headerlink" title="6、rpm包管理"></a>6、rpm包管理</h1><h2 id="6-1-RPM包安装"><a href="#6-1-RPM包安装" class="headerlink" title="6.1 RPM包安装"></a>6.1 RPM包安装</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">// 语法：rpm -ivh /PATH/TO/PACKAGE_FILE ...</span><br><span class="line">// 选项：</span><br><span class="line">-i：安装</span><br><span class="line">-v：显示详细信息</span><br><span class="line">-h：显示安装进度条</span><br><span class="line">--test：测试安装，但不真正执行安装过程</span><br><span class="line">--nodeps：忽略依赖关系</span><br><span class="line">--force：强行安装，可以实现重装或降级</span><br><span class="line">--replacepkgs：重新安装，替换原有安装</span><br><span class="line">--oldpackage：降级</span><br><span class="line">--nodigest：不检查包的完整性</span><br><span class="line">--nosignature：不检查报的来源合法性</span><br><span class="line">--noscripts：不执行rpm包自带的四类脚本：</span><br><span class="line">--nopre：不执行rpm包自带的preinstall脚本</span><br><span class="line">--nopost：不执行rpm包自带的postinstall脚本</span><br><span class="line">--nopreun：不执行rpm包自带的preuninstall脚本</span><br><span class="line">--nopostun：不执行rpm包自带的postuninstall脚本</span><br><span class="line">preinstall：安装过程开始之前运行的脚本，标记为%pre：--nopre</span><br><span class="line">postinstall：安装过程完成之后运行的脚本，标记为%post：--nopost</span><br><span class="line">preuninstall：卸载过程开始执行之前运行的脚本，标记为%preun：--nopreun</span><br><span class="line">postunistall：写在过程完成之后运行的脚本，标记为%postrun：--nopostun</span><br><span class="line"></span><br><span class="line">// 安装软件包，需要指定软件包绝对路径</span><br><span class="line">[root@jlin ~]# rpm -ivh /mnt/cdrom/Packages/tree-1.6.0-10.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">// 在软件包所在目录下可以不指定绝对路径</span><br><span class="line">[root@jlin ~]# cd /mnt/cdrom/Packages/</span><br><span class="line">[root@jlin Packages]# rpm -ivh tree-1.6.0-10.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">// 测试一个软件包是否能在该系统上安装</span><br><span class="line">[root@jlin ~]# rpm -ivh --test /mnt/cdrom/Packages/tree-1.6.0-10.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">// 如果软件包已经安装，强制再次安装</span><br><span class="line">[root@jlin ~]# rpm -ivh --force /mnt/cdrom/Packages/tree-1.6.0-10.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">// 安装httpd服务需要依赖其他组件，使用--nodeps可忽略以来强制安装</span><br><span class="line">[root@jlin ~]# rpm -ivh --nodeps /mnt/cdrom/Packages/httpd-2.4.6-80.el7.centos.x86_64.rpm</span><br></pre></td></tr></table></figure><h2 id="6-2-RPM包查询"><a href="#6-2-RPM包查询" class="headerlink" title="6.2 RPM包查询"></a>6.2 RPM包查询</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// 查询httpd的rpm包是否安装</span><br><span class="line">[root@jlin ~]# rpm -q httpd</span><br><span class="line"></span><br><span class="line">// 模糊查找系统已安装的rpm包</span><br><span class="line">[root@jlin ~]# rpm -qa | grep ftp</span><br><span class="line"></span><br><span class="line">// 查询已安装的httpd软件包相关信息</span><br><span class="line">[root@jlin ~]# rpm -qi httpd</span><br><span class="line"></span><br><span class="line">// 查询已安装的rpm包生成的文件</span><br><span class="line">[root@jlin ~]# rpm -ql httpd</span><br><span class="line"></span><br><span class="line">// 查询已安装的rpm包生成的配置文件</span><br><span class="line">所有</span><br><span class="line">[root@jlin ~]# rpm -qc httpd</span><br><span class="line"></span><br><span class="line">// 查询配置文件或命令来自于哪个rpm包</span><br><span class="line">[root@jlin ~]# rpm -qf /etc/httpd/httpd.conf</span><br><span class="line">[root@jlin ~]# rpm -qf /usr/sbin/httpd</span><br><span class="line"></span><br><span class="line">// 查询未安装的软件包会产生哪些文件</span><br><span class="line">[root@jlin ~]# rpm -qpl / mnt/Packages/httpd-2.4.6-80.el7.centos.x86_64.rpm</span><br><span class="line"></span><br><span class="line">// 查询未安装的软件包的说明信息</span><br><span class="line">[root@jlin ~]# rpm -qpi /mnt/Packages/httpd-2.4.6-80.el7.centos.x86_64.rpm</span><br></pre></td></tr></table></figure><h2 id="6-4-RPM包升级"><a href="#6-4-RPM包升级" class="headerlink" title="6.4 RPM包升级"></a>6.4 RPM包升级</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 升级tree软件包</span><br><span class="line">[root@jlin ~]# rpm -Uvh /mnt/Packages/httpd-2.4.6-80.el7.centos.x86_64.rpm</span><br></pre></td></tr></table></figure><h2 id="6-5-RPM包卸载"><a href="#6-5-RPM包卸载" class="headerlink" title="6.5 RPM包卸载"></a>6.5 RPM包卸载</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 先查询，然后卸载</span><br><span class="line">[root@jlin ~]# rpm -qa lgrep httpd</span><br><span class="line">[root@jlin ~]# rpm -e httpd</span><br></pre></td></tr></table></figure><h2 id="6-6-RPM包校验"><a href="#6-6-RPM包校验" class="headerlink" title="6.6 RPM包校验"></a>6.6 RPM包校验</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 校验已经安装的软件包的文件是否被修改；如果执行以下命令无内容输出说明安装的软件</span><br><span class="line">[root@jlin ~]# rpm -v vsftpd</span><br><span class="line"></span><br><span class="line">S #文件的容量大小是否被改变</span><br><span class="line">M #文件的类型或者文件的属性是否被修改</span><br><span class="line">5 #MD5加密的内容已经不同</span><br><span class="line">D #装置的主/次代码已经改变</span><br><span class="line">L #路径已经被改变</span><br><span class="line">U #文件的所属主已被修改</span><br><span class="line">G #文件的所属组已被修改</span><br><span class="line">T #文件的创建时间已被改变</span><br></pre></td></tr></table></figure><h2 id="6-7-RPM重建数据库"><a href="#6-7-RPM重建数据库" class="headerlink" title="6.7 RPM重建数据库"></a>6.7 RPM重建数据库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 数据库信息在/var/lib/rpm目录</span><br><span class="line"></span><br><span class="line">// 重建数据库，重建Packages数据库，一定会重建</span><br><span class="line">rpm --rebuilddb</span><br><span class="line"></span><br><span class="line">// 初始化数据库，重建所有数据库，没有才建立，有就不建立</span><br><span class="line">rpm --initdb</span><br></pre></td></tr></table></figure><h2 id="6-8-检查软件包来源合法性"><a href="#6-8-检查软件包来源合法性" class="headerlink" title="6.8 检查软件包来源合法性"></a>6.8 检查软件包来源合法性</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">加密类型:</span><br><span class="line">对称加密 #加密解密使用同一个密钥</span><br><span class="line">公钥加密 #一对密钥，公钥和私钥。公钥隐含于私钥中，可以提取出来并公布出去</span><br><span class="line">单向加密 #只能加密不能解密</span><br><span class="line"></span><br><span class="line">// 红帽官方公钥存放位置</span><br><span class="line">/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release</span><br><span class="line"></span><br><span class="line">// 检查指定rpm包合法性，出现oK字样表示包没问题</span><br><span class="line">rpm -K PACKAGE_FILE</span><br><span class="line"></span><br><span class="line">// 导入密钥文件</span><br><span class="line">rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release1</span><br><span class="line"></span><br><span class="line">Centos 7发行版光盘提供的密钥文件名为:RPM-GPG-KEY-Centos-7</span><br></pre></td></tr></table></figure><h1 id="7、yum和dnf"><a href="#7、yum和dnf" class="headerlink" title="7、yum和dnf"></a>7、yum和dnf</h1><p>CentOS 使用 yum, dnf 解决rpm的包依赖关系<br>YUM: Yellowdog Update Modifier，rpm的前端程序，可解决软件包相关依赖性，可在多个库之间定位<br>软件包，up2date的替代工具，CentOS 8 用dnf 代替了yum ,不过保留了和yum的兼容性，配置也是通<br>用的</p><h2 id="7-1-yum-x2F-dnf-工作原理"><a href="#7-1-yum-x2F-dnf-工作原理" class="headerlink" title="7.1 yum&#x2F;dnf 工作原理"></a>7.1 yum&#x2F;dnf 工作原理</h2><p><strong>yum&#x2F;dnf 是基于C&#x2F;S 模式</strong><br>yum 服务器存放rpm包和相关包的元数据库<br>yum 客户端访问yum服务器进行安装或查询等<br><strong>yum 实现过程</strong><br>先在yum服务器上创建 yum repository（仓库），在仓库中事先存储了众多rpm包，以及包的相关的<br>元数据文件（放置于特定目录repodata下），当yum客户端利用yum&#x2F;dnf工具进行安装时包时，会自动<br>下载repodata中的元数据，查询远数据是否存在相关的包及依赖关系，自动从仓库中找到相关包下载并<br>安装。</p><h2 id="7-2-yum客户端配置"><a href="#7-2-yum客户端配置" class="headerlink" title="7.2 yum客户端配置"></a>7.2 yum客户端配置</h2><p><strong>yum客户端配置文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/yum.conf #为所有仓库提供公共配置</span><br><span class="line">/etc/yum.repos.d/*.repo： #为每个仓库的提供配置文件</span><br></pre></td></tr></table></figure><p><strong>帮助参考： man 5 yum.conf</strong><br><strong>repo仓库配置文件指向的定义：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[repositoryID]</span><br><span class="line">name=Some name for this repository</span><br><span class="line">baseurl=url://path/to/repository/</span><br><span class="line">enabled=&#123;1|0&#125;</span><br><span class="line">gpgcheck=&#123;1|0&#125;</span><br><span class="line">gpgkey=URL</span><br><span class="line">enablegroups=&#123;1|0&#125;</span><br><span class="line">failovermethod=&#123;roundrobin|priority&#125;</span><br><span class="line">roundrobin：意为随机挑选，默认值</span><br><span class="line">priority:按顺序访问</span><br><span class="line">cost= 默认为1000</span><br></pre></td></tr></table></figure><p><strong>yum服务器的baseurl形式</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">file:// 本地路径</span><br><span class="line">http://</span><br><span class="line">https://</span><br><span class="line">ftp://</span><br></pre></td></tr></table></figure><p><strong>注意：yum仓库指向的路径一定必须是repodata目录所在目录</strong><br><strong>相关变量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum的repo配置文件中可用的变量：</span><br><span class="line">$releasever: 当前OS的发行版的主版本号，如：8，7，6</span><br><span class="line">$arch: CPU架构，如：aarch64, i586, i686，x86_64等</span><br><span class="line">$basearch：系统基础平台；i386, x86_64</span><br><span class="line">$contentdir：表示目录，比如：centos-8，centos-7</span><br><span class="line">$YUM0-$YUM9:自定义变量</span><br></pre></td></tr></table></figure><h2 id="7-3-yum命令"><a href="#7-3-yum命令" class="headerlink" title="7.3 yum命令"></a>7.3 yum命令</h2><p><strong>yum命令的用法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum [options] [command] [package ...]</span><br></pre></td></tr></table></figure><p><strong>yum的命令行选项</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-y #自动回答为&quot;yes&quot;</span><br><span class="line">-q #静默模式</span><br><span class="line">--nogpgcheck #禁止进行gpg check</span><br><span class="line">--enablerepo=repoidglob #临时启用此处指定的repo，支持通配符，如：&quot;*&quot;</span><br><span class="line">--disablerepo=repoidglob #临时禁用此处指定的repo,和上面语句同时使用，放在后面的生效</span><br></pre></td></tr></table></figure><h3 id="7-3-1-显示仓库列表"><a href="#7-3-1-显示仓库列表" class="headerlink" title="7.3.1 显示仓库列表"></a>7.3.1 显示仓库列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist [all|enabled|disabled]</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><p><img src="/../image.assets/1660220348105.png" alt="1660220348105"></p><h3 id="7-3-2-显示程序包"><a href="#7-3-2-显示程序包" class="headerlink" title="7.3.2 显示程序包"></a>7.3.2 显示程序包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum list</span><br><span class="line">yum list [all | glob_exp1] [glob_exp2] [...]</span><br><span class="line">yum list &#123;available|installed|updates&#125; [glob_exp1] [...]</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum list</span><br><span class="line">yum list [all | glob_exp1] [glob_exp2] [...]</span><br><span class="line">yum list &#123;available|installed|updates&#125; [glob_exp1] [...]</span><br></pre></td></tr></table></figure><p><strong>范例：只查看安装的包</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky ~]# yum list installed|head</span><br><span class="line">Installed Packages</span><br><span class="line">NetworkManager.x86_64                1:1.32.10-4.el8                   @anaconda</span><br><span class="line">NetworkManager-config-server.noarch  1:1.32.10-4.el8                   @anaconda</span><br><span class="line">NetworkManager-libnm.x86_64          1:1.32.10-4.el8                   @anaconda</span><br><span class="line">NetworkManager-team.x86_64           1:1.32.10-4.el8                   @anaconda</span><br><span class="line">NetworkManager-tui.x86_64            1:1.32.10-4.el8                   @anaconda</span><br><span class="line">acl.x86_64                           2.2.53-1.el8.1                    @anaconda</span><br><span class="line">adcli.x86_64                         0.8.2-12.el8                      @anaconda</span><br><span class="line">alsa-sof-firmware.noarch             1.8-1.el8                         @anaconda</span><br><span class="line">at.x86_64                            3.1.20-11.el8                     @anaconda</span><br><span class="line">[root@rocky ~]# </span><br></pre></td></tr></table></figure><p><strong>范例：查看可以安装的包</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky ~]# yum list available | head</span><br><span class="line">Last metadata expiration check: 2:21:04 ago on Tue 09 Aug 2022 09:50:19 AM CST.</span><br><span class="line">Available Packages</span><br><span class="line">CUnit.i686                                             2.1.3-17.el8                                              appstream</span><br><span class="line">CUnit.x86_64                                           2.1.3-17.el8                                              appstream</span><br><span class="line">GConf2.i686                                            3.2.6-22.el8                                              appstream</span><br><span class="line">GConf2.x86_64                                          3.2.6-22.el8                                              appstream</span><br><span class="line">HdrHistogram.noarch                                    2.1.11-3.module+el8.4.0+405+66dfe7da                      appstream</span><br><span class="line">HdrHistogram-javadoc.noarch                            2.1.11-3.module+el8.4.0+405+66dfe7da                      appstream</span><br><span class="line">HdrHistogram_c.i686                                    0.9.13-2.el8                                              appstream</span><br><span class="line">HdrHistogram_c.x86_64                                  0.9.13-2.el8                                              appstream</span><br><span class="line">[root@rocky ~]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>范例：查看可以升级的包</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list updates</span><br></pre></td></tr></table></figure><p><strong>范例：查看指定的包</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#yum list exim</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sre云计算作业</title>
      <link href="/2022/08/08/homework/"/>
      <url>/2022/08/08/homework/</url>
      
        <content type="html"><![CDATA[<p><strong>第二周作业</strong></p><ol><li>运行脚本可以显示出本机的ip地址</li><li>如果ip地址中有3这个数字，那么就打印出当前的系统时间</li><li>如果ip地址中不含3这个数字，就批量建立用户magedu_00, magedu_01, … magedu_100并且所有用户同属于magedu组</li><li>打印出&#x2F;etc&#x2F;passwd这个文件中可以登陆的用户（非&#x2F;usr&#x2F;sbin&#x2F;nologin）</li><li>yum安装nginx服务，并且启动该服务</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">filename:</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">author:袁坤</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">data:2022-08-07</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------</span></span><br><span class="line"></span><br><span class="line">set -e -u</span><br><span class="line"></span><br><span class="line">IP=`ifconfig -a |grep inet |grep -v inet6 | grep -v 127.0.0.1 | tr -s &quot; &quot; | cut -d &quot; &quot; -f3`</span><br><span class="line"></span><br><span class="line">echo 本机IP地址为:$&#123;IP&#125;</span><br><span class="line"></span><br><span class="line">if echo $&#123;I&#125; | grep &#x27;3&#x27;;then</span><br><span class="line">echo `date +%Y-%m-%d-%T`</span><br><span class="line">else</span><br><span class="line">groupadd magedu</span><br><span class="line">for i in magedu_&#123;0..100&#125;;do</span><br><span class="line">useradd $&#123;i&#125; -g magedu</span><br><span class="line">done</span><br><span class="line">fi;</span><br><span class="line"></span><br><span class="line">NOLOGIN=`grep -v &#x27;/usr/sbin/nologin&#x27; /etc/passwd | cut -d &quot;:&quot; -f1`</span><br><span class="line">echo $&#123;NOLOGIN&#125;</span><br><span class="line"></span><br><span class="line">. /etc/os-release</span><br><span class="line">if [ $ID = &quot;rocky&quot; -o $ID = &quot;centos&quot; ];then</span><br><span class="line">echo os is version $&#123;ID&#125;</span><br><span class="line">yum -y install nginx &amp;&amp; systemctl start nginx</span><br><span class="line">else [ $ID = &quot;ubuntu&quot; ];</span><br><span class="line">echo os is version $ID</span><br><span class="line">apt update &amp;&amp; apt -y install nginx &amp;&amp; systemctl start nginx</span><br><span class="line"></span><br><span class="line">fi;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>磁盘存储和文件系统管理</title>
      <link href="/2022/08/07/Disk/"/>
      <url>/2022/08/07/Disk/</url>
      
        <content type="html"><![CDATA[<h1 id="磁盘管理与文件系统"><a href="#磁盘管理与文件系统" class="headerlink" title="磁盘管理与文件系统"></a>磁盘管理与文件系统</h1><p><strong>前言</strong><br>磁盘是计算机主要的存储介质，可以存储大量的二进制数据，并且断电后也能保持数据不丢失，使用磁盘存储数据的时候我们可以将磁盘划分成我们所需要的格式来进行使用</p><h1 id="1-磁盘结构"><a href="#1-磁盘结构" class="headerlink" title="1. 磁盘结构"></a>1. 磁盘结构</h1><p><strong>1、硬盘的物理结构</strong><br>盘片：硬盘有多个盘片，每个盘片有2面<br>磁头：每面有一个磁头</p><p><strong>2.硬盘数据结构</strong><br>扇区：磁盘上的每个磁道被等分为若干个弧段，这些弧段便是硬盘的扇区。硬盘的第一个扇区，叫做引导扇区 ，盘片被分为多个扇形区域，每个扇区存放512字节的数据，是硬盘最小的存储单元<br>磁道：当磁盘旋转时，磁头若保持在一个位置上，则每个磁头都会在磁盘表面划出一个圆形轨迹，这些圆形轨迹就叫做磁道<br>柱面：在有多个盘片构成的盘组中，由不同盘片的面，但处于同一半径圆的多个磁道组成的一个圆柱面</p><p><strong>3、磁盘结构</strong><br>硬盘存储容量 &#x3D; 磁头数 x 磁道（柱面）数 x 每道扇区数 x 每扇区字节数（512字节）<br>可以用柱面&#x2F;磁头&#x2F;扇区来唯一定位磁盘上的每一个区域<br>磁盘的接口类型：IDE、SATA、SCSI、SAS、光纤通道<br>用 fdisk -l 查看分区信息</p><h1 id="2-管理存储"><a href="#2-管理存储" class="headerlink" title="2. 管理存储"></a>2. 管理存储</h1><h2 id="2-1-磁盘分区"><a href="#2-1-磁盘分区" class="headerlink" title="2.1 磁盘分区"></a>2.1 磁盘分区</h2><h3 id="2-1-1-为什么分区"><a href="#2-1-1-为什么分区" class="headerlink" title="2.1.1 为什么分区"></a>2.1.1 为什么分区</h3><ul><li>优化I&#x2F;O性能</li><li>实现磁盘空间配额限制</li><li>提高修复速度</li><li>隔离系统和程序</li><li>安装多个OS</li><li>采用不同文件系统</li></ul><h3 id="2-1-2-分区方式"><a href="#2-1-2-分区方式" class="headerlink" title="2.1.2 分区方式"></a>2.1.2 分区方式</h3><p>两种分区方式：MBR，GPT</p><p><strong>MBR分区</strong></p><p>MBR：Master Boot Record，1982年，使用32位表示扇区数，分区不超过2T<br>划分分区的单位：<br>CentOS 5 之前按整柱面划分<br>CentOS 6 版本后可以按Sector划分<br>0磁道0扇区：512bytes<br>446bytes: boot loader 启动相关<br>64bytes：分区表，其中每16bytes标识一个分区<br>2bytes: 55AA，标识位<br>MBR分区中一块硬盘最多有4个主分区，也可以3主分区+1扩展(N个逻辑分区)<br>MBR分区：主和扩展分区对应的1–4，&#x2F;dev&#x2F;sda3，逻辑分区从5开始，&#x2F;dev&#x2F;sda5</p><p>问题：利用分区策略相同的另一台主机的分区表来还原和恢复当前主机破环的分区表？</p><p><strong>GPT分区</strong><br>GPT：GUID（Globals Unique Identifiers） partition table 支持128个分区，使用64位，支持8Z（<br>512Byte&#x2F;block ）64Z （ 4096Byte&#x2F;block）<br>使用128位UUID(Universally Unique Identifier) 表示磁盘和分区 GPT分区表自动备份在头和尾两份，<br>并有CRC校验位<br>UEFI (Unified Extensible Firmware Interface 统一可扩展固件接口)硬件支持GPT，使得操作系统可以<br>启动</p><p><strong>GPT分区结构分为4个区域：</strong></p><ul><li>GPT头</li><li>分区表</li><li>GPT分区</li><li>备份区域</li></ul><h2 id="2-2-管理分区"><a href="#2-2-管理分区" class="headerlink" title="2.2 管理分区"></a>2.2 管理分区</h2><p><strong>列出块设备</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk</span><br></pre></td></tr></table></figure><p><strong>创建分区命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fdisk 管理MBR分区</span><br><span class="line">gdisk 管理GPT分区</span><br><span class="line">parted 高级分区操作，可以是交互或非交互方式</span><br></pre></td></tr></table></figure><p><strong>重新设置内存中的内核分区表版本，适合于除了CentOS 6 以外的其它版本 5，7，8</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">partprobe</span><br></pre></td></tr></table></figure><h3 id="2-2-1-添加并检测新硬盘"><a href="#2-2-1-添加并检测新硬盘" class="headerlink" title="2.2.1 添加并检测新硬盘"></a>2.2.1 添加并检测新硬盘</h3><p>1、添加新硬盘使用lsblk命令显示出块设备</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:~# lsblk</span><br><span class="line">NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">loop0                       7:0    0 61.9M  1 loop /snap/core20/1328</span><br><span class="line">loop1                       7:1    0 67.2M  1 loop /snap/lxd/21835</span><br><span class="line">loop2                       7:2    0   62M  1 loop /snap/core20/1587</span><br><span class="line">loop3                       7:3    0 43.6M  1 loop /snap/snapd/14978</span><br><span class="line">loop4                       7:4    0   47M  1 loop /snap/snapd/16292</span><br><span class="line">loop5                       7:5    0 67.8M  1 loop /snap/lxd/22753</span><br><span class="line">sda                         8:0    0   20G  0 disk </span><br><span class="line">├─sda1                      8:1    0    1M  0 part </span><br><span class="line">├─sda2                      8:2    0  1.5G  0 part /boot</span><br><span class="line">└─sda3                      8:3    0 18.5G  0 part </span><br><span class="line">  └─ubuntu--vg-ubuntu--lv 253:0    0   10G  0 lvm  /</span><br><span class="line">sr0                        11:0    1  1.2G  0 rom </span><br></pre></td></tr></table></figure><p>发现并没有检测出来新添加的硬盘</p><p> 2、检测新硬盘</p><p>方法1：可以重启电脑</p><p>方法2： 重新扫描存储设备的scsi总线 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># host后面的数字不是固定的，以实际为准</span><br><span class="line">root@ubuntu200404:~# echo &#x27;- - -&#x27; &gt; /sys/class/scsi_host/host32/scan</span><br></pre></td></tr></table></figure><p>再次使用lsblk命令查看发现已经多了sda的硬盘，说明成功了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:~# lsblk</span><br><span class="line">NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">loop0                       7:0    0 61.9M  1 loop /snap/core20/1328</span><br><span class="line">loop1                       7:1    0 67.2M  1 loop /snap/lxd/21835</span><br><span class="line">loop2                       7:2    0   62M  1 loop /snap/core20/1587</span><br><span class="line">loop3                       7:3    0 43.6M  1 loop /snap/snapd/14978</span><br><span class="line">loop4                       7:4    0   47M  1 loop /snap/snapd/16292</span><br><span class="line">loop5                       7:5    0 67.8M  1 loop /snap/lxd/22753</span><br><span class="line">sda                         8:0    0   20G  0 disk </span><br><span class="line">├─sda1                      8:1    0    1M  0 part </span><br><span class="line">├─sda2                      8:2    0  1.5G  0 part /boot</span><br><span class="line">└─sda3                      8:3    0 18.5G  0 part </span><br><span class="line">  └─ubuntu--vg-ubuntu--lv 253:0    0   10G  0 lvm  /</span><br><span class="line">sdb                         8:16   0   20G  0 disk# 新添加的硬盘 </span><br><span class="line">sr0                        11:0    1  1.2G  0 rom</span><br></pre></td></tr></table></figure><h3 id="2-2-2-partend命令"><a href="#2-2-2-partend命令" class="headerlink" title="2.2.2 partend命令"></a>2.2.2 partend命令</h3><p><strong>注意：parted的操作都是实时生效的，小心使用</strong></p><p>格式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parted [选项]... [设备 [命令 [参数]...]...]</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">parted /dev/sdb mklabel gpt|msdos</span><br><span class="line">parted /dev/sdb print</span><br><span class="line">parted /dev/sdb mkpart primary 1 200 （默认M）</span><br><span class="line">parted /dev/sdb rm 1</span><br><span class="line">parted -l 列出所有硬盘分区信息</span><br></pre></td></tr></table></figure><h3 id="2-2-3-分区工具fdisk和gdisk"><a href="#2-2-3-分区工具fdisk和gdisk" class="headerlink" title="2.2.3 分区工具fdisk和gdisk"></a>2.2.3 分区工具fdisk和gdisk</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l [-u] [device...] 查看分区</span><br><span class="line">fdisk [device...] 管理MBR分区</span><br><span class="line">gdisk [device...] 类fdisk 的GPT分区工具</span><br><span class="line"></span><br><span class="line"># 范例：</span><br><span class="line">fdisk /dev/sdb</span><br></pre></td></tr></table></figure><p><strong>子命令：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">p 分区列表</span><br><span class="line">t 更改分区类型</span><br><span class="line">n 创建新分区</span><br><span class="line">d 删除分区</span><br><span class="line">v 校验分区</span><br><span class="line">u 转换单位</span><br><span class="line">w 保存并退出</span><br><span class="line">q 不保存并退出</span><br></pre></td></tr></table></figure><p><strong>查看内核是否已经识别新的分区</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/partitions</span><br></pre></td></tr></table></figure><p><strong>CentOS 7,8 同步分区表:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">partprobe</span><br></pre></td></tr></table></figure><h2 id="2-3-文件系统"><a href="#2-3-文件系统" class="headerlink" title="2.3 文件系统"></a>2.3 文件系统</h2><h3 id="2-3-1-文件系统概念"><a href="#2-3-1-文件系统概念" class="headerlink" title="2.3.1 文件系统概念"></a>2.3.1 文件系统概念</h3><p>文件系统是操作系统用于明确存储设备或分区上的文件的方法和数据结构；即在存储设备上组织文件的<br>方法。操作系统中负责管理和存储文件信息的软件结构称为文件管理系统，简称文件系统<br>从系统角度来看，文件系统是对文件存储设备的空间进行组织和分配，负责文件存储并对存入的文件进<br>行保护和检索的系统。具体地说，它负责为用户建立文件，存入、读出、修改、转储文件，控制文件的<br>存取，安全控制，日志，压缩，加密等<br>支持的文件系统：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/lib/modules/`uname -r`/kernel/fs</span><br></pre></td></tr></table></figure><p>(各种文件系统)[<a href="https://en.wikipedia.org/wiki/Comparison_of_file_systems]">https://en.wikipedia.org/wiki/Comparison_of_file_systems]</a></p><p><strong>帮助：</strong>man 5 fs</p><h3 id="2-3-2-文件系统类型"><a href="#2-3-2-文件系统类型" class="headerlink" title="2.3.2 文件系统类型"></a>2.3.2 文件系统类型</h3><p><strong>Linux常用文件系统</strong></p><ul><li>ext2：Extended file system 适用于那些分区容量不是太大，更新也不频繁的情况，例如 &#x2F;boot 分<br>区</li><li>ext3：是 ext2 的改进版本，其支持日志功能，能够帮助系统从非正常关机导致的异常中恢复</li><li>ext4：是 ext 文件系统的最新版。提供了很多新的特性，包括纳秒级时间戳、创建和使用巨型文件<br>(16TB)、最大1EB的文件系统，以及速度的提升</li><li>xfs：SGI，支持最大8EB的文件系统</li><li>swap</li><li>iso9660 光盘</li><li>btrfs（Oracle）</li><li>reiserfs</li></ul><p><strong>Windows 常用文件系统</strong></p><ul><li>FAT32</li><li>NTFS</li><li>exFAT</li><li>Unix：</li><li>FFS（fast）</li><li>UFS（unix）</li><li>JFS2</li></ul><p><strong>网络文件系统：</strong></p><ul><li>NFS</li><li>CIFS</li></ul><p><strong>集群文件系统：</strong></p><ul><li>GFS2</li><li>OCFS2（oracle）</li></ul><p><strong>分布式文件系统：</strong></p><ul><li>fastdfs</li><li>ceph</li><li>moosefs</li><li>mogilefs</li><li>glusterfs</li><li>Lustre</li></ul><p><strong>RAW：</strong></p><p>裸文件系统,未经处理或者未经格式化产生的文件系统<br>常用的文件系统特性：</p><p><strong>FAT32</strong></p><ul><li>最多只能支持16TB的文件系统和4GB的文件</li></ul><p><strong>NTFS</strong></p><ul><li>最多只能支持16EB的文件系统和16EB的文件</li></ul><p><strong>EXT3</strong></p><ul><li>最多只能支持32TB的文件系统和2TB的文件，实际只能容纳2TB的文件系统和16GB的文件</li><li>Ext3目前只支持32000个子目录</li><li>Ext3文件系统使用32位空间记录块数量和 inode数量</li><li>当数据写入到Ext3文件系统中时，Ext3的数据块分配器每次只能分配一个4KB的块</li></ul><p><strong>EXT4：</strong></p><ul><li>EXT4是Linux系统下的日志文件系统，是EXT3文件系统的后继版本</li><li>Ext4的文件系统容量达到1EB，而支持单个文件则达到16TB</li><li>理论上支持无限数量的子目录</li><li>Ext4文件系统使用64位空间记录块数量和 inode数量</li><li>Ext4的多块分配器支持一次调用分配多个数据块</li><li>修复速度更快</li></ul><p><strong>XFS</strong></p><ul><li>根据所记录的日志在很短的时间内迅速恢复磁盘文件内容</li><li>用优化算法，日志记录对整体文件操作影响非常小</li><li>是一个全64-bit的文件系统，最大可以支持8EB的文件系统，而支持单个文件则达到8EB</li><li>能以接近裸设备I&#x2F;O的性能存储数据</li></ul><p><strong>查前支持的文件系统：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/filesystems</span><br></pre></td></tr></table></figure><h3 id="2-3-3-文件系统的组成部分"><a href="#2-3-3-文件系统的组成部分" class="headerlink" title="2.3.3 文件系统的组成部分"></a>2.3.3 文件系统的组成部分</h3><p>内核中的模块：ext4, xfs, vfat<br>Linux的虚拟文件系统：VFS<br>用户空间的管理工具：mkfs.ext4, mkfs.xfs,mkfs.vfat</p><h3 id="2-3-4-文件系统选择管理"><a href="#2-3-4-文件系统选择管理" class="headerlink" title="2.3.4 文件系统选择管理"></a>2.3.4 文件系统选择管理</h3><h4 id="2-3-4-1-创建文件系统"><a href="#2-3-4-1-创建文件系统" class="headerlink" title="2.3.4.1 创建文件系统"></a>2.3.4.1 创建文件系统</h4><p><strong>创建文件管理工具</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkfs命令：</span><br><span class="line">(1) mkfs.FS_TYPE /dev/DEVICE</span><br><span class="line">ext4</span><br><span class="line">xfs</span><br><span class="line">btrfs</span><br><span class="line">vfat</span><br><span class="line">(2) mkfs -t FS_TYPE /dev/DEVICE</span><br><span class="line">-L &#x27;LABEL&#x27; 设定卷标</span><br><span class="line">mke2fs：ext系列文件系统专用管理工具</span><br></pre></td></tr></table></figure><p><strong>常用选项：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-t &#123;ext2|ext3|ext4|xfs&#125; 指定文件系统类型</span><br><span class="line">-b &#123;1024|2048|4096&#125; 指定块 block 大小</span><br><span class="line">-L ‘LABEL’ 设置卷标</span><br><span class="line">-j 相当于 -t ext3， mkfs.ext3 = mkfs -t ext3 = mke2fs -j = mke2fs -t ext3</span><br><span class="line">-i # 为数据空间中每多少个字节创建一个inode；不应该小于block大</span><br><span class="line">小</span><br><span class="line">-N # 指定分区中创建多少个inode</span><br><span class="line">-I 一个inode记录占用的磁盘空间大小，128---4096</span><br><span class="line">-m # 默认5%,为管理人员预留空间占总空间的百分比</span><br><span class="line">-O FEATURE[,...] 启用指定特性</span><br><span class="line">-O ^FEATURE </span><br></pre></td></tr></table></figure><p><strong>案例：mkfs.ext4 &#x2F;dev&#x2F;sdb1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:~# mkfs.ext4 /dev/sdb1</span><br><span class="line">mke2fs 1.45.5 (07-Jan-2020)</span><br><span class="line">Creating filesystem with 2621440 4k blocks and 655360 inodes</span><br><span class="line">Filesystem UUID: a7ef4142-26e5-43dd-b9d0-24c4d09155a1</span><br><span class="line">Superblock backups stored on blocks: </span><br><span class="line">32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632</span><br><span class="line"></span><br><span class="line">Allocating group tables: done                            </span><br><span class="line">Writing inode tables: done                            </span><br><span class="line">Creating journal (16384 blocks): done</span><br><span class="line">Writing superblocks and filesystem accounting information: done </span><br><span class="line"></span><br><span class="line">root@ubuntu200404:~# </span><br></pre></td></tr></table></figure><h4 id="2-3-4-2-查看和管理分区信息"><a href="#2-3-4-2-查看和管理分区信息" class="headerlink" title="2.3.4.2 查看和管理分区信息"></a>2.3.4.2 查看和管理分区信息</h4><p>blkid 可以查看块设备属性信息<br>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blkid [OPTION]... [DEVICE]</span><br></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-U UUID 根据指定的UUID来查找对应的设备</span><br><span class="line">-L LABEL 根据指定的LABEL来查找对应的设备</span><br><span class="line">e2label：管理ext系列文件系统的LABEL</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e2label DEVICE [LABEL]</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:~# blkid /dev/sdb1</span><br><span class="line">/dev/sdb1: UUID=&quot;a7ef4142-26e5-43dd-b9d0-24c4d09155a1&quot; TYPE=&quot;ext4&quot; PARTUUID=&quot;db60ac71-01&quot;</span><br><span class="line">root@ubuntu200404:~# </span><br></pre></td></tr></table></figure><p><strong>查找分区</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">findfs [options] LABEL=&lt;label&gt;</span><br><span class="line">findfs [options] UUID=&lt;uuid&gt;</span><br></pre></td></tr></table></figure><p><strong>tune2fs：重新设定ext系列文件系统可调整参数的值</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-l 查看指定文件系统超级块信息；super block</span><br><span class="line">-L &#x27;LABEL’ 修改卷标</span><br><span class="line">-m # 修预留给管理员的空间百分比</span><br><span class="line">-j 将ext2升级为ext3</span><br><span class="line">-O 文件系统属性启用或禁用, -O ^has_journal</span><br><span class="line">-o 调整文件系统的默认挂载选项，-o ^acl</span><br><span class="line">-U UUID 修改UUID号</span><br></pre></td></tr></table></figure><p><strong>dumpe2fs：显示ext文件系统信息，将磁盘块分组管理</strong><br>-h：查看超级块信息，不显示分组信息</p><p><strong>范例：查看ext文件系统的元数据和块组信息</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:~# dumpe2fs /dev/sdb1</span><br><span class="line">dumpe2fs 1.45.5 (07-Jan-2020)</span><br><span class="line">Filesystem volume name:   &lt;none&gt;</span><br><span class="line">Last mounted on:          &lt;not available&gt;</span><br><span class="line">Filesystem UUID:          a7ef4142-26e5-43dd-b9d0-24c4d09155a1</span><br><span class="line">Filesystem magic number:  0xEF53</span><br><span class="line">Filesystem revision #:    1 (dynamic)</span><br><span class="line">Filesystem features:      has_journal ext_attr resize_inode dir_index filetype extent 64bit flex_bg sparse_super large_file huge_file dir_nlink extra_isize metadata_csum</span><br><span class="line">Filesystem flags:         signed_directory_hash </span><br><span class="line">Default mount options:    user_xattr acl</span><br><span class="line">Filesystem state:         clean</span><br><span class="line">Errors behavior:          Continue</span><br><span class="line">Filesystem OS type:       Linux</span><br><span class="line">Inode count:              655360</span><br><span class="line">Block count:              2621440</span><br><span class="line">Reserved block count:     131072</span><br><span class="line">Free blocks:              2554687</span><br><span class="line">Free inodes:              655349</span><br><span class="line">First block:              0</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p><strong>xfs_info：显示示挂载或已挂载的 xfs 文件系统信息</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfs_info mountpoint|devname</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfs_info /dev/sda1</span><br></pre></td></tr></table></figure><h4 id="2-3-4-3-文件系统检测和修复"><a href="#2-3-4-3-文件系统检测和修复" class="headerlink" title="2.3.4.3 文件系统检测和修复"></a>2.3.4.3 文件系统检测和修复</h4><p>文件系统夹故障常发生于死机或者非正常关机之后，挂载为文件系统标记为“no clean”<br><strong>注意：一定不要在挂载状态下执行下面命令修复</strong></p><p>fsck: File System Check</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fsck.FS_TYPE</span><br><span class="line">fsck -t FS_TYPE</span><br></pre></td></tr></table></figure><p><strong>注意：FS_TYPE 一定要与分区上已经文件类型相同</strong></p><p><strong>常用选项</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-a 自动修复</span><br><span class="line">-r 交互式修复错误</span><br></pre></td></tr></table></figure><p><strong>e2fsck：ext系列文件专用的检测修复工具</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-y 自动回答为yes</span><br><span class="line">-f 强制修复</span><br><span class="line">-p 自动进行安全的修复文件系统问题</span><br></pre></td></tr></table></figure><p><strong>用法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e2fsck /dev/sdb2</span><br></pre></td></tr></table></figure><p><strong>xfs_repair：xfs文件系统专用检测修复工具</strong><br><strong>常用选项：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-f 修复文件，而设备</span><br><span class="line">-n 只检查</span><br><span class="line">-d 允许修复只读的挂载设备，在单用户下修复 / 时使用，然后立即reboot</span><br></pre></td></tr></table></figure><p><strong>用法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfs_repair /dev/sda1 </span><br></pre></td></tr></table></figure><h2 id="2-4-挂载"><a href="#2-4-挂载" class="headerlink" title="2.4 挂载"></a>2.4 挂载</h2><p>挂载:将额外文件系统与根文件系统某现存的目录建立起关联关系，进而使得此目录做为其它文件访问入<br>口的行为<br>卸载:为解除此关联关系的过程<br>把设备关联挂载点：mount Point<br>挂载点下原有文件在挂载完成后会被临时隐藏，因此，挂载点目录一般为空<br>进程正在使用中的设备无法被卸载</p><h3 id="2-4-1-挂载文件系统-mount"><a href="#2-4-1-挂载文件系统-mount" class="headerlink" title="2.4.1 挂载文件系统 mount"></a>2.4.1 挂载文件系统 mount</h3><p><strong>格式</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount [-fnrsvw] [-t vfstype] [-o options] device mountpoint</span><br></pre></td></tr></table></figure><p>device：指明要挂载的设备</p><ul><li>设备文件：例如:&#x2F;dev&#x2F;sda5</li><li>卷标：-L ‘LABEL’, 例如 -L ‘MYDATA’</li><li>UUID： -U ‘UUID’：例如 -U ‘0c50523c-43f1-45e7-85c0-a126711d406e’</li><li>伪文件系统名称：proc, sysfs, devtmpfs, configfs</li></ul><p>mountpoint：挂载点目录必须事先存在，建议使用空目录<br>mount 常用命令选项  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-t fstype 指定要挂载的设备上的文件系统类型,如:ext4,xfs</span><br><span class="line">-r readonly，只读挂载</span><br><span class="line">-w read and write, 读写挂载,此为默认设置,可省略</span><br><span class="line">-n 不更新/etc/mtab，mount不可见</span><br><span class="line">-a 自动挂载所有支持自动挂载的设备(定义在了/etc/fstab文件中，且挂载选项中有</span><br><span class="line">auto功能)</span><br><span class="line">-L &#x27;LABEL&#x27; 以卷标指定挂载设备</span><br><span class="line">-U &#x27;UUID&#x27; 以UUID指定要挂载的设备</span><br><span class="line">-B, --bind 绑定目录到另一个目录上</span><br><span class="line">-o options：(挂载文件系统的选项)，多个选项使用逗号分隔</span><br><span class="line">async 异步模式,内存更改时,写入缓存区buffer,过一段时间再写到磁盘中，效率高，但不安全</span><br><span class="line">sync 同步模式,内存更改时，同时写磁盘，安全，但效率低下</span><br><span class="line">atime/noatime 包含目录和文件</span><br><span class="line">diratime/nodiratime 目录的访问时间戳</span><br><span class="line">auto/noauto 是否支持开机自动挂载，是否支持-a选项</span><br><span class="line">exec/noexec 是否支持将文件系统上运行应用程序</span><br><span class="line">dev/nodev 是否支持在此文件系统上使用设备文件</span><br><span class="line">suid/nosuid 是否支持suid和sgid权限</span><br><span class="line">remount 重新挂载</span><br><span class="line">ro/rw 只读、读写</span><br><span class="line">user/nouser 是否允许普通用户挂载此设备，/etc/fstab使用</span><br><span class="line">acl/noacl 启用此文件系统上的acl功能</span><br><span class="line">loop 使用loop设备</span><br><span class="line">_netdev 当网络可用时才对网络资源进行挂载，如：NFS文件系统</span><br><span class="line">defaults 相当于rw, suid, dev, exec, auto, nouser, async</span><br></pre></td></tr></table></figure><p><strong>挂载规则:</strong></p><ul><li>一个挂载点同一时间只能挂载一个设备</li><li>一个挂载点同一时间挂载了多个设备，只能看到最后一个设备的数据，其它设备上的数据将被隐藏</li><li>一个设备可以同时挂载到多个挂载点</li><li>通常挂载点一般是已存在空的目录</li></ul><p><strong>范例:挂载案例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data# mount /dev/sdb1 /data/mysql_mount/</span><br><span class="line">root@ubuntu200404:/data# df</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1659865748687.png" alt="1659865748687"></p><h3 id="2-4-2-卸载文件系统-umount"><a href="#2-4-2-卸载文件系统-umount" class="headerlink" title="2.4.2 卸载文件系统 umount"></a>2.4.2 卸载文件系统 umount</h3><p>卸载时：可使用设备，也可以使用挂载点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount 设备名|挂载点</span><br></pre></td></tr></table></figure><h3 id="2-4-3-查看挂载情况"><a href="#2-4-3-查看挂载情况" class="headerlink" title="2.4.3 查看挂载情况"></a>2.4.3 查看挂载情况</h3><p><strong>查看挂载</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#通过查看/etc/mtab文件显示当前已挂载的所有设备</span><br><span class="line">mount</span><br><span class="line">#查看内核追踪到的已挂载的所有设备</span><br><span class="line">cat /proc/mounts</span><br></pre></td></tr></table></figure><p><strong>查看挂载点情况</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">findmnt MOUNT_POINT|device</span><br></pre></td></tr></table></figure><p><strong>查看正在访问指定文件系统的进程</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsof MOUNT_POINT</span><br><span class="line">fuser -v MOUNT_POINT</span><br></pre></td></tr></table></figure><p><strong>终止所有在正访问指定的文件系统的进程</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fuser -km MOUNT_POINT</span><br></pre></td></tr></table></figure><h3 id="2-4-4-持久挂载"><a href="#2-4-4-持久挂载" class="headerlink" title="2.4.4 持久挂载"></a>2.4.4 持久挂载</h3><p>将挂载保存到 &#x2F;etc&#x2F;fstab 中可以下次开机时，自动启用挂载<br>&#x2F;etc&#x2F;fstab格式帮助：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man 5 fstab</span><br></pre></td></tr></table></figure><p>每行定义一个要挂载的文件系统,，其中包括共 6 项</p><ul><li>要挂载的设备或伪文件系统设备文件<br>LABEL：LABEL&#x3D;””<br>UUID：UUID&#x3D;””<br>伪文件系统名称：proc, sysfs</li><li>挂载点：必须是事先存在的目录</li><li>文件系统类型：ext4，xfs，iso9660，nfs，none</li><li>挂载选项：defaults ，acl，bind</li><li>转储频率：0：不做备份 1：每天转储 2：每隔一天转储</li><li>fsck检查的文件系统的顺序：允许的数字是0 1 2<br>0：不自检 ，1：首先自检；一般只有rootfs才用 2：非rootfs使用</li></ul><p><strong>添加新的挂载项，需要执行下面命令生效</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -a</span><br></pre></td></tr></table></figure><p><strong>范例：centos7, 8 &#x2F;etc&#x2F;fstab 的分区UUID错误，无法启动</strong>*</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">自动进入emergency mode,输入root 密码</span><br><span class="line">#cat /proc/mounts 可以查看到/ 以rw方式挂载</span><br><span class="line">#vim /etc/fstab</span><br><span class="line">#reboot</span><br></pre></td></tr></table></figure><p><strong>范例：centos 6 &#x2F;etc&#x2F;fstab 的分区UUID错误，无法启动</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">如果/etc/fstab 的挂载设备出错，比如文件系统故障，并且文件系统检测项（即第6项为非0），将导致无</span><br><span class="line">法启动</span><br><span class="line">自动进入emergency mode,输入root 密码</span><br><span class="line">#cat /proc/mounts 可以查看到/ 以ro方式挂载，无法直接修改配置文件</span><br><span class="line">#mount -o remount,rw /</span><br><span class="line">#vim /etc/fstab</span><br><span class="line">将故障行的最后1项，即第6项修改为0，开机不检测此项挂载设备的健康性，从而忽略错误，能实现启动</span><br></pre></td></tr></table></figure><p><strong>范例：&#x2F;etc&#x2F;fstab格式</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data# cat /etc/fstab </span><br><span class="line"># /etc/fstab: static file system information.</span><br><span class="line">#</span><br><span class="line"># Use &#x27;blkid&#x27; to print the universally unique identifier for a</span><br><span class="line"># device; this may be used with UUID= as a more robust way to name devices</span><br><span class="line"># that works even if disks are added and removed. See fstab(5).</span><br><span class="line">#</span><br><span class="line"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</span><br><span class="line"># / was on /dev/ubuntu-vg/ubuntu-lv during curtin installation</span><br><span class="line">/dev/disk/by-id/dm-uuid-LVM-3aQ0WgB04ZXwNPYVAYy9ssb3Wd06E34ggUUxCcYQaVwAb0L03K40wpOxbnqqqa3f / ext4 defaults 0 1</span><br><span class="line"># /boot was on /dev/sda2 during curtin installation</span><br><span class="line">/dev/disk/by-uuid/5e8f9763-2db8-48d0-85e2-a26d76521e2f /boot ext4 defaults 0 1</span><br><span class="line">/swap.imgnoneswapsw00</span><br><span class="line">root@ubuntu200404:/data# </span><br></pre></td></tr></table></figure><p><strong>范例：添加新的挂载点后修改&#x2F;etc&#x2F;fstab文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># /etc/fstab: static file system information.</span><br><span class="line"># </span><br><span class="line"># Use &#x27;blkid&#x27; to print the universally unique identifier for a</span><br><span class="line"># device; this may be used with UUID= as a more robust way to name devices</span><br><span class="line"># that works even if disks are added and removed. See fstab(5).</span><br><span class="line">#</span><br><span class="line"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</span><br><span class="line"># / was on /dev/ubuntu-vg/ubuntu-lv during curtin installation</span><br><span class="line">/dev/disk/by-id/dm-uuid-LVM-3aQ0WgB04ZXwNPYVAYy9ssb3Wd06E34ggUUxCcYQaVwAb0L03K40wpOxbnqqqa3f / ext4 defaults 0 1</span><br><span class="line"># /boot was on /dev/sda2 during curtin installation</span><br><span class="line">/dev/disk/by-uuid/5e8f9763-2db8-48d0-85e2-a26d76521e2f /boot ext4 defaults 0 1</span><br><span class="line">/swap.img       none    swap    sw      0       0</span><br><span class="line"></span><br><span class="line"># 添加该行后、重启系统</span><br><span class="line">UUID=0e850a4a-028d-48b2-aa18-dd8b16090aa6  /data/mysql_mount  ext4  defaults  0  0</span><br></pre></td></tr></table></figure><h2 id="2-5-处理交换文件和分区"><a href="#2-5-处理交换文件和分区" class="headerlink" title="2.5 处理交换文件和分区"></a>2.5 处理交换文件和分区</h2><h3 id="2-5-1-swap分区"><a href="#2-5-1-swap分区" class="headerlink" title="2.5.1 swap分区"></a>2.5.1 swap分区</h3><p>swap交换分区是系统RAM的补充，swap 分区支持虚拟内存。当没有足够的 RAM 保存系统处理的数据<br>时会将数据写入 swap 分区，当系统缺乏 swap 空间时，内核会因 RAM 内存耗尽而终止进程。配置过<br>多 swap 空间会造成存储设备处于分配状态但闲置，造成浪费，过多 swap 空间还会掩盖内存泄露<br>注意：为优化性能，可以将swap 分布存放，或高性能磁盘存放  </p><h3 id="2-5-2-交换分区实现过程"><a href="#2-5-2-交换分区实现过程" class="headerlink" title="2.5.2 交换分区实现过程"></a>2.5.2 交换分区实现过程</h3><ol><li>创建交换分区或者文件</li><li>使用mkswap写入特殊签名</li><li>在&#x2F;etc&#x2F;fstab文件中添加适当的条目</li><li>使用swapon -a 激活交换空间</li></ol><p><strong>启用swap分区</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon [OPTION]... [DEVICE]</span><br></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-a #激活所有的交换分区</span><br><span class="line">-p PRIORITY #指定优先级(-1到32767之间)，值越大,优先级越高.也可在/etc/fstab文件中的第4列指</span><br><span class="line">定：pri=value</span><br></pre></td></tr></table></figure><p><strong>范例:创建swap分区</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#mkswap /dev/sdc1</span><br></pre></td></tr></table></figure><p><strong>禁用swap分区</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapoff [OPTION]... [DEVICE]</span><br></pre></td></tr></table></figure><p><strong>范例:禁用swap分区</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#sed -i.bak &#x27;/swap/d&#x27; /etc/fstab</span><br><span class="line">[root@centos8 ~]#swapoff -a</span><br></pre></td></tr></table></figure><h3 id="2-5-3-swap的使用策略"><a href="#2-5-3-swap的使用策略" class="headerlink" title="2.5.3 swap的使用策略"></a>2.5.3 swap的使用策略</h3><p>&#x2F;proc&#x2F;sys&#x2F;vm&#x2F;swappiness 的值决定了当内存占用达到一定的百分比时，会启用swap分区的空间<br>使用规则</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">当内存使用率达到100-swappiness时,会启用交换分区</span><br><span class="line">简单地说这个参数定义了系统对swap的使用倾向，此值越大表示越倾向于使用swap。</span><br><span class="line">可以设为0，这样做并不会禁止对swap的使用，只是最大限度地降低了使用swap的可能性</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#说明：CentOS7和8默认值为30，内存在使用到100-30=70%的时候，就开始出现有交换分区的使用。</span><br><span class="line">[root@centos8 ~]# cat /proc/sys/vm/swappiness</span><br></pre></td></tr></table></figure><h2 id="2-6-磁盘常见工具"><a href="#2-6-磁盘常见工具" class="headerlink" title="2.6 磁盘常见工具"></a>2.6 磁盘常见工具</h2><h3 id="2-6-1-df"><a href="#2-6-1-df" class="headerlink" title="2.6.1 df"></a>2.6.1 df</h3><p>文件系统空间实际真正占用等信息的查看工具 df</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df [OPTION]... [FILE]...</span><br></pre></td></tr></table></figure><p><strong>常用选项</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-H 以10为单位</span><br><span class="line">-T 文件系统类型</span><br><span class="line">-h human-readable</span><br><span class="line">-i inodes instead of blocks</span><br><span class="line">-P 以Posix兼容的格式输出</span><br></pre></td></tr></table></figure><h3 id="2-6-3-du"><a href="#2-6-3-du" class="headerlink" title="2.6.3 du"></a>2.6.3 du</h3><p>查看某目录总体空间实际占用状态 du</p><p>显示指定目录下面各个子目录的大小,单位为KB</p><p><strong>常用选项</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-a --all 显示所有文件和目录的大小,默认只显示目录大小</span><br><span class="line">-h human-readable</span><br><span class="line">-s summary</span><br><span class="line">--max-depth=# 指定最大目录层级</span><br><span class="line">-x, --one-file-system #忽略不在同一个文件系统的目录</span><br></pre></td></tr></table></figure><p><strong>面试题</strong></p><p>1.df 和 du 区别?什么时候df &gt;du（空分区的时候)<br>df 查看是文件系统的空间使用，包括元数据和数据，删除文件后，如果此文件正在使用，不会立即释放空间;du 查看是文件数据空间使用，不包括元数据，删除文件后空间立即释放。</p><p>2.什么时候df &lt; du?<br>目录内挂载有其它分区时的情况</p><p>3.当删除文件但不释放空间时,有什么不同?<br>du 查看文件空间释放,df不释放</p><h1 id="3-RAID"><a href="#3-RAID" class="headerlink" title="3. RAID"></a>3. RAID</h1>]]></content>
      
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell编程</title>
      <link href="/2022/08/03/shell%E7%BC%96%E7%A8%8B/"/>
      <url>/2022/08/03/shell%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="内容简述"><a href="#内容简述" class="headerlink" title="内容简述"></a>内容简述</h1><p>shell 是操作系统的最外层。shell 合并编程语言以控制进程和文件，以及启动和控制其它程序。shell 通过提示您输入，向操作系统解释该输入，然后处理来自操作系统的任何结果输出来管理您与操作系统之间的交互。</p><h1 id="1-编程基础"><a href="#1-编程基础" class="headerlink" title="1.编程基础"></a>1.编程基础</h1><p>Linus：Talk is cheap, show me the code</p><h2 id="1-1-程序组成"><a href="#1-1-程序组成" class="headerlink" title="1.1 程序组成"></a>1.1 程序组成</h2><ul><li>程序：算法+数据结构</li><li>算法：处理数据的方式</li><li>数据结构：数据在计算机中的类型和组织方式</li><li>数据：是程序的核心，程序为数据提供服务</li></ul><h2 id="1-2-程序编程风格"><a href="#1-2-程序编程风格" class="headerlink" title="1.2 程序编程风格"></a>1.2 程序编程风格</h2><ul><li>面向过程语言<ul><li>做一件事情，排出个步骤，第一步干什么，第二步干什么，如果出现情况A，做什么处理，如果出现了情况B，做什么处理</li><li>问题规模小，可以步骤化，按部就班处理</li><li>以指令为中心，数据服务于指令</li><li>C，shell</li></ul></li><li>面向对象语言<ul><li>将编程看成是一个事物，对外界来说，事物是直接使用的,不用关心事物内部的情况。而编程就是设置事物能够完成功能。</li><li>一种认识世界、分析世界的方法论。将万事万物抽象为各种对象</li><li>类是抽象的概念，是万事万物的抽象，是一类事物的共同特征的集合</li><li>对象是类的具体实现，是一个实体</li><li>问题规模大，复杂系统</li><li>以数据为中心，指令服务于数据</li><li>java，C#，python，golang等</li></ul></li></ul><h2 id="1-3-编程语言"><a href="#1-3-编程语言" class="headerlink" title="1.3 编程语言"></a>1.3 编程语言</h2><p><strong>编程语言排行榜链接</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.tiobe.com/tiobe-index/</span><br></pre></td></tr></table></figure><p>计算机：运行二进制指令<br>编程语言：人与计算机之间交互的语言。分为两种：低级语言和高级语言  </p><ul><li>低级编程语言：  <ul><li>机器：二进制的0和1的序列，称为机器指令。与自然语言差异太大，难懂、难写  </li><li>汇编：用一些助记符号替代机器指令，称为汇编语言<br>如：ADD A,B 将寄存器A的数与寄存器B的数相加得到的数放到寄存器A中<br>汇编语言写好的程序需要汇编程序转换成机器指令<br>汇编语言稍微好理解，即机器指令对应的助记符，助记符更接近自然语言</li></ul></li><li>高级编程语言：  <ul><li>编译：高级语言–&gt;编译器–&gt;机器代码文件–&gt;执行，如：C，C++  </li><li>解释：高级语言–&gt;执行–&gt;解释器–&gt;机器代码，如：shell，python，php，JavaScript，perl</li></ul></li><li>编译和解释型语言<br><img src="/../image.assets/1659747737724.png" alt="1659747737724"></li></ul><h2 id="1-4-编程逻辑处理方式"><a href="#1-4-编程逻辑处理方式" class="headerlink" title="1.4 编程逻辑处理方式"></a>1.4 编程逻辑处理方式</h2><p><img src="/../image.assets/1659747842228.png" alt="1659747842228"></p><p><img src="/../image.assets/1659747863045.png" alt="1659747863045"></p><p><strong>三种处理逻辑</strong></p><ul><li>顺序执行：程序按从上到下顺序执行</li><li>选择执行：程序执行过程中，根据条件的不同，进行选择不同分支继续执行</li><li>循环执行：程序执行过程中需要重复执行多次某段语句</li></ul><h1 id="2-shell-脚本语言的基本用法"><a href="#2-shell-脚本语言的基本用法" class="headerlink" title="2.shell 脚本语言的基本用法"></a>2.shell 脚本语言的基本用法</h1><h2 id="2-1-shell-脚本的用途"><a href="#2-1-shell-脚本的用途" class="headerlink" title="2.1 shell 脚本的用途"></a>2.1 shell 脚本的用途</h2><ul><li>将简单的命令组合完成复杂的工作,自动化执行命令,提高工作效率</li><li>减少手工命令的输入，一定程度上避免人为错误</li><li>将软件或应用的安装及配置实现标准化</li><li>用于实现日常性的,重复性的,非交互式的运维工作,如:文件打包压缩备份,监控系统运行状态并实现告警等</li></ul><h2 id="2-2-shell脚本基本结构"><a href="#2-2-shell脚本基本结构" class="headerlink" title="2.2 shell脚本基本结构"></a>2.2 shell脚本基本结构</h2><p><strong>shell脚本编程：是基于过程式、解释执行的语言</strong>  </p><hr><p><strong>编程语言的基本结构：</strong></p><ul><li>各种系统命令的组合</li><li>数据存储：变量、数组</li><li>表达式：a + b</li><li>控制语句：if</li></ul><p>shell脚本：包含一些命令或声明，并符合一定格式的文本文件<br>格式要求：首行shebang机制</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#!/usr/bin/python</span><br><span class="line">#!/usr/bin/perl</span><br><span class="line">#!/usr/bin/ruby</span><br><span class="line">#!/usr/bin/lua</span><br></pre></td></tr></table></figure><h2 id="2-3-shell脚本创建过程"><a href="#2-3-shell脚本创建过程" class="headerlink" title="2.3 shell脚本创建过程"></a>2.3 shell脚本创建过程</h2><p><strong>第一步：使用文本编编辑器来创建文本文件</strong></p><p><strong>第一行必须包括shell声明序列：#!</strong><br>示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash<span class="comment"># 使用bash，添加注释,注释以#开头</span></span></span><br></pre></td></tr></table></figure><p>第二步：加执行权限<br>给予执行权限，在命令行上指定脚本的绝对或相对路径<br>第三步：运行脚本<br>直接运行解释器，将脚本作为解释器程序的参数运行</p><p><strong>扩展：查看当前使用的是何种shell，终端输入：echo $SHELL</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:~# echo $SHELL</span><br><span class="line">/bin/bash</span><br><span class="line">root@ubuntu200404:~#</span><br></pre></td></tr></table></figure><h2 id="2-4-shell脚本注释规范"><a href="#2-4-shell脚本注释规范" class="headerlink" title="2.4 shell脚本注释规范"></a>2.4 shell脚本注释规范</h2><ul><li>第一行一般为调用使用的语言</li><li>程序名，避免更改文件名为无法找到正确的文件</li><li>版本号</li><li>更改后的时间</li><li>作者相关信息</li><li>该程序的作用，及注意事项</li><li>最后是各版本的更新简要说明</li></ul><h2 id="2-5-第一个shell脚本"><a href="#2-5-第一个shell脚本" class="headerlink" title="2.5 第一个shell脚本"></a>2.5 第一个shell脚本</h2><p><strong>范例：第一个shell脚本hello world</strong></p><p><strong>参考文档：</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://zh.wikipedia.org/wiki/Hello_World</span><br><span class="line">https://zh.wikipedia.org/wiki/Hello_World%E7%A8%8B%E5%BA%8F%E6%A0%B7%E4%BE%8B</span><br></pre></td></tr></table></figure><p>(程序样例)[<a href="https://zh.wikipedia.org/wiki/Hello_World]">https://zh.wikipedia.org/wiki/Hello_World]</a></p><p><strong>第一步：vim创建hello.sh文本</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:~# vim hello.sh</span><br></pre></td></tr></table></figure><p><strong>第二步：声明序列和添加脚本名称、日期等</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#******************</span><br><span class="line">#filename:hello.<span class="keyword">sh</span></span><br><span class="line">#Dat<span class="variable">a:2022</span>-<span class="number">08</span>-<span class="number">06</span></span><br><span class="line">#author:admin</span><br><span class="line">#******************</span><br></pre></td></tr></table></figure><p><strong>第三步：编写代码</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">经典写法</span></span><br><span class="line">echo &quot;hello, world&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">流行写法</span></span><br><span class="line">echo &#x27;Hello, world!&#x27;</span><br></pre></td></tr></table></figure><p><strong>第四步：执行shell脚本</strong></p><p>方法一：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:~# bash hello.sh </span><br><span class="line">hello world!</span><br><span class="line">******************</span><br><span class="line">hello world!</span><br><span class="line">root@ubuntu200404:~# </span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# cat /data/scripts/hello.sh | bash</span><br><span class="line">hello world!</span><br><span class="line">******************</span><br><span class="line">hello world!</span><br><span class="line">root@ubuntu200404:/data/scripts#</span><br></pre></td></tr></table></figure><p>方法三：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# bash &lt; /data/scripts/hello.sh </span><br><span class="line">hello world!</span><br><span class="line">******************</span><br><span class="line">hello world!</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><p>方法四：添加执行权限使用绝对路径和相对路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">绝对路径</span></span><br><span class="line">root@ubuntu200404:/data/scripts# /data/scripts/hello.sh </span><br><span class="line">hello world!</span><br><span class="line">******************</span><br><span class="line">hello world!</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">相对路径</span></span><br><span class="line">root@ubuntu200404:/data/scripts# pwd</span><br><span class="line">/data/scripts</span><br><span class="line">root@ubuntu200404:/data/scripts# ./hello.sh </span><br><span class="line">hello world!</span><br><span class="line">******************</span><br><span class="line">hello world!</span><br><span class="line">root@ubuntu200404:/data/scripts#</span><br></pre></td></tr></table></figure><p>方法五：将脚本添加到path变量中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">当前path位置</span></span><br><span class="line">root@ubuntu200404:/data/scripts# echo $PATH</span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin</span><br><span class="line">root@ubuntu200404:/data/scripts#</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">给hello.sh文件创建软链接放到/usr/local/bin目录下</span></span><br><span class="line">root@ubuntu200404:/data/scripts# ln -s /data/scripts/hello.sh /usr/local/bin/ </span><br><span class="line">root@ubuntu200404:/data/scripts# ls /usr/local/bin/</span><br><span class="line">hello.sh</span><br><span class="line">root@ubuntu200404:/data/scripts#</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行shell脚本</span></span><br><span class="line">root@ubuntu200404:/data/scripts# hello.sh </span><br><span class="line">hello world!</span><br><span class="line">******************</span><br><span class="line">hello world!</span><br><span class="line">root@ubuntu200404:/data/scripts#</span><br></pre></td></tr></table></figure><p>方法六：本方法可以实现执行远程主机的shell脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">扩展：curl加-s选项不显示下载信息</span></span><br><span class="line">root@ubuntu200404:/data# curl -s http://wangxiaochun.com/testdir/hello.sh |bash</span><br><span class="line">hello, world</span><br><span class="line">Hello, world!</span><br><span class="line">root@ubuntu200404:/data# </span><br></pre></td></tr></table></figure><p>案例：备份脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">脚本内容</span></span><br><span class="line">root@ubuntu200404:/data/scripts# cat -n bacup.sh </span><br><span class="line">     1#!/bin/bash</span><br><span class="line">     2#------------------</span><br><span class="line">     3#filename:bacup.sh</span><br><span class="line">     4#备份脚本</span><br><span class="line">     5#------------------</span><br><span class="line">     6</span><br><span class="line">     7</span><br><span class="line">     8tar zcf /data/scripts-`date +%F_%s`.tar.gz /data/ &amp;&gt; /dev/null</span><br><span class="line">     9</span><br><span class="line">    10echo -e &quot;\E[1;32mbacup is success!\E[0m&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行脚本</span></span><br><span class="line">root@ubuntu200404:/data/scripts# bash bacup.sh </span><br><span class="line">bacup is success!</span><br><span class="line">root@ubuntu200404:/data/scripts#</span><br></pre></td></tr></table></figure><h2 id="2-6-shell脚本调试"><a href="#2-6-shell脚本调试" class="headerlink" title="2.6 shell脚本调试"></a>2.6 shell脚本调试</h2><p><strong>只检测脚本中的语法错误，但无法检查出命令错误，但不真正执行脚本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -n /path/to/some_script</span><br></pre></td></tr></table></figure><p><strong>调试并执行</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -x /path/to/some_script</span><br></pre></td></tr></table></figure><p><strong>案例1：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# bash -x hello.sh </span><br><span class="line">+ echo &#x27;hello world!&#x27;</span><br><span class="line">hello world!</span><br><span class="line">+ echo &#x27;******************&#x27;</span><br><span class="line">******************</span><br><span class="line">+ echo &#x27;hello world!&#x27;</span><br><span class="line">hello world!</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><p><strong>案例2:多行重定向</strong></p><p>脚本内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">多行重定向</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">data:2022-08-06</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">author:admin</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">--------------------------------------------</span></span><br><span class="line"></span><br><span class="line">echo start</span><br><span class="line"></span><br><span class="line">cat &gt;/data/demo.conf &lt;&lt;EOF</span><br><span class="line">line 1</span><br><span class="line">line 2</span><br><span class="line">line 3</span><br><span class="line">EOF </span><br><span class="line"></span><br><span class="line">echo end</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><p>检查错误：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# bash -n demo1.sh </span><br><span class="line">demo1.sh: line 17: warning: here-document at line 11 delimited by end-of-file (wanted `EOF&#x27;)</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><p>检查出第十七行有错误，肉眼观察没有错误，这是因为有些错误不显示在屏幕上的，可以通过cat -A filename或者在vi命令行模式下输入：set list</p><p><img src="/../image.assets/1659754821095.png" alt="1659754821095"></p><p>使用cat -A filename命令后发现EOF后面多了个空格导致错误。删除掉空格脚本即可成功运行。</p><p>在vi命令行模式下输入set list</p><p><img src="/../image.assets/1659754927224.png" alt="1659754927224"></p><p><strong>总结：脚本错误常见的有三种</strong></p><ul><li>语法错误，会导致后续的命令不继续执行，可以用bash -n 检查错误，提示的出错行数不一定是准<br>确的</li><li>命令错误，默认后续的命令还会继续执行，用bash -n 无法检查出来 ，可以使用 bash -x 进行观察</li><li>逻辑错误：只能使用 bash -x 进行观察</li></ul><h2 id="2-7-变量"><a href="#2-7-变量" class="headerlink" title="2.7 变量"></a>2.7 变量</h2><h3 id="2-7-1-变量"><a href="#2-7-1-变量" class="headerlink" title="2.7.1 变量"></a>2.7.1 变量</h3><p><strong>变量表示命名的内存空间，将数据放在内存空间中，通过变量名引用，获取数据</strong>  </p><hr><h3 id="2-7-2-变量类型"><a href="#2-7-2-变量类型" class="headerlink" title="2.7.2 变量类型"></a>2.7.2 变量类型</h3><p><strong>变量类型：</strong></p><ul><li>内置变量，如：PS1，PATH，UID，HOSTNAME，$$，BASHPID，PPID，$?，HISTSIZE</li><li>用户自定义变量</li></ul><p><strong>不同的变量存放的数据不同，决定了以下</strong></p><ul><li>数据存储方式</li><li>参与的运算</li><li>表示的数据范围</li></ul><p><strong>变量数据类型：</strong></p><ul><li>字符</li><li>数值：整型、浮点型,bash 不支持浮点数</li></ul><h3 id="2-7-3-shell中变量命令规则"><a href="#2-7-3-shell中变量命令规则" class="headerlink" title="2.7.3 shell中变量命令规则"></a>2.7.3 shell中变量命令规则</h3><h4 id="2-7-3-1-命名要求"><a href="#2-7-3-1-命名要求" class="headerlink" title="2.7.3.1 命名要求"></a>2.7.3.1 命名要求</h4><ul><li><p>区分大小写</p></li><li><p>不能使程序中的保留字和内置变量：如：if, for<br>只能使用数字、字母及下划线，且不能以数字开头，注意：不支持短横线 “ - ”，和主机名相反</p></li><li><p>只能使用数字、字母及下划线，且不能以数字开头，注意：不支持短横线 “ - ”，和主机名相反</p></li></ul><h4 id="2-7-3-2-命令习惯"><a href="#2-7-3-2-命令习惯" class="headerlink" title="2.7.3.2 命令习惯"></a>2.7.3.2 命令习惯</h4><ul><li>见名知义，用英文单词命名，并体现出实际作用，不要用简写，如：ATM</li><li>变量名大写</li><li>局部变量小写</li><li>函数名小写</li><li>大驼峰StudentFirstName,由多个单词组成，且每个单词的首字母是大写，其它小写</li><li>小驼峰studentFirstName ,由多个单词组成，第一个单词的首字母小写，后续每个单词的首字母是大写，其它小写</li><li>下划线: student_name</li></ul><h3 id="2-7-4-变量定义和引用"><a href="#2-7-4-变量定义和引用" class="headerlink" title="2.7.4 变量定义和引用"></a>2.7.4 变量定义和引用</h3><p><strong>变量的生效范围等标准划分变量类型</strong></p><ul><li>普通变量：生效范围为当前shell进程；对当前shell之外的其它shell进程，包括当前shell的子shell进程均无效</li><li>环境变量：生效范围为当前shell进程及其子进程</li><li>本地变量：生效范围为当前shell进程中某代码片断，通常指函数</li></ul><p><strong>变量赋值：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=&#x27;value&#x27;</span><br></pre></td></tr></table></figure><p><strong>value 可以是以下多种形式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">直接字串：name=&#x27;root&#x27;</span><br><span class="line">变量引用：name=&quot;$USER&quot;</span><br><span class="line">命令引用：name=`COMMAND` 或者 name=$(COMMAND)</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>变量赋值是临时生效，当退出终端后，变量会自动删除，无法持久保存，脚本中的变量会随着脚本结束，也会自动删除</p><p><strong>变量引用：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">name</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;name&#125;</span></span><br></pre></td></tr></table></figure><p><strong>弱引用和强引用</strong></p><ul><li>“$name” 弱引用，其中的变量引用会被替换为变量值</li><li>‘$name’ 强引用，其中的变量引用不会被替换为变量值，而保持原字符串</li></ul><p><strong>范例：变量的各种赋值方式和引用</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">方式1：</span><br><span class="line">root@ubuntu200404:/data/scripts# TITLE=cto</span><br><span class="line">root@ubuntu200404:/data/scripts# echo $TITLE</span><br><span class="line">cto</span><br><span class="line">root@ubuntu200404:/data/scripts#</span><br><span class="line"></span><br><span class="line">方式二：</span><br><span class="line">root@ubuntu200404:/data/scripts# T=ceo</span><br><span class="line">root@ubuntu200404:/data/scripts# NAME=$T</span><br><span class="line">root@ubuntu200404:/data/scripts# echo $NAME</span><br><span class="line">ceo</span><br><span class="line">root@ubuntu200404:/data/scripts#</span><br><span class="line"></span><br><span class="line">方式三：</span><br><span class="line">root@ubuntu200404:/data/scripts# NAME=`whoami`</span><br><span class="line">root@ubuntu200404:/data/scripts# echo $NAME</span><br><span class="line">root</span><br><span class="line">root@ubuntu200404:/data/scripts#</span><br><span class="line"></span><br><span class="line">方式四：</span><br><span class="line">root@ubuntu200404:/data/scripts# seq 10</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">root@ubuntu200404:/data/scripts#</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">弱引用</span></span><br><span class="line">root@ubuntu200404:/data/scripts# echo &quot;$NUM&quot;</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><p><strong>删除变量： unset name</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">unset &lt;name&gt;</span><br><span class="line">案例：</span><br><span class="line">root@ubuntu200404:/data/scripts# NUM=`seq 10`</span><br><span class="line">root@ubuntu200404:/data/scripts# echo $NUM</span><br><span class="line">1 2 3 4 5 6 7 8 9 10</span><br><span class="line">root@ubuntu200404:/data/scripts# unset NUM</span><br><span class="line">root@ubuntu200404:/data/scripts# echo $NUM</span><br><span class="line"></span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><p><strong>显示已有的变量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set</span><br></pre></td></tr></table></figure><h3 id="2-7-5-环境变量"><a href="#2-7-5-环境变量" class="headerlink" title="2.7.5 环境变量"></a>2.7.5 环境变量</h3><p><strong>环境变量：</strong></p><ul><li>可以使子进程（包括孙子进程）继承父进程的变量，但是无法让父进程使用子进程的变量</li><li>一旦子进程修改从父进程继承的变量，将会新的值传递给孙子进</li><li>一般只在系统配置文件中使用，在脚本中较少使用</li></ul><p><strong>变量声明和赋值：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#声明并赋值</span><br><span class="line">export name=VALUE</span><br><span class="line">declare -x name=VALUE</span><br><span class="line">#或者分两步实现</span><br><span class="line">name=VALUE</span><br><span class="line">export name</span><br></pre></td></tr></table></figure><p><strong>变量引用：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$name</span><br><span class="line">$&#123;name&#125;</span><br></pre></td></tr></table></figure><p><strong>显示所有环境变量：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">env</span><br><span class="line">printenv</span><br><span class="line">export</span><br><span class="line">declare -x</span><br></pre></td></tr></table></figure><p><strong>查看指定进程的环境变量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/$PID/environ</span><br></pre></td></tr></table></figure><p><strong>删除变量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unset name</span><br></pre></td></tr></table></figure><p><strong>bash内建的环境变量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PATH</span><br><span class="line">SHELL</span><br><span class="line">USER</span><br><span class="line">UID</span><br><span class="line">HOME</span><br><span class="line">PWD</span><br><span class="line">SHLVL #shell的嵌套层数，即深度</span><br><span class="line">LANG</span><br><span class="line">MAIL</span><br><span class="line">HOSTNAME</span><br><span class="line">HISTSIZE</span><br><span class="line">_ #下划线,表示前一命令的最后一个参数</span><br></pre></td></tr></table></figure><p><strong>扩展：pstree -p</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# pstree -p</span><br><span class="line">systemd(1)─┬─VGAuthService(757)</span><br><span class="line">           ├─accounts-daemon(811)─┬─&#123;accounts-daemon&#125;(818)</span><br><span class="line">           │                      └─&#123;accounts-daemon&#125;(864)</span><br><span class="line">           ├─atd(837)</span><br><span class="line">           ├─cron(815)</span><br><span class="line">           ├─dbus-daemon(817)</span><br><span class="line">           ├─irqbalance(824)───&#123;irqbalance&#125;(853)</span><br><span class="line">           ├─login(1206)───bash(1402)───sudo(1413)───bash(1420)</span><br><span class="line">           ├─multipathd(702)─┬─&#123;multipathd&#125;(703)</span><br><span class="line">           │                 ├─&#123;multipathd&#125;(704)</span><br><span class="line">           │                 ├─&#123;multipathd&#125;(705)</span><br><span class="line">           │                 ├─&#123;multipathd&#125;(706)</span><br><span class="line">           │                 ├─&#123;multipathd&#125;(707)</span><br><span class="line">           │                 └─&#123;multipathd&#125;(708)</span><br><span class="line">           ├─networkd-dispat(825)</span><br><span class="line">           ├─polkitd(872)─┬─&#123;polkitd&#125;(875)</span><br><span class="line">           │              └─&#123;polkitd&#125;(877)</span><br><span class="line">           ├─rsyslogd(826)─┬─&#123;rsyslogd&#125;(839)</span><br><span class="line">           │               ├─&#123;rsyslogd&#125;(840)</span><br><span class="line">           │               └─&#123;rsyslogd&#125;(841)</span><br><span class="line">           ├─snapd(828)─┬─&#123;snapd&#125;(915)</span><br><span class="line">           │            ├─&#123;snapd&#125;(916)</span><br><span class="line">           │            ├─&#123;snapd&#125;(917)</span><br><span class="line">           │            ├─&#123;snapd&#125;(918)</span><br><span class="line">           │            ├─&#123;snapd&#125;(919)</span><br><span class="line">           │            ├─&#123;snapd&#125;(945)</span><br><span class="line">           │            ├─&#123;snapd&#125;(946)</span><br><span class="line">           │            ├─&#123;snapd&#125;(952)</span><br><span class="line">           │            ├─&#123;snapd&#125;(954)</span><br><span class="line">           │            └─&#123;snapd&#125;(975)</span><br><span class="line">           ├─sshd(859)─┬─sshd(3292)───bash(3421)───pstree(13708)</span><br><span class="line">           │           └─sshd(6603)───bash(6736)</span><br><span class="line">           ├─systemd(1477)───(sd-pam)(1478)</span><br><span class="line">           ├─systemd(1392)───(sd-pam)(1393)</span><br><span class="line">           ├─systemd-journal(495)</span><br><span class="line">           ├─systemd-logind(830)</span><br><span class="line">           ├─systemd-network(2826)</span><br><span class="line">           ├─systemd-resolve(799)</span><br><span class="line">           ├─systemd-timesyn(746)───&#123;systemd-timesyn&#125;(778)</span><br><span class="line">           ├─systemd-udevd(525)</span><br><span class="line">           ├─udisksd(836)─┬─&#123;udisksd&#125;(863)</span><br><span class="line">           │              ├─&#123;udisksd&#125;(866)</span><br><span class="line">           │              ├─&#123;udisksd&#125;(883)</span><br><span class="line">           │              └─&#123;udisksd&#125;(906)</span><br><span class="line">           ├─unattended-upgr(878)───&#123;unattended-upgr&#125;(908)</span><br><span class="line">           ├─upowerd(2940)─┬─&#123;upowerd&#125;(2942)</span><br><span class="line">           │               └─&#123;upowerd&#125;(2943)</span><br><span class="line">           └─vmtoolsd(758)─┬─&#123;vmtoolsd&#125;(781)</span><br><span class="line">                           └─&#123;vmtoolsd&#125;(2774)</span><br></pre></td></tr></table></figure><h3 id="2-7-6-只读变量"><a href="#2-7-6-只读变量" class="headerlink" title="2.7.6 只读变量"></a>2.7.6 只读变量</h3><p><strong>只读变量：只能声明定义，但后续不能修改和删除，即常量</strong><br><strong>声明只读变量：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">readonly name</span><br><span class="line">declare -r name</span><br></pre></td></tr></table></figure><p><strong>查看只读变量：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">readonly [-p]</span><br><span class="line">declare -r</span><br></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# readonly PI=3.14159</span><br><span class="line">root@ubuntu200404:/data/scripts# echo $PI</span><br><span class="line">3.14159</span><br><span class="line">root@ubuntu200404:/data/scripts# PI=3.14</span><br><span class="line">-bash: PI: readonly variable</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><h3 id="2-7-7-位置变量"><a href="#2-7-7-位置变量" class="headerlink" title="2.7.7 位置变量"></a>2.7.7 位置变量</h3><p><strong>位置变量：在bash shell中内置的变量, 在脚本代码中调用通过命令行传递给脚本的参数</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$1, $2, ... 对应第1个、第2个等参数，shift [n]换位置</span><br><span class="line">$0 命令本身,包括路径</span><br><span class="line">$* 传递给脚本的所有参数，全部参数合为一个字符串</span><br><span class="line">$@ 传递给脚本的所有参数，每个参数为独立字符串</span><br><span class="line">$# 传递给脚本的参数的个数</span><br><span class="line">注意：$@ $* 只在被双引号包起来的时候才会有差异</span><br></pre></td></tr></table></figure><p><strong>清空所有位置变量</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set --</span><br></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo &quot;1st arg is $1&quot;</span><br><span class="line">echo &quot;2st arg is $2&quot;</span><br><span class="line">echo &quot;3st arg is $3&quot;</span><br><span class="line">echo &quot;10st arg is $&#123;10&#125;&quot;</span><br><span class="line">echo &quot;11st arg is $&#123;11&#125;&quot;</span><br><span class="line">echo &quot;The number of arg is $#&quot;</span><br><span class="line">echo &quot;All args are $*&quot;</span><br><span class="line">echo &quot;All args are $@&quot;</span><br><span class="line">echo &quot;The scriptname is `basename $0`&quot;</span><br><span class="line">root@ubuntu200404:/data/scripts# bash args.sh &#123;a..z&#125;</span><br><span class="line">1st arg is a</span><br><span class="line">2st arg is b</span><br><span class="line">3st arg is c</span><br><span class="line">10st arg is j</span><br><span class="line">11st arg is k</span><br><span class="line">The number of arg is 26</span><br><span class="line">All args are a b c d e f g h i j k l m n o p q r s t u v w x y z</span><br><span class="line">All args are a b c d e f g h i j k l m n o p q r s t u v w x y z</span><br><span class="line">The scriptname is args.sh</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><p><strong>范例：删库跑路之安全命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 查看命令</span><br><span class="line">root@ubuntu200404:/data/scripts# cat /data/scripts/rm.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">#-----------------</span><br><span class="line">#删库跑路之安全命令</span><br><span class="line">#-----------------</span><br><span class="line">#filename:rm.sh</span><br><span class="line">#data:2022-08-06</span><br><span class="line">#author:admin</span><br><span class="line">#-----------------</span><br><span class="line"></span><br><span class="line">WARNING_COLOR=&quot;echo -e \E[1;31m&quot;</span><br><span class="line"></span><br><span class="line">END=&quot;\E[0m&quot;</span><br><span class="line"></span><br><span class="line">DIR=/tmp/`date +%F_%H-%M-%S`</span><br><span class="line"></span><br><span class="line">mkdir $&#123;DIR&#125;</span><br><span class="line"></span><br><span class="line">mv $* $&#123;DIR&#125;</span><br><span class="line"></span><br><span class="line">$&#123;WARNING_COLOR&#125;Move $* to $&#123;END&#125;</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br><span class="line"></span><br><span class="line"># 给/data/scripts/rm.sh添加执行权限</span><br><span class="line">root@ubuntu200404:/data/scripts# chmod a+x /data/scripts/rm.sh</span><br><span class="line"></span><br><span class="line"># 添加别名</span><br><span class="line">root@ubuntu200404:/data/scripts#alias rm=&#x27;/data/scripts/rm.sh&#x27;</span><br><span class="line"></span><br><span class="line">root@ubuntu200404:/data/scripts# touch &#123;1..9&#125;.TXT</span><br><span class="line">root@ubuntu200404:/data/scripts# rm *.TXT</span><br><span class="line">Move 1.TXT 2.TXT 3.TXT 4.TXT 5.TXT 6.TXT 7.TXT 8.TXT 9.TXT to </span><br></pre></td></tr></table></figure><p>*<em>范例：$<em>和$@的区别</em></em></p><ol><li>当 $* 和 $@ 不带双引号时它们两个是没有区别的，都是接收所有参数然后分别单独处理每个参数！而当$*带双引号的时候，会把接收的所有参数当成一个字段处理 </li><li>将$@与$* 赋值给变量之后，结果跟不带引号是一样的！这是我们需要注意的地方，当$* 赋值给变量的时候还是跟不带引号的作用是一样的！</li></ol><h3 id="2-7-8-利用软链接实现同一个脚本不同功能"><a href="#2-7-8-利用软链接实现同一个脚本不同功能" class="headerlink" title="2.7.8  利用软链接实现同一个脚本不同功能"></a>2.7.8  利用软链接实现同一个脚本不同功能</h3><p><strong>范例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#cat test.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">#********************************************************************</span><br><span class="line">echo $0</span><br><span class="line">[root@centos8 ~]#ln -s test.sh a.sh</span><br><span class="line">[root@centos8 ~]#ln -s test.sh b.sh</span><br><span class="line">[root@centos8 ~]#./a.sh</span><br><span class="line">./a.sh</span><br><span class="line">[root@centos8 ~]#./b.sh</span><br><span class="line">./b.sh</span><br></pre></td></tr></table></figure><h3 id="2-7-9-退出状态码变量"><a href="#2-7-9-退出状态码变量" class="headerlink" title="2.7.9 退出状态码变量"></a>2.7.9 退出状态码变量</h3><p><strong>进程执行后，将使用变量 $? 保存状态码的相关数字，不同的值反应成功或失败，$?取值范例 0-255</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$?的值为0 #代表成功</span><br><span class="line">$?的值是1到255 #代表失败</span><br></pre></td></tr></table></figure><p><strong>范例：状态码为0</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# ll</span><br><span class="line">total 40</span><br><span class="line">drwxr-xr-x 2 root root 4096 Aug  6 07:29 ./</span><br><span class="line">drwxr-xr-x 3 root root 4096 Aug  6 02:41 ../</span><br><span class="line">-rw-r--r-- 1 root root  241 Aug  6 06:48 args.sh</span><br><span class="line">-rw-r--r-- 1 root root  192 Aug  6 02:40 bacup.sh</span><br><span class="line">-rw-r--r-- 1 root root  185 Aug  6 03:38 demo1.sh</span><br><span class="line">-rw-r--r-- 1 root root   85 Aug  6 07:26 f1.sh</span><br><span class="line">-rw-r--r-- 1 root root   41 Aug  6 07:29 file.sh</span><br><span class="line">-rwxr-xr-x 1 root root  208 Aug  6 01:42 hello.sh*</span><br><span class="line">-rwxr-xr-x 1 root root  285 Aug  6 07:20 rm.sh*</span><br><span class="line">-rwxr-xr-x 1 root root  284 Aug  6 07:01 rm.sh.bak*</span><br><span class="line">root@ubuntu200404:/data/scripts# echo $?</span><br><span class="line">0</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><p><strong>范例：状态码不是0</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# ls ajdksh</span><br><span class="line">ls: cannot access &#x27;ajdksh&#x27;: No such file or directory</span><br><span class="line">root@ubuntu200404:/data/scripts# echo $?</span><br><span class="line">2</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><p><strong>用户可以在脚本中使用以下命令自定义退出状态码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit [n]</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# cat exit.sh </span><br><span class="line">#!/bin/bash</span><br><span class="line">echo -e `hostname`</span><br><span class="line"></span><br><span class="line">exit 200</span><br><span class="line"></span><br><span class="line">echo -e &#x27;success&#x27;</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br><span class="line">root@ubuntu200404:/data/scripts# bash exit.sh </span><br><span class="line">ubuntu200404</span><br><span class="line">exit.sh: line 4: exit: 200: numeric argument required</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>脚本中一旦遇到exit命令，脚本会立即终止；终止退出状态取决于exit命令后面的数字</li><li>如果exit后面无数字,终止退出状态取决于exit命令前面命令执行结果</li><li>如果没有exit命令, 即未给脚本指定退出状态码，整个脚本的退出状态码取决于脚本中执行的最后一条命令的状态码</li></ul><h3 id="2-7-10-脚本安全和-set"><a href="#2-7-10-脚本安全和-set" class="headerlink" title="2.7.10 脚本安全和 set"></a>2.7.10 脚本安全和 set</h3><p><strong>set 命令：可以用来定制 shell 环境</strong><br>$- 变量<br>h：hashall，打开选项后，Shell 会将命令所在的路径hash下来，避免每次都要查询。通过set +h将h选<br>项关闭<br>i：interactive-comments，包含这个选项说明当前的 shell 是一个交互式的 shell。所谓的交互式shell,<br>在脚本中，i选项是关闭的<br>m：monitor，打开监控模式，就可以通过Job control来控制进程的停止、继续，后台或者前台执行等<br>B：braceexpand，大括号扩展<br>H：history，H选项打开，可以展开历史列表中的命令，可以通过!感叹号来完成，例如“!!”返回上最近的<br>一个历史命令，“!n”返回第 n 个历史命令</p><p><strong>set 命令实现脚本安全</strong><br>-u 在扩展一个没有设置的变量时，显示错误信息， 等同set -o nounset<br>-e 如果一个命令返回一个非0退出状态值(失败)就退出， 等同set -o errexit<br>-o option 显示，打开或者关闭选项<br>显示选项：set -o<br>打开选项：set -o 选项<br>关闭选项：set +o 选项<br>-x 当执行命令时，打印命令及其参数,类似 bash -x<br>范例：-e -u</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#******************</span><br><span class="line">#filename:hello.sh</span><br><span class="line">#Data:2022-08-06</span><br><span class="line">#author:admin</span><br><span class="line">#******************</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">set -e -u</span><br><span class="line"></span><br><span class="line">#echo &quot;经典写法&quot;</span><br><span class="line">echo &quot;hello world!&quot;</span><br><span class="line"></span><br><span class="line">echo &#x27;******************&#x27;</span><br><span class="line"></span><br><span class="line"># 流行写法</span><br><span class="line">echo &#x27;hello world!&#x27;</span><br></pre></td></tr></table></figure><h2 id="2-8-算术运算"><a href="#2-8-算术运算" class="headerlink" title="2.8 算术运算"></a>2.8 算术运算</h2><p>Shell允许在某些情况下对算术表达式进行求值，比如：let和declare 内置命令，(( ))复合命令和算术扩<br>展。求值以固定宽度的整数进行，不检查溢出，尽管除以0 被困并标记为错误。运算符及其优先级，关联性和值与C语言相同。以下运算符列表分组为等优先级运算符级别。级别按降序排列优先。<br><strong>注意：bash 只支持整数，不支持小数</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">+ - addition, subtraction</span><br><span class="line">* / % multiplication, division, remainder, %表示取模，即取余数，示例：9%4=1，5%3=2</span><br><span class="line">i++ i-- variable post-increment and post-decrement</span><br><span class="line">++i --i variable pre-increment and pre-decrement</span><br><span class="line">= *= /= %= += -= &lt;&lt;= &gt;&gt;= &amp;= ^= |= assignment</span><br><span class="line">- + unary minus and plus</span><br><span class="line">! ~ logical and bitwise negation</span><br><span class="line">** exponentiation 乘方,即指数运算</span><br><span class="line">&lt;&lt; &gt;&gt; left and right bitwise shifts</span><br><span class="line">&lt;= &gt;= &lt; &gt; comparison</span><br><span class="line">== != equality and inequality</span><br><span class="line">&amp; bitwise AND</span><br><span class="line">| bitwise OR</span><br><span class="line">^ bitwise exclusive OR</span><br><span class="line">&amp;&amp; logical AND</span><br><span class="line">|| logical OR</span><br><span class="line">expr?expr:expr conditional operator</span><br><span class="line">expr1 , expr2 comma</span><br></pre></td></tr></table></figure><p><strong>乘法符号有些场景中需要转义</strong><br><strong>实现算术运算：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(1) let var=算术表达式</span><br><span class="line">(2) ((var=算术表达式)) 和上面等价</span><br><span class="line">(3) var=$[算术表达式]</span><br><span class="line">(4) var=$((算术表达式))</span><br><span class="line">(5) var=$(expr arg1 arg2 arg3 ...)</span><br><span class="line">(6) declare -i var = 数值</span><br><span class="line">(7) echo &#x27;算术表达式&#x27; | bc</span><br></pre></td></tr></table></figure><p><strong>内建的随机数生成器变量：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$RANDOM 取值范围：0-32767</span><br></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#生成 0 - 49 之间随机数</span><br><span class="line">echo $[$RANDOM%50]</span><br><span class="line">#随机字体颜色</span><br><span class="line">[root@centos8 ~]#echo -e &quot;\033[1;$[RANDOM%7+31]mhello\033[0m&quot;</span><br><span class="line">magedu</span><br></pre></td></tr></table></figure><h2 id="2-9-逻辑运算"><a href="#2-9-逻辑运算" class="headerlink" title="2.9 逻辑运算"></a>2.9 逻辑运算</h2><p><img src="/../image.assets/1659774970166.png" alt="1659774970166"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1,真</span><br><span class="line">0,假</span><br><span class="line">#注意,以上为二进制</span><br></pre></td></tr></table></figure><p><strong>与或非符号：&amp; | ！</strong></p><p><strong>异或：^</strong></p><p>**异或：^ **<br>异或的两个值，相同为假，不同为真。两个数字X,Y异或得到结果Z，Z再和任意两者之一X异或，将得出另一个值Y</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0 ^ 0 = 0</span><br><span class="line">0 ^ 1 = 1</span><br><span class="line">1 ^ 0 = 1</span><br><span class="line">1 ^ 1 = 0</span><br></pre></td></tr></table></figure><h2 id="2-10-条件测试命令"><a href="#2-10-条件测试命令" class="headerlink" title="2.10 条件测试命令"></a>2.10 条件测试命令</h2><p>条件测试：判断某需求是否满足，需要由测试机制来实现，专用的测试表达式需要由测试命令辅助完成<br>测试过程，实现评估布尔声明，以便用在条件性环境下进行执行<br>若真，则状态码变量 $? 返回0<br>若假，则状态码变量 $? 返回1<br>条件测试命令</p><ul><li>test EXPRESSIO</li><li>[ EXPRESSION ] #和test 等价，建议使用 [ ]</li><li>[[ EXPRESSION ]] 相关于增强版的 [ ], 支持[]的用法,且支持扩展正则表达式和通配</li></ul><p><strong>注意：EXPRESSION前后必须有空白字符</strong></p><p><strong>帮助：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# type [</span><br><span class="line">[ is a shell builtin</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br><span class="line"></span><br><span class="line">root@ubuntu200404:/data/scripts# help test</span><br><span class="line">test: test [expr]</span><br><span class="line">    Evaluate conditional expression.</span><br><span class="line">    </span><br><span class="line">    Exits with a status of 0 (true) or 1 (false) depending on</span><br><span class="line">    the evaluation of EXPR.  Expressions may be unary or binary.  Unary</span><br><span class="line">    expressions are often used to examine the status of a file.  There</span><br><span class="line">    are string operators and numeric comparison operators as well.</span><br><span class="line">    </span><br><span class="line">    The behavior of test depends on the number of arguments.  Read the</span><br><span class="line">    bash manual page for the complete specification.</span><br><span class="line">    </span><br><span class="line">    File operators:</span><br><span class="line">    </span><br><span class="line">      -a FILE        True if file exists.</span><br><span class="line">      -b FILE        True if file is block special.</span><br><span class="line">      -c FILE        True if file is character special.</span><br><span class="line">      -d FILE        True if file is a directory.</span><br><span class="line">      -e FILE        True if file exists.</span><br><span class="line">      -f FILE        True if file exists and is a regular file.</span><br><span class="line">      -g FILE        True if file is set-group-id.</span><br><span class="line">      -h FILE        True if file is a symbolic link.</span><br><span class="line">      -L FILE        True if file is a symbolic link.</span><br><span class="line">      -k FILE        True if file has its `sticky&#x27; bit set.</span><br><span class="line">      -p FILE        True if file is a named pipe.</span><br><span class="line">      -r FILE        True if file is readable by you.</span><br><span class="line">      -s FILE        True if file exists and is not empty.</span><br><span class="line">      -S FILE        True if file is a socket.</span><br><span class="line">      -t FD          True if FD is opened on a terminal.</span><br><span class="line">      -u FILE        True if the file is set-user-id.</span><br><span class="line">      -w FILE        True if the file is writable by you.</span><br><span class="line">      -x FILE        True if the file is executable by you.</span><br><span class="line">      -O FILE        True if the file is effectively owned by you.</span><br><span class="line">      -G FILE        True if the file is effectively owned by your group.</span><br><span class="line">      -N FILE        True if the file has been modified since it was last read.</span><br><span class="line">    </span><br><span class="line">      FILE1 -nt FILE2  True if file1 is newer than file2 (according to</span><br><span class="line">                       modification date).</span><br><span class="line">    </span><br><span class="line">      FILE1 -ot FILE2  True if file1 is older than file2.</span><br><span class="line">    </span><br><span class="line">      FILE1 -ef FILE2  True if file1 is a hard link to file2.</span><br><span class="line">    </span><br><span class="line">    All file operators except -h and -L are acting on the target of a symbolic</span><br><span class="line">    link, not on the symlink itself, if FILE is a symbolic link.</span><br><span class="line">    </span><br><span class="line">    String operators:</span><br><span class="line">    </span><br><span class="line">      -z STRING      True if string is empty.</span><br><span class="line">    </span><br><span class="line">      -n STRING</span><br><span class="line">         STRING      True if string is not empty.</span><br><span class="line">    </span><br><span class="line">      STRING1 = STRING2</span><br><span class="line">                     True if the strings are equal.</span><br><span class="line">      STRING1 != STRING2</span><br><span class="line">                     True if the strings are not equal.</span><br><span class="line">      STRING1 &lt; STRING2</span><br><span class="line">                     True if STRING1 sorts before STRING2 lexicographically.</span><br><span class="line">      STRING1 &gt; STRING2</span><br><span class="line">                     True if STRING1 sorts after STRING2 lexicographically.</span><br><span class="line">    </span><br><span class="line">    Other operators:</span><br><span class="line">    </span><br><span class="line">      -o OPTION      True if the shell option OPTION is enabled.</span><br><span class="line">      -v VAR         True if the shell variable VAR is set.</span><br><span class="line">      -R VAR         True if the shell variable VAR is set and is a name</span><br><span class="line">                     reference.</span><br><span class="line">      ! EXPR         True if expr is false.</span><br><span class="line">      EXPR1 -a EXPR2 True if both expr1 AND expr2 are true.</span><br><span class="line">      EXPR1 -o EXPR2 True if either expr1 OR expr2 is true.</span><br><span class="line">    </span><br><span class="line">      arg1 OP arg2   Arithmetic tests.  OP is one of -eq, -ne,</span><br><span class="line">                     -lt, -le, -gt, or -ge.</span><br><span class="line">    </span><br><span class="line">    Arithmetic binary operators return true if ARG1 is equal, not-equal,</span><br><span class="line">    less-than, less-than-or-equal, greater-than, or greater-than-or-equal</span><br><span class="line">    than ARG2.</span><br><span class="line">    </span><br><span class="line">    See the bash manual page bash(1) for the handling of parameters (i.e.</span><br><span class="line">    missing parameters).</span><br><span class="line">    </span><br><span class="line">    Exit Status:</span><br><span class="line">    Returns success if EXPR evaluates to true; fails if EXPR evaluates to</span><br><span class="line">    false or an invalid argument is given.</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-10-1-变量测试"><a href="#2-10-1-变量测试" class="headerlink" title="2.10.1 变量测试"></a>2.10.1 变量测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#判断 NAME 变量是否定义</span><br><span class="line">[ -v NAME ]</span><br></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# NAME=&#x27;tom&#x27;</span><br><span class="line">root@ubuntu200404:/data/scripts# [ -v NAME ]</span><br><span class="line">root@ubuntu200404:/data/scripts# echo $?</span><br><span class="line">0</span><br><span class="line">root@ubuntu200404:/data/scripts# [ -v AGE ]</span><br><span class="line">root@ubuntu200404:/data/scripts# echo $?</span><br><span class="line">1</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><h3 id="2-10-2-数值测试"><a href="#2-10-2-数值测试" class="headerlink" title="2.10.2 数值测试"></a>2.10.2 数值测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-eq 是否等于</span><br><span class="line">-ne 是否不等于</span><br><span class="line">-gt 是否大于</span><br><span class="line">-ge 是否大于等于</span><br><span class="line">-lt 是否小于</span><br><span class="line">-le 是否小于等于</span><br></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#i=10</span><br><span class="line">[root@centos8 ~]#j=8</span><br><span class="line">[root@centos8 ~]#[ $i -lt $j ]</span><br><span class="line">[root@centos8 ~]#echo $?</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="2-10-3-算术表达式比较"><a href="#2-10-3-算术表达式比较" class="headerlink" title="2.10.3 算术表达式比较"></a>2.10.3 算术表达式比较</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">== 相等</span><br><span class="line">!= 不相等</span><br><span class="line">&lt;=</span><br><span class="line">&gt;=</span><br><span class="line">&lt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#x=10;y=10;(( x == y ));echo $?</span><br><span class="line">0</span><br><span class="line">[root@centos8 ~]#x=10;y=20;(( x == y ));echo $?</span><br><span class="line">1</span><br><span class="line">[root@centos8 ~]#x=10;y=20;(( x != y ));echo $?</span><br><span class="line">0</span><br><span class="line">[root@centos8 ~]#x=10;y=10;(( x != y ));echo $?</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="2-10-4-字符窜测试"><a href="#2-10-4-字符窜测试" class="headerlink" title="2.10.4 字符窜测试"></a>2.10.4 字符窜测试</h3><p><strong>test和 [ ] 字符串测试用法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-z STRING 字符串是否为空，没定义或空为真，不空为假，</span><br><span class="line">-n STRING 字符串是否不空，不空为真，空为假</span><br><span class="line">STRING 同上</span><br><span class="line">STRING1 = STRING2 是否等于，注意 = 前后有空格</span><br><span class="line">STRING1 != STRING2 是否不等于</span><br><span class="line">&gt; ascii码是否大于ascii码</span><br><span class="line">&lt; 是否小于</span><br></pre></td></tr></table></figure><p><strong>[[]] 字符串测试用法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[[ expression ]] 用法</span><br><span class="line">== 左侧字符串是否和右侧的PATTERN相同</span><br><span class="line">注意:此表达式用于[[ ]]中，PATTERN为通配符</span><br><span class="line">=~ 左侧字符串是否能够被右侧的正则表达式的PATTERN所匹配</span><br><span class="line">注意: 此表达式用于[[ ]]中为扩展的正则表达式</span><br></pre></td></tr></table></figure><p><strong>建议：当使用正则表达式或通配符使用[[ ]]，其它情况一般使用 [ ]</strong>  </p><hr><p><strong>范例：使用 [ ]</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#unset str</span><br><span class="line">[root@centos8 ~]#[ -z &quot;$str&quot; ]</span><br><span class="line">[root@centos8 ~]#echo $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>范例：在比较字符串时，建议变量放在“ ”中</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#[ &quot;$NAME&quot; ]</span><br><span class="line">[root@centos8 ~]#NAME=&quot;I love linux&quot;</span><br><span class="line">[root@centos8 ~]#[ $NAME ]</span><br><span class="line">-bash: [: love: binary operator expected</span><br><span class="line">[root@centos8 ~]#[ &quot;$NAME&quot; ]</span><br><span class="line">[root@centos8 ~]#echo $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>[[]]中如果不想使用通配符*,只想表达*本身,可以用” “引起来</strong>  </p><hr><p><em><em>#[[]]中如果不想使用通配符</em>,只想表达*本身,也可以使用转义符*</em></p><h3 id="2-10-5-文件测试"><a href="#2-10-5-文件测试" class="headerlink" title="2.10.5 文件测试"></a>2.10.5 文件测试</h3><p><strong>存在性测试</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-a FILE：同 -e</span><br><span class="line">-e FILE: 文件存在性测试，存在为真，否则为假</span><br><span class="line">-b FILE：是否存在且为块设备文件</span><br><span class="line">-c FILE：是否存在且为字符设备文件</span><br><span class="line">-d FILE：是否存在且为目录文件</span><br><span class="line">-f FILE：是否存在且为普通文件</span><br><span class="line">-h FILE 或 -L FILE：存在且为符号链接文件</span><br><span class="line">-p FILE：是否存在且为命名管道文件</span><br><span class="line">-S FILE：是否存在且为套接字文件</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# [ -e /data/scripts/rm.sh ]</span><br><span class="line">root@ubuntu200404:/data/scripts# echo $?</span><br><span class="line">0</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><p><strong>文件权限测试</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-r FILE：是否存在且可读</span><br><span class="line">-w FILE: 是否存在且可写</span><br><span class="line">-x FILE: 是否存在且可执行</span><br><span class="line">-u FILE：是否存在且拥有suid权限</span><br><span class="line">-g FILE：是否存在且拥有sgid权限</span><br><span class="line">-k FILE：是否存在且拥有sticky权限</span><br></pre></td></tr></table></figure><p><strong>注意：最终结果由用户对文件的实际权限决定，而非文件属性决定</strong>  </p><hr><p><strong>范例:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# [ -w /data/scripts/rm.sh ]</span><br><span class="line">root@ubuntu200404:/data/scripts# echo $?</span><br><span class="line">0</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><p><strong>文件属性测试</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-s FILE #是否存在且非空</span><br><span class="line">-t fd #fd 文件描述符是否在某终端已经打开</span><br><span class="line">-N FILE #文件自从上一次被读取之后是否被修改过</span><br><span class="line">-O FILE #当前有效用户是否为文件属主</span><br><span class="line">-G FILE #当前有效用户是否为文件属组</span><br><span class="line">FILE1 -ef FILE2 #FILE1是否是FILE2的硬链接</span><br><span class="line">FILE1 -nt FILE2 #FILE1是否新于FILE2（mtime）</span><br><span class="line">FILE1 -ot FILE2 #FILE1是否旧于FILE2</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu200404:/data/scripts# [ -s /data/scripts/rm.sh ]</span><br><span class="line">root@ubuntu200404:/data/scripts# echo $?</span><br><span class="line">0</span><br><span class="line">root@ubuntu200404:/data/scripts# </span><br></pre></td></tr></table></figure><h2 id="2-11-关于（）和"><a href="#2-11-关于（）和" class="headerlink" title="2.11 关于（）和{}"></a>2.11 关于（）和{}</h2><p><strong>（CMD1;CMD2;…）和 { CMD1;CMD2;…; } 都可以将多个命令组合在一起，批量执行</strong>**</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">( list ) 会开启子shell,并且list中变量赋值及内部命令执行后,将不再影响后续的环境</span><br><span class="line">帮助参看:man bash 搜索(list)</span><br><span class="line">&#123; list; &#125; 不会启子shell, 在当前shell中运行,会影响当前shell环境</span><br><span class="line">帮助参看:man bash 搜索&#123; list; &#125;</span><br><span class="line"></span><br><span class="line">( list ) 会开启子shell,并且list中变量赋值及内部命令执行后,将不再影响后续的环境</span><br><span class="line">帮助参看:man bash 搜索(list)</span><br><span class="line">&#123; list; &#125; 不会启子shell, 在当前shell中运行,会影响当前shell环境</span><br><span class="line">帮助参看:man bash 搜索&#123; list; &#125;</span><br><span class="line"></span><br><span class="line">#（）会开启子shell</span><br><span class="line">[root@centos8 ~]#echo $BASHPID</span><br><span class="line">1920</span><br><span class="line">[root@centos8 ~]#( echo $BASHPID;sleep 100)</span><br><span class="line">1979</span><br><span class="line">[root@centos8 ~]#pstree -p</span><br><span class="line">├─sshd(719)───sshd(1906)───sshd(1919)─┬─bash(1920)───bash(1979)───sleep(1980)</span><br><span class="line">#&#123; &#125; 不会开启子shell</span><br><span class="line">[root@centos8 ~]#echo $BASHPID</span><br><span class="line">1920</span><br></pre></td></tr></table></figure><h2 id="2-12-组合测试"><a href="#2-12-组合测试" class="headerlink" title="2.12 组合测试"></a>2.12 组合测试</h2><h3 id="2-12-1-第一种方式"><a href="#2-12-1-第一种方式" class="headerlink" title="2.12.1 第一种方式"></a>2.12.1 第一种方式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[ EXPRESSION1 -a EXPRESSION2 ] #并且，EXPRESSION1和EXPRESSION2都是真，结果才为真</span><br><span class="line">[ EXPRESSION1 -o EXPRESSION2 ] #或者，EXPRESSION1和EXPRESSION2只要有一个真，结果就为</span><br><span class="line">真</span><br><span class="line">[ ! EXPRESSION ] #取反</span><br></pre></td></tr></table></figure><p><strong>说明： -a 和 -o 需要使用测试命令进行，[[ ]] 不支持</strong></p><h3 id="2-12-2-第二种方式"><a href="#2-12-2-第二种方式" class="headerlink" title="2.12.2 第二种方式"></a>2.12.2 第二种方式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">COMMAND1 &amp;&amp; COMMAND2 #并且，短路与，代表条件性的AND THEN</span><br><span class="line">如果COMMAND1 成功,将执行COMMAND2,否则,将不执行COMMAND2</span><br><span class="line">COMMAND1 || COMMAND2 #或者，短路或，代表条件性的OR ELSE</span><br><span class="line">如果COMMAND1 成功,将不执行COMMAND2,否则,将执行COMMAND2</span><br><span class="line">! COMMAND #非,取反</span><br></pre></td></tr></table></figure><p><strong>如果&amp;&amp; 和 || 混合使用，&amp;&amp; 要在前，|| 放在后</strong>  </p><hr><p><strong>练习</strong><br>1、编写脚本 argsnum.sh，接受一个文件路径作为参数；如果参数个数小于1，则提示用户“至少应该给一个参数”，并立即退出；如果参数个数不小于1，则显示第一个参数所指向的文件中的空白行数<br>2、编写脚本 hostping.sh，接受一个主机的IPv4地址做为参数，测试是否可连通。如果能ping通，则提示用户“该IP地址可访问”；如果不可ping通，则提示用户“该IP地址不可访问”<br>3、编写脚本 checkdisk.sh，检查磁盘分区空间和inode使用率，如果超过80%，就发广播警告空间将满<br>4、编写脚本 per.sh，判断当前用户对指定参数文件，是否不可读并且不可写<br>5、编写脚本 excute.sh ，判断参数文件是否为sh后缀的普通文件，如果是，添加所有人可执行权限，否则提示用户非脚本文件<br>6、编写脚本 nologin.sh和 login.sh，实现禁止和允许普通用户登录系统</p><h2 id="2-13-使用read命令来接受输入"><a href="#2-13-使用read命令来接受输入" class="headerlink" title="2.13 使用read命令来接受输入"></a>2.13 使用read命令来接受输入</h2><p>使用read来把输入值分配给一个或多个shell变量，read从标准输入中读取值，给每个单词分配一个变量，所有剩余单词都被分配给最后一个变量，如果变量名没有指定，默认标准输入的值赋值给系统内置变量REPLY<br>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">read [options] [name ...]</span><br></pre></td></tr></table></figure><p><strong>常用选项：</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-p 指定要显示的提示</span><br><span class="line">-s 静默输入，一般用于密码</span><br><span class="line">-n N 指定输入的字符长度N</span><br><span class="line">-d &#x27;字符&#x27; 输入结束符</span><br><span class="line">-t N TIMEOUT为N秒</span><br></pre></td></tr></table></figure><p><strong>范例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky ~]# read -p &#x27;请输入任意内容&#x27; NAME</span><br><span class="line">请输入任意内容yuan</span><br><span class="line">[root@rocky ~]# echo $&#123;NAME&#125;</span><br><span class="line">yuan</span><br><span class="line">[root@rocky ~]# </span><br></pre></td></tr></table></figure><h1 id="3-条件选择if"><a href="#3-条件选择if" class="headerlink" title="3  条件选择if"></a>3  条件选择if</h1><p><strong>格式：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if COMMANDS; then COMMANDS; [ elif COMMANDS; then COMMANDS; ]... [ else</span><br><span class="line">COMMANDS; ] fi</span><br></pre></td></tr></table></figure><p><strong>单分支：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if 判断条件;then</span><br><span class="line">条件为真的分支代码</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>双分支：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if 判断条件; then</span><br><span class="line">条件为真的分支代码</span><br><span class="line">else</span><br><span class="line">条件为假的分支代码</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>多分支：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">if 判断条件1; then</span><br><span class="line">条件1为真的分支代码</span><br><span class="line">elif 判断条件2; then</span><br><span class="line">条件2为真的分支代码</span><br><span class="line">elif 判断条件3; then</span><br><span class="line">条件3为真的分支代码</span><br><span class="line">...</span><br><span class="line">else</span><br><span class="line">以上条件都为假的分支代码</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h1 id="4-循环"><a href="#4-循环" class="headerlink" title="4 循环"></a>4 循环</h1><h2 id="4-1-for循环"><a href="#4-1-for循环" class="headerlink" title="4.1 for循环"></a>4.1 for循环</h2><p><strong>帮助：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">help for</span><br></pre></td></tr></table></figure><p><strong>格式：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">for NAME [in WORDS ... ] ; do COMMANDS; done</span><br><span class="line">#方式1</span><br><span class="line">for 变量名 in 列表;do</span><br><span class="line">循环体</span><br><span class="line">done</span><br><span class="line">#方式2</span><br><span class="line">for 变量名 in 列表</span><br><span class="line">do</span><br><span class="line">循环体</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><strong>执行机制：</strong></p><ul><li>依次将列表中的元素赋值给“变量名”; 每次赋值后即执行一次循环体; 直到列表中的元素耗尽，循环结束</li><li>如果省略 [in WORDS … ] ，此时使用位置参数变量 in “$@”</li></ul><p><strong>for 循环列表生成方式：</strong></p><ul><li>直接给出列表</li><li>整数列表：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;start..end&#125;</span><br><span class="line">$(seq [start [step]] end)</span><br></pre></td></tr></table></figure><ul><li>返回列表的命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(COMMAND)</span><br></pre></td></tr></table></figure><ul><li>使用glob，如：*.sh*</li><li>*变量引用，如：$@，$*，$#</li></ul><p><strong>范例：计算1+···+100的值</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#sum=0;for i in &#123;1..100&#125;;do let sum+=i;done ;echo sum=$sum</span><br><span class="line">sum=5050</span><br><span class="line">[root@centos8 ~]#seq -s+ 100|bc5050</span><br><span class="line">5050</span><br><span class="line">[root@centos8 ~]#echo &#123;1..100&#125;|tr &#x27; &#x27; +|bc</span><br><span class="line">5050</span><br><span class="line">[root@centos8 ~]#seq 100|paste -sd +|bc</span><br><span class="line">5050</span><br></pre></td></tr></table></figure><h2 id="4-2-while循环"><a href="#4-2-while循环" class="headerlink" title="4.2 while循环"></a>4.2 while循环</h2><p><strong>格式</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">while COMMANDS; do COMMANDS; done</span><br><span class="line">while CONDITION; do</span><br><span class="line">循环体</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><strong>扩展:nc命令</strong></p><p>nc命令 全称netcat，用于设置路由器。它能通过 TCP 和 UDP 在网络中读写数据。通过与其他工具结合和重定向，你可以在脚本中以多种方式使用它。使用 netcat 命令所能完成的事情令人惊讶。</p><p><strong>选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-g&lt;网关&gt; 设置路由器跃程通信网关，最多可设置8个。</span><br><span class="line">-G&lt;指向器数目&gt; 设置来源路由指向器，其数值为4的倍数。</span><br><span class="line">-h 在线帮助。</span><br><span class="line">-i&lt;延迟秒数&gt; 设置时间间隔，以便传送信息及扫描通信端口。</span><br><span class="line">-l 使用监听模式，管控传入的资料。</span><br><span class="line">-n 直接使用IP地址，而不通过域名服务器。</span><br><span class="line">-o&lt;输出文件&gt; 指定文件名称，把往来传输的数据以16进制字码倾倒成该文件保存。</span><br><span class="line">-p&lt;通信端口&gt; 设置本地主机使用的通信端口。</span><br><span class="line">-r 乱数指定本地与远端主机的通信端口。</span><br><span class="line">-s&lt;来源位址&gt; 设置本地主机送出数据包的IP地址。</span><br><span class="line">-u 使用UDP传输协议。</span><br><span class="line">-v 显示指令执行过程。</span><br><span class="line">-w&lt;超时秒数&gt; 设置等待连线的时间。</span><br><span class="line">-z 使用0输入/输出模式，只在扫描通信端口时使用。</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">TCP端口扫描</span></span><br><span class="line">[root@rocky ~]# nc -zv 192.168.179.129 80</span><br><span class="line">Ncat: Version 7.70 ( https://nmap.org/ncat )</span><br><span class="line">Ncat: Connected to 192.168.179.129:80.</span><br><span class="line">Ncat: 0 bytes sent, 0 bytes received in 0.01 seconds.</span><br><span class="line">[root@rocky ~]# </span><br></pre></td></tr></table></figure><p><strong>范例:写一个扫描某个主机端口的状态的脚本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">变量</span></span><br><span class="line">i=1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">主机IP</span></span><br><span class="line">host=192.168.179.138</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清空文件内容</span></span><br><span class="line">cat /dev/null &gt;port.TXT</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">循环端口1-100</span></span><br><span class="line">while [ $i -le 100 ];do</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">扫描端口并将信息放入垃圾箱</span></span><br><span class="line">    if nc -z $&#123;host&#125; $&#123;i&#125; &amp;&gt; /dev/null;then</span><br><span class="line">    # 屏幕打印IP+port,输出重定向到port.TXT</span><br><span class="line">        echo $&#123;host&#125;:$&#123;i&#125; | tee -a port.TXT</span><br><span class="line">    fi</span><br><span class="line">    # i++</span><br><span class="line">    let i++</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="5-其他脚本相关工具"><a href="#5-其他脚本相关工具" class="headerlink" title="5 其他脚本相关工具"></a>5 其他脚本相关工具</h1><h2 id="5-1-trap命令"><a href="#5-1-trap命令" class="headerlink" title="5.1 trap命令"></a>5.1 trap命令</h2><p>trap命令可以捕捉信号，修改信号原有的功能，实现自定义功能</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 查看信号trap -l 或者kill -l</span><br><span class="line">root@ubuntu200404-1:/data/scripts# kill -l</span><br><span class="line"> 1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP</span><br><span class="line"> 6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL10) SIGUSR1</span><br><span class="line">11) SIGSEGV12) SIGUSR213) SIGPIPE14) SIGALRM15) SIGTERM</span><br><span class="line">16) SIGSTKFLT17) SIGCHLD18) SIGCONT19) SIGSTOP20) SIGTSTP</span><br><span class="line">21) SIGTTIN22) SIGTTOU23) SIGURG24) SIGXCPU25) SIGXFSZ</span><br><span class="line">26) SIGVTALRM27) SIGPROF28) SIGWINCH29) SIGIO30) SIGPWR</span><br><span class="line">31) SIGSYS34) SIGRTMIN35) SIGRTMIN+136) SIGRTMIN+237) SIGRTMIN+3</span><br><span class="line">38) SIGRTMIN+439) SIGRTMIN+540) SIGRTMIN+641) SIGRTMIN+742) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+944) SIGRTMIN+1045) SIGRTMIN+1146) SIGRTMIN+1247) SIGRTMIN+13</span><br><span class="line">48) SIGRTMIN+1449) SIGRTMIN+1550) SIGRTMAX-1451) SIGRTMAX-1352) SIGRTMAX-12</span><br><span class="line">53) SIGRTMAX-1154) SIGRTMAX-1055) SIGRTMAX-956) SIGRTMAX-857) SIGRTMAX-7</span><br><span class="line">58) SIGRTMAX-659) SIGRTMAX-560) SIGRTMAX-461) SIGRTMAX-362) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-164) SIGRTMAX</span><br><span class="line">root@ubuntu200404-1:/data/scripts#</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 进程收到系统发出的制定信号后，将执行自定义指令，而不会执原操作</span><br><span class="line">trap &#x27;触发指令&#x27; 信号</span><br><span class="line"></span><br><span class="line"># 忽略信号的操作</span><br><span class="line">trap &#x27;&#x27; 信号</span><br><span class="line"></span><br><span class="line"># 恢复原信号的操作</span><br><span class="line">trap &#x27;-&#x27; 信号</span><br><span class="line"></span><br><span class="line"># 列出自定义的操作</span><br><span class="line">trap -p</span><br><span class="line"></span><br><span class="line"># 当脚本退出时，执行finish函数</span><br><span class="line">trap finish exit</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"># 打印press ctrl+c or ctrl+\   replace int quit</span><br><span class="line">trap &quot;echo &#x27;press ctrl+c or ctrl+\ &#x27;&quot; 2 3</span><br><span class="line"></span><br><span class="line"># 列出 自定义的操作    </span><br><span class="line">trap -p</span><br><span class="line"></span><br><span class="line"># 循环并打印1-10</span><br><span class="line"># 打印1-10键盘按ctrl+c打印press ctrl+c or ctrl</span><br><span class="line">for ((i=1;i&lt;=10;i++))</span><br><span class="line">do</span><br><span class="line">sleep 1</span><br><span class="line">echo $&#123;i&#125;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"># 忽略2 3信号操作</span><br><span class="line">trap &#x27;&#x27; 2 3</span><br><span class="line"></span><br><span class="line"># 打印出自定义操作</span><br><span class="line">trap -p</span><br><span class="line"></span><br><span class="line"># 打印11-20</span><br><span class="line"># 打印11-20的时候键盘按ctrl+c没有任何操作</span><br><span class="line">for((i=11;i&lt;=20;i++))</span><br><span class="line">do</span><br><span class="line">sleep 1</span><br><span class="line">echo $&#123;i&#125;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"># 恢复原信号操作</span><br><span class="line">trap &#x27;-&#x27; int</span><br><span class="line"></span><br><span class="line"># 列出信号操作</span><br><span class="line">trap -p</span><br><span class="line"></span><br><span class="line"># 打印21-30键盘按ctrl+c 退出</span><br><span class="line">for((i=21;i&lt;=30;i++))</span><br><span class="line">do</span><br><span class="line">        sleep 1</span><br><span class="line">        echo $&#123;i&#125;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">finsh()&#123;</span><br><span class="line">echo `date +%F-%T`-finsh | tee -a /data/finsh.log</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"># 捕捉到退出执行finsh   trap或者exit</span><br><span class="line">trap finsh exit</span><br><span class="line"></span><br><span class="line">while true;do</span><br><span class="line">echo running</span><br><span class="line">sleep 1</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><strong>创建临时文件</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># mktemp testXXXX</span><br><span class="line">root@ubuntu200404-1:/data/scripts# mktemp testXXXXXX.log</span><br><span class="line">testdnlqM9.log</span><br><span class="line">root@ubuntu200404-1:/data/scripts# </span><br><span class="line"></span><br><span class="line"># 创建临时目录</span><br><span class="line">root@ubuntu200404-1:/data/scripts# mktemp -d testXXX</span><br><span class="line">testGio</span><br><span class="line">root@ubuntu200404-1:/data/scripts#</span><br></pre></td></tr></table></figure><h2 id="5-2-except实现自动化的非交互操作"><a href="#5-2-except实现自动化的非交互操作" class="headerlink" title="5. 2 except实现自动化的非交互操作"></a>5. 2 except实现自动化的非交互操作</h2><p>expect 是由Don Libes基于 Tcl（ Tool Command Language ）语言开发的，主要应用于自动化交互式<br>操作的场景，借助 expect 处理交互的命令，可以将交互过程如：ssh登录，ftp登录等写在一个脚本<br>上，使之自动化完成。尤其适用于需要对多台服务器执行相同操作的环境中，可以大大提高系统管理人<br>员的工作效率。</p><p><strong>expect语法</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expect [选项] [ -c cmds ] [ [ -[f|b] ] cmdfile ] [ args ]</span><br></pre></td></tr></table></figure><p><strong>常见选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-c：从命令行执行expect脚本，默认expect是交互地执行的</span><br><span class="line">-d：可以调试信息</span><br></pre></td></tr></table></figure><p><strong>expect中相关命令</strong></p><ul><li>spawn启动新的进程</li><li>expect    从进程接收字符串</li><li>send 用于向进程发送字符串</li><li>interact 允许用户交互</li><li>exp_continue 匹配多个字符串在执行动作后加此命令</li></ul><p><strong>范例1:自动登录</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 创建文件</span><br><span class="line">vim filename</span><br><span class="line"></span><br><span class="line"># 脚本内容</span><br><span class="line">#!/usr/bin/expect</span><br><span class="line"></span><br><span class="line"># 启动新的进程</span><br><span class="line">spawn ssh 192.168.179.138</span><br><span class="line"># 从进程接收字符串</span><br><span class="line">expect &#123;</span><br><span class="line"># 匹配到yse/no，输入yes</span><br><span class="line">&quot;yes/no&quot; &#123;send &quot;yes\n&quot;;exp_continue &#125;</span><br><span class="line">&quot;password&quot; &#123; send &quot;123456\n&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 允许用户交互</span><br><span class="line">interact</span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 添加可执行权限</span><br><span class="line">chmod +x filename</span><br><span class="line"># 执行</span><br><span class="line">./filename</span><br></pre></td></tr></table></figure><p><strong>扩展：scp命令</strong></p><p><strong>语法</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp 选项 参数</span><br></pre></td></tr></table></figure><p><strong>选项</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-1：使用ssh协议版本1；</span><br><span class="line">-2：使用ssh协议版本2；</span><br><span class="line">-4：使用ipv4；</span><br><span class="line">-6：使用ipv6；</span><br><span class="line">-B：以批处理模式运行；</span><br><span class="line">-C：使用压缩；</span><br><span class="line">-F：指定ssh配置文件；</span><br><span class="line">-i：identity_file 从指定文件中读取传输时使用的密钥文件（例如亚马逊云pem），此参数直接传递给ssh；</span><br><span class="line">-l：指定宽带限制；</span><br><span class="line">-o：指定使用的ssh选项；</span><br><span class="line">-P：指定远程主机的端口号；</span><br><span class="line">-p：保留文件的最后修改时间，最后访问时间和权限模式；</span><br><span class="line">-q：不显示复制进度；</span><br><span class="line">-r：以递归方式复制。</span><br></pre></td></tr></table></figure><p><strong>实例</strong><br>从远程复制到本地的scp命令与上面的命令雷同，只要将从本地复制到远程的命令后面2个参数互换顺序就行了。</p><p><strong>从远程机器复制文件到本地目录</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp root@10.10.10.10:/opt/soft/nginx-0.5.38.tar.gz /opt/soft/</span><br></pre></td></tr></table></figure><p>从10.10.10.10机器上的&#x2F;opt&#x2F;soft&#x2F;的目录中下载nginx-0.5.38.tar.gz 文件到本地&#x2F;opt&#x2F;soft&#x2F;目录中。</p><p><strong>从远程机器复制目录到本地</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r root@10.10.10.10:/opt/soft/mongodb /opt/soft/</span><br></pre></td></tr></table></figure><p>从10.10.10.10机器上的&#x2F;opt&#x2F;soft&#x2F;中下载mongodb目录到本地的&#x2F;opt&#x2F;soft&#x2F;目录来。</p><p><strong>上传本地文件到远程机器指定目录</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp /opt/soft/nginx-0.5.38.tar.gz root@10.10.10.10:/opt/soft/scptest</span><br><span class="line"># 指定端口 2222</span><br><span class="line">scp -rp -P 2222 /opt/soft/nginx-0.5.38.tar.gz root@10.10.10.10:/opt/soft/scptest</span><br></pre></td></tr></table></figure><p>复制本地&#x2F;opt&#x2F;soft&#x2F;目录下的文件nginx-0.5.38.tar.gz到远程机器10.10.10.10的opt&#x2F;soft&#x2F;scptest目录。</p><p><strong>上传本地目录到远程机器指定目录</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /opt/soft/mongodb root@10.10.10.10:/opt/soft/scptest</span><br></pre></td></tr></table></figure><p>上传本地目录&#x2F;opt&#x2F;soft&#x2F;mongodb到远程机器10.10.10.10上&#x2F;opt&#x2F;soft&#x2F;scptest的目录中去。</p><p><strong>范例2:非交互式复制文件</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/expect</span><br><span class="line"></span><br><span class="line"># 开启新的进程,复制当前主机下的/root/hello.sh到远程主机</span><br><span class="line">spawn scp /root/hello.sh root@192.168.179.129:/root</span><br><span class="line"></span><br><span class="line">expect &#123;</span><br><span class="line"># 匹配到yes/no，输入yes</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue&#125;</span><br><span class="line">&quot;password&quot; &#123; send &quot;123456\n&quot;&#125;</span><br><span class="line">&#125;</span><br><span class="line">expect eof</span><br></pre></td></tr></table></figure><p><strong>范例3:变量</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/expect</span><br><span class="line"></span><br><span class="line"># 添加变量</span><br><span class="line">set ip 192.168.179.138</span><br><span class="line">set user root</span><br><span class="line">set passwd 123456</span><br><span class="line">set timeout 10</span><br><span class="line"></span><br><span class="line"># 启动新的进程</span><br><span class="line">spawn ssh $&#123;user&#125;@$&#123;ip&#125;</span><br><span class="line"></span><br><span class="line">expect &#123;</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue&#125;</span><br><span class="line">&quot;password&quot; &#123; send &quot;$passwd\n&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 允许交互式操作</span><br><span class="line">interact</span><br></pre></td></tr></table></figure><p><strong>范例4:位置参数</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/expect</span><br><span class="line"></span><br><span class="line"># 添加变量</span><br><span class="line">set ip [lindex $argv 0]</span><br><span class="line">set user [lindex $argv 1]</span><br><span class="line">set passwd [lindex $argv 2]</span><br><span class="line">set timeout 10</span><br><span class="line"></span><br><span class="line"># 启动新的进程</span><br><span class="line">spawn ssh $&#123;user&#125;@$&#123;ip&#125;</span><br><span class="line"></span><br><span class="line">expect &#123;</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue&#125;</span><br><span class="line">&quot;password&quot; &#123; send &quot;$passwd\n&quot; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"># 允许交互式操作</span><br><span class="line">interact</span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 添加执行权限</span><br><span class="line">[root@centos7 ~]# chmmod +x expect3</span><br><span class="line"># 后面跟三个参数</span><br><span class="line">[root@centos7 ~]# ./expect3 192.168.179.138 root 123456</span><br></pre></td></tr></table></figure><p><strong>范例5:执行多个命令</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/expect</span><br><span class="line"></span><br><span class="line"># 添加变量</span><br><span class="line">set ip [lindex $argv 0]</span><br><span class="line">set user [lindex $argv 1]</span><br><span class="line">set passwd [lindex $argv 2]</span><br><span class="line">set timeout 10</span><br><span class="line"></span><br><span class="line"># 启动新的进程</span><br><span class="line">spawn ssh $&#123;user&#125;@$&#123;ip&#125;</span><br><span class="line"></span><br><span class="line">expect &#123;</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue&#125;</span><br><span class="line">&quot;password&quot; &#123; send &quot;$passwd\n&quot; &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"># adduser haha</span><br><span class="line">expect &quot;]#&quot; &#123; send &quot;useradd haha\n&quot; &#125;</span><br><span class="line"># passwd set 123456</span><br><span class="line">expect &quot;]#&quot; &#123; send &quot;echo 123456 |passwd --stdin haha\n&quot; &#125;</span><br><span class="line"># logout</span><br><span class="line">send &quot;exit\n&quot;</span><br><span class="line">expect eof</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]# ./expect4 192.168.179.141 root 123456</span><br></pre></td></tr></table></figure><p><strong>范例6:shell脚本调用expect</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">ip=$1</span><br><span class="line">user=$2</span><br><span class="line">password=$3</span><br><span class="line">expect &lt;&lt;EOF</span><br><span class="line">set timeout 20</span><br><span class="line"># 开启新的进程，登录远程主机</span><br><span class="line">spawn ssh $user@$ip</span><br><span class="line">expect &#123;</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue &#125;</span><br><span class="line">&quot;password&quot; &#123; send &quot;$password\n&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 添加新的用户</span><br><span class="line">expect &quot;]#&quot; &#123; send &quot;useradd hehe\n&quot; &#125;</span><br><span class="line"># 设置新密码</span><br><span class="line">expect &quot;]#&quot; &#123; send &quot;echo 123456 |passwd --stdin hehe\n&quot; &#125;</span><br><span class="line"># logout</span><br><span class="line">expect &quot;]#&quot; &#123; send &quot;exit\n&quot; &#125;</span><br><span class="line">expect eof</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# bash expect5.sh 192.168.179.141 root 123456</span><br></pre></td></tr></table></figure><p><strong>范例7: shell脚本利用循环调用expect在CentOS和Ubuntu上批量创建用户</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">NET=10.0.0</span><br><span class="line">user=root</span><br><span class="line">password=magedu</span><br><span class="line">IPLIST=&quot;</span><br><span class="line">7</span><br><span class="line">18</span><br><span class="line">101</span><br><span class="line">&quot;</span><br><span class="line">for ID in $IPLIST;do</span><br><span class="line">ip=$NET.$ID</span><br><span class="line">expect &lt;&lt;EOF</span><br><span class="line">set timeout 20</span><br><span class="line">spawn ssh $user@$ip</span><br><span class="line">expect &#123;</span><br><span class="line">&quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue &#125;</span><br><span class="line">&quot;password&quot; &#123; send &quot;$password\n&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect &quot;#&quot; &#123; send &quot;useradd test\n&quot; &#125;</span><br><span class="line">expect &quot;#&quot; &#123; send &quot;exit\n&quot; &#125;</span><br><span class="line">expect eof</span><br><span class="line">EOF</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="6-数组"><a href="#6-数组" class="headerlink" title="6 数组"></a>6 数组</h1><h2 id="6-1-数组介绍"><a href="#6-1-数组介绍" class="headerlink" title="6.1 数组介绍"></a>6.1 数组介绍</h2><p>变量：存储单个元素的内存空间<br>数组：存储多个元素的连续的内存空间，相当于多个变量的集合<br>数组名和索引</p><ul><li>索引的编号从0开始，属于数值索引</li><li>索引可支持使用自定义的格式，而不仅是数值格式，即为关联索引，bash 4.0版本之后开始支持</li><li>bash的数组支持稀疏格式（索引不连续）</li></ul><h2 id="6-2-声明数组"><a href="#6-2-声明数组" class="headerlink" title="6.2 声明数组"></a>6.2 声明数组</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#普通数组可以不事先声明,直接使用</span><br><span class="line">declare -a ARRAY_NAME</span><br><span class="line">#关联数组必须先声明,再使用</span><br><span class="line">declare -A ARRAY_NAME</span><br></pre></td></tr></table></figure><p><strong>注:两者不可相互转换</strong></p><h2 id="6-3-数组赋值"><a href="#6-3-数组赋值" class="headerlink" title="6.3 数组赋值"></a>6.3 数组赋值</h2><p>数组元素的赋值<br>**(1) 一次只赋值一个元素  **</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ARRAY_NAME[INDEX]=VALUE</span><br></pre></td></tr></table></figure><p><strong>范例：</strong>  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">weekdays[0]=&quot;Sunday&quot;</span><br><span class="line">weekdays[4]=&quot;Thursday&quot;</span><br></pre></td></tr></table></figure><p><strong>(2) 一次赋值全部元素</strong>  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ARRAY_NAME=(&quot;VAL1&quot; &quot;VAL2&quot; &quot;VAL3&quot; ...)</span><br></pre></td></tr></table></figure><p><strong>范例:</strong>  </p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title=(&quot;ceo&quot; &quot;coo&quot; &quot;cto&quot;)</span><br><span class="line">num=(&#123;0..10&#125;)</span><br><span class="line">alpha=(&#123;a..g&#125;)</span><br><span class="line">file=( *.sh )</span><br></pre></td></tr></table></figure><p><strong>(3)只赋值特定元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ARRAY_NAME=([0]=&quot;VAL1&quot; [3]=&quot;VAL2&quot; ...)</span><br></pre></td></tr></table></figure><p><strong>(4)交互式赋值元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">read -a ARRAY</span><br></pre></td></tr></table></figure><h2 id="6-4-显示所有数组"><a href="#6-4-显示所有数组" class="headerlink" title="6.4 显示所有数组"></a>6.4 显示所有数组</h2><p><strong>显示所有数组</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">declare -a</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# declare -a</span><br><span class="line">declare -a BASH_ARGC=&#x27;()&#x27;</span><br><span class="line">declare -a BASH_ARGV=&#x27;()&#x27;</span><br><span class="line">declare -a BASH_LINENO=&#x27;()&#x27;</span><br><span class="line">declare -a BASH_SOURCE=&#x27;()&#x27;</span><br><span class="line">declare -ar BASH_VERSINFO=&#x27;([0]=&quot;4&quot; [1]=&quot;2&quot; [2]=&quot;46&quot; [3]=&quot;2&quot; [4]=&quot;release&quot; [5]=&quot;x86_64-redhat-linux-gnu&quot;)&#x27;</span><br><span class="line">declare -a DIRSTACK=&#x27;()&#x27;</span><br><span class="line">declare -a FUNCNAME=&#x27;()&#x27;</span><br><span class="line">declare -a GROUPS=&#x27;()&#x27;</span><br><span class="line">declare -a PIPESTATUS=&#x27;([0]=&quot;0&quot;)&#x27;</span><br><span class="line">[root@centos7 ~]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="6-5-引用数组"><a href="#6-5-引用数组" class="headerlink" title="6.5 引用数组"></a>6.5 引用数组</h2><p><strong>引用特定的数组元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$&#123;ARRAY_NAME[INDEX]&#125;</span><br><span class="line">#如果省略[INDEX]表示引用下标为0的元素</span><br></pre></td></tr></table></figure><p><strong>引用所有数组元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$&#123;ARRAY_NAME[*]&#125;</span><br><span class="line">$&#123;ARRAY_NAME[@]&#125;</span><br></pre></td></tr></table></figure><p><strong>数组的长度，即数组的元素的个数</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$&#123;#ARRAY_NAME[*]&#125;</span><br><span class="line">$&#123;#ARRAY_NAME[@]&#125;</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# title[0]=1</span><br><span class="line">[root@centos7 ~]# title[1]=1</span><br><span class="line">[root@centos7 ~]# title[2]=1</span><br><span class="line">[root@centos7 ~]# echo $&#123;#title[*]&#125;</span><br><span class="line">3</span><br><span class="line">[root@centos7 ~]# </span><br></pre></td></tr></table></figure><p><strong>数组的所有下标</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$&#123;!ARRAY_NAME[*]&#125;</span><br><span class="line">$&#123;!ARRAY_NAME[@]&#125;</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# title[0]=1</span><br><span class="line">[root@centos7 ~]# title[1]=1</span><br><span class="line">[root@centos7 ~]# title[2]=1</span><br><span class="line">[root@centos7 ~]# echo $&#123;!title[*]&#125;</span><br><span class="line">0 1 2</span><br><span class="line">[root@centos7 ~]# </span><br></pre></td></tr></table></figure><h2 id="6-6-删除数组"><a href="#6-6-删除数组" class="headerlink" title="6.6 删除数组"></a>6.6 删除数组</h2><p><strong>删除数组中的某个元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unset ARRAY[INDEX]</span><br></pre></td></tr></table></figure><p><strong>删除整个数组</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unset ARRAY</span><br></pre></td></tr></table></figure><h2 id="6-7-数组数据处理"><a href="#6-7-数组数据处理" class="headerlink" title="6.7 数组数据处理"></a>6.7 数组数据处理</h2><p><strong>数据切片</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$&#123;ARRAY[@]:offset:number&#125;</span><br><span class="line">$&#123;ARRAY[*]:offset:number&#125;</span><br><span class="line">offset #要跳过的元素个数</span><br><span class="line">number #要取出的元素个数</span><br><span class="line">#取偏移量之后的所有元素</span><br><span class="line">&#123;ARRAY[@]:offset&#125;</span><br><span class="line">&#123;ARRAY[*]:offset&#125;</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#num=(&#123;0..10&#125;)</span><br><span class="line">[root@centos8 ~]#echo $&#123;num[*]:2:3&#125;</span><br><span class="line">2 3 4</span><br><span class="line">[root@centos8 ~]#echo $&#123;num[*]:6&#125;</span><br><span class="line">6 7 8 9 10</span><br></pre></td></tr></table></figure><p><strong>向数组中追加元素</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ARRAY[$&#123;#ARRAY[*]&#125;]=value</span><br><span class="line">ARRAY[$&#123;#ARRAY[@]&#125;]=value</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#num[$&#123;#num[@]&#125;]=11</span><br><span class="line">[root@centos8 ~]#echo $&#123;#num[@]&#125;</span><br><span class="line">12</span><br><span class="line">[root@centos8 ~]#echo $&#123;num[@]&#125;</span><br><span class="line">0 1 2 3 4 5 6 7 8 9 10 11</span><br></pre></td></tr></table></figure><p><strong>范例：生成10个随机数保存于数组中，并找出其最大值和最小值</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">declare -i min max</span><br><span class="line">declare -a nums</span><br><span class="line">for ((i=0;i&lt;10;i++));do</span><br><span class="line">nums[$i]=$RANDOM</span><br><span class="line">[ $i -eq 0 ] &amp;&amp; min=$&#123;nums[0]&#125; &amp;&amp; max=$&#123;nums[0]&#125;&amp;&amp; continue</span><br><span class="line">[ $&#123;nums[$i]&#125; -gt $max ] &amp;&amp; max=$&#123;nums[$i]&#125; &amp;&amp; continue</span><br><span class="line">[ $&#123;nums[$i]&#125; -lt $min ] &amp;&amp; min=$&#123;nums[$i]&#125;</span><br><span class="line">done</span><br><span class="line">echo &quot;All numbers are $&#123;nums[*]&#125;&quot;</span><br><span class="line">echo Max is $max</span><br><span class="line">echo Min is $min</span><br></pre></td></tr></table></figure><h1 id="7-字符串处理"><a href="#7-字符串处理" class="headerlink" title="7 字符串处理"></a>7 字符串处理</h1><h2 id="7-1-字符串切片"><a href="#7-1-字符串切片" class="headerlink" title="7.1 字符串切片"></a>7.1 字符串切片</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#返回字符串变量var的字符的长度,一个汉字算一个字符</span><br><span class="line">$&#123;#var&#125;</span><br><span class="line">#返回字符串变量var中从第offset个字符后（不包括第offset个字符）的字符开始，到最后的部分，</span><br><span class="line">offset的取值在0 到 $&#123;#var&#125;-1 之间(bash4.2后，允许为负值)</span><br><span class="line">$&#123;var:offset&#125;</span><br><span class="line">#返回字符串变量var中从第offset个字符后（不包括第offset个字符）的字符开始，长度为number的部分</span><br><span class="line">$&#123;var:offset:number&#125;</span><br><span class="line">#取字符串的最右侧几个字符,取字符串的最右侧几个字符, 注意：冒号后必须有一空白字符</span><br><span class="line">$&#123;var: -length&#125;</span><br><span class="line">#从最左侧跳过offset字符，一直向右取到距离最右侧lengh个字符之前的内容,即:掐头去尾</span><br><span class="line">$&#123;var:offset:-length&#125;</span><br><span class="line">#先从最右侧向左取到length个字符开始，再向右取到距离最右侧offset个字符之间的内容,注意：-</span><br><span class="line">length前空格,并且length必须大于offset</span><br><span class="line">$&#123;var: -length:-offset&#125;</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 script40]#str=abcdef我你他</span><br><span class="line">[root@centos8 script40]#echo $&#123;#str&#125;</span><br><span class="line">9</span><br><span class="line">[root@centos8 script40]#echo $&#123;str:2&#125;</span><br><span class="line">cdef我你他</span><br><span class="line">[root@centos8 script40]#echo $&#123;str:2:3&#125;</span><br><span class="line">cde</span><br><span class="line">[root@centos8 script40]#echo $&#123;str:-3&#125;</span><br><span class="line">abcdef我你他</span><br><span class="line">[root@centos8 script40]#echo $&#123;str: -3&#125;</span><br><span class="line">我你他</span><br><span class="line">[root@centos8 script40]#echo $&#123;str:2:-3&#125;</span><br><span class="line">cdef</span><br><span class="line">[root@centos8 script40]#echo $&#123;str: -2:-3&#125;</span><br><span class="line">-bash: -3: substring expression &lt; 0</span><br><span class="line">[root@centos8 script40]#echo $&#123;str: -3:-2&#125;</span><br><span class="line">我</span><br><span class="line">[root@centos8 script40]#echo $&#123;str:-3:-2&#125;</span><br><span class="line">abcdef我你他</span><br><span class="line">[root@centos8 script40]#echo $&#123;str: -3:-2&#125;</span><br><span class="line">我</span><br><span class="line">[root@centos8 script40]#echo $&#123;str: -5:-2&#125;</span><br><span class="line">ef我</span><br></pre></td></tr></table></figure><h2 id="7-2-基于模式取子串"><a href="#7-2-基于模式取子串" class="headerlink" title="7.2 基于模式取子串"></a>7.2 基于模式取子串</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#其中word可以是指定的任意字符,自左而右，查找var变量所存储的字符串中，第一次出现的word, 删除字</span><br><span class="line">符串开头至第一次出现word字符串（含）之间的所有字符,即懒惰模式,以第一个word为界删左留右</span><br><span class="line">$&#123;var#*word&#125;</span><br><span class="line">#从var变量的值中删除以word开头的部分</span><br><span class="line">$&#123;var#word&#125;</span><br><span class="line">#同上，贪婪模式，不同的是，删除的是字符串开头至最后一次由word指定的字符之间的所有内容,即贪婪模</span><br><span class="line">式,以最后一个word为界删左留右</span><br><span class="line">$&#123;var##*word&#125;</span><br><span class="line">$&#123;var##word&#125;</span><br></pre></td></tr></table></figure><p><strong>范例</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#file=&quot;var/log/messages&quot;</span><br><span class="line">[root@centos8 ~]#echo $&#123;file#*/&#125;</span><br><span class="line">log/messages</span><br><span class="line">[root@centos8 ~]#echo $&#123;file##*/&#125;</span><br><span class="line">messages</span><br></pre></td></tr></table></figure><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#其中word可以是指定的任意字符,功能：自右而左，查找var变量所存储的字符串中，第一次出现的word,</span><br><span class="line">删除字符串最后一个字符向左至第一次出现word字符串（含）之间的所有字符,即懒惰模式,以从右向左的第</span><br><span class="line">一个word为界删右留左</span><br><span class="line">$&#123;var%word*&#125;</span><br><span class="line">$&#123;var%word&#125;</span><br><span class="line">#同上，只不过删除字符串最右侧的字符向左至最后一次出现word字符之间的所有字符,即贪婪模式,以从右向</span><br><span class="line">左的最后一个word为界删右留左</span><br><span class="line">$&#123;var%%word*&#125;</span><br><span class="line">$&#123;var%%word&#125;</span><br></pre></td></tr></table></figure><h2 id="7-3-查找和替换"><a href="#7-3-查找和替换" class="headerlink" title="7.3 查找和替换"></a>7.3 查找和替换</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#查找var所表示的字符串中，第一次被pattern所匹配到的字符串，以substr替换之</span><br><span class="line">$&#123;var/pattern/substr&#125;</span><br><span class="line">#查找var所表示的字符串中，所有能被pattern所匹配到的字符串，以substr替换之</span><br><span class="line">$&#123;var//pattern/substr&#125;</span><br><span class="line">#查找var所表示的字符串中，行首被pattern所匹配到的字符串，以substr替换之</span><br><span class="line">$&#123;var/#pattern/substr&#125;</span><br><span class="line">#查找var所表示的字符串中，行尾被pattern所匹配到的字符串，以substr替换之</span><br><span class="line">$&#123;var/%pattern/substr&#125;</span><br></pre></td></tr></table></figure><h2 id="7-4-查找和删除"><a href="#7-4-查找和删除" class="headerlink" title="7.4 查找和删除"></a>7.4 查找和删除</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#删除var表示的字符串中第一次被pattern匹配到的字符串</span><br><span class="line">$&#123;var/pattern&#125;</span><br><span class="line">#删除var表示的字符串中所有被pattern匹配到的字符串</span><br><span class="line">$&#123;var//pattern&#125;</span><br><span class="line">#删除var表示的字符串中所有以pattern为行首匹配到的字符串</span><br><span class="line">$&#123;var/#pattern&#125;</span><br><span class="line">#删除var所表示的字符串中所有以pattern为行尾所匹配到的字符串</span><br><span class="line">$&#123;var/%pattern&#125;</span><br></pre></td></tr></table></figure><h2 id="7-5-字符大小写转换"><a href="#7-5-字符大小写转换" class="headerlink" title="7.5 字符大小写转换"></a>7.5 字符大小写转换</h2><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#把var中的所有小写字母转换为大写</span><br><span class="line">$&#123;var^^&#125;</span><br><span class="line">#把var中的所有大写字母转换为小写</span><br><span class="line">$&#123;var,,&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件查找和打包压缩</title>
      <link href="/2022/08/01/%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E5%92%8C%E6%89%93%E5%8C%85%E5%8E%8B%E7%BC%A9/"/>
      <url>/2022/08/01/%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E5%92%8C%E6%89%93%E5%8C%85%E5%8E%8B%E7%BC%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="文件查找和打包压缩"><a href="#文件查找和打包压缩" class="headerlink" title="文件查找和打包压缩"></a>文件查找和打包压缩</h1>  <p class="note note-success">内容概述</p>   <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- locate  </span><br><span class="line">- find  </span><br><span class="line">- xargs  </span><br><span class="line">- compress和uncompress  </span><br><span class="line">- gzip和gunzip  </span><br><span class="line">- bzip2和bunzip2  </span><br><span class="line">- xz和unxz  </span><br><span class="line">- zip和unzip  </span><br><span class="line">- tar </span><br></pre></td></tr></table></figure><h2 id="1-查找工具"><a href="#1-查找工具" class="headerlink" title="1 查找工具"></a>1 查找工具</h2><p>在文件系统上查找符合条件的文件<br>文件查找：</p><ul><li>非实时查找(数据库查找)：locate</li><li>实时查找：find</li></ul><h3 id="1-1-locate"><a href="#1-1-locate" class="headerlink" title="1.1 locate"></a>1.1 locate</h3><p>locate 查询系统上预建的文件索引数据库&#x2F;var&#x2F;lib&#x2F;mlocate&#x2F;mlocate.db<br>索引的构建是在系统较为空闲时自动进行(周期性任务)，执行updatedb可以更新数据库<br>索引构建过程需要遍历整个根文件系统，很消耗资源<br>locate和updatedb命令来自于mlocate包<br>工作特点:</p><ul><li>查找速度快</li><li>模糊查找</li><li>非实时查找</li><li>搜索的是文件的全路径，不仅仅是文件名</li><li>可能只搜索用户具备读取和执行权限的目录</li></ul><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locate [OPTION]... [PATTERN]...</span><br></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-i 不区分大小写的搜索</span><br><span class="line">-n N 只列举前N个匹配项目</span><br><span class="line">-r 使用基本正则表达式</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#搜索名称或路径中包含“conf&quot;的文件</span><br><span class="line">locate conf</span><br><span class="line">#使用Regex来搜索以“.conf&quot;结尾的文件</span><br><span class="line">locate -r &#x27;\.conf$&#x27;</span><br></pre></td></tr></table></figure><p>范例：创建locatedb数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# updatedb</span><br><span class="line">[root@rocky8 data]# locate -n 3 conf</span><br><span class="line">/boot/config-4.18.0-372.13.1.el8_6.x86_64</span><br><span class="line">/boot/config-4.18.0-372.9.1.el8.x86_64</span><br><span class="line">/boot/grub2/i386-pc/configfile.mod</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>范例: 文件新创建和删除,无法马上更新locate数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"># 创建yuankun.txt文件查找没有结果</span><br><span class="line">[root@rocky8 data]# touch yuankun.txt</span><br><span class="line">[root@rocky8 data]# locate yuankun.txt </span><br><span class="line">[root@rocky8 data]# </span><br><span class="line"></span><br><span class="line"># 已经删除/data/a.txt文件，查找a.txt文件还能找到</span><br><span class="line">[root@rocky8 data]# ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 root root   22 Jul 30 04:07 a.txt</span><br><span class="line">-rw-r--r-- 1 root root 1511 Jul 30 05:11 passwd</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  1 22:06 yuankun.txt</span><br><span class="line">[root@rocky8 data]# rm -rf a.txt </span><br><span class="line">[root@rocky8 data]# locate a.txt</span><br><span class="line">/data/a.txt</span><br><span class="line">/home/yuankun/a.txt</span><br><span class="line">/root/a.txt</span><br><span class="line">/root/data.txt</span><br><span class="line">/usr/lib/firmware/brcm/brcmfmac43340-sdio.pov-tab-p1006w-data.txt</span><br><span class="line">/usr/lib/firmware/brcm/brcmfmac43430-sdio.sinovoip,bpi-m2-ultra.txt</span><br><span class="line">/usr/share/crypto-policies/DEFAULT/java.txt</span><br><span class="line">/usr/share/crypto-policies/EMPTY/java.txt</span><br><span class="line">/usr/share/crypto-policies/FIPS/java.txt</span><br><span class="line">/usr/share/crypto-policies/FUTURE/java.txt</span><br><span class="line">/usr/share/crypto-policies/LEGACY/java.txt</span><br><span class="line">/usr/share/doc/perl-CPAN-Meta/t/README-data.txt</span><br><span class="line">/usr/share/doc/vim-common/README_extra.txt</span><br><span class="line">/usr/share/gnupg/help.ca.txt</span><br><span class="line">/usr/share/gnupg/help.da.txt</span><br><span class="line">/usr/share/gnupg/help.ja.txt</span><br><span class="line">/usr/share/vim/vim80/doc/ft_ada.txt</span><br><span class="line">/usr/share/vim/vim80/doc/if_lua.txt</span><br><span class="line">/usr/share/vim/vim80/doc/os_amiga.txt</span><br><span class="line">/usr/share/vim/vim80/doc/uganda.txt</span><br><span class="line">/www/server/panel/pyenv/lib/python3.7/test/test_email/data/msg_12a.txt</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><h3 id="1-2-find"><a href="#1-2-find" class="headerlink" title="1.2 find"></a>1.2 find</h3><p>find 是实时查找工具，通过遍历指定路径完成文件查找。<br>工作特点：</p><ul><li>查找速度略慢</li><li>精确查找</li><li>实时查找</li><li>查找条件丰富</li><li>可能只搜索用户具备读取和执行权限的目录</li></ul><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find [OPTION]... [查找路径] [查找条件] [处理动作]</span><br></pre></td></tr></table></figure><p>查找路径：指定具体目标路径；默认为当前目录<br>查找条件：指定的查找标准，可以文件名、大小、类型、权限等标准进行；默认为找出指定路径下的所<br>有文件<br>处理动作：对符合条件的文件做操作，默认输出至屏幕</p><h4 id="1-2-1-指定搜索目录层级"><a href="#1-2-1-指定搜索目录层级" class="headerlink" title="1.2.1 指定搜索目录层级"></a>1.2.1 指定搜索目录层级</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-maxdepth level 最大搜索目录深度,指定目录下的文件为第1级</span><br><span class="line">-mindepth level 最小搜索目录深度</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /etc -maxdepth 2 -mindepth 2</span><br></pre></td></tr></table></figure><h4 id="1-2-2-对每个目录先处理目录内的文件，再处理目录本身"><a href="#1-2-2-对每个目录先处理目录内的文件，再处理目录本身" class="headerlink" title="1.2.2 对每个目录先处理目录内的文件，再处理目录本身"></a>1.2.2 对每个目录先处理目录内的文件，再处理目录本身</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-depth</span><br><span class="line">-d #warning: the -d option is deprecated; please use -depth instead, because the latter is a POSIX-compliant feature</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 data]#tree /data/test</span><br><span class="line">/data/test</span><br><span class="line">├── f1.txt</span><br><span class="line">├── f2.txt</span><br><span class="line">└── test2</span><br><span class="line">└── test3</span><br><span class="line">├── f3.txt</span><br><span class="line">└── f4.txt</span><br><span class="line">4 directories, 2 files</span><br><span class="line">[root@centos8 data]#find /data/test</span><br><span class="line">/data/test</span><br><span class="line">/data/test/f1.txt</span><br><span class="line">/data/test/f2.txt</span><br><span class="line">/data/test/test2</span><br><span class="line">/data/test/test2/test3</span><br><span class="line">/data/test/test2/test3/f3.txt</span><br><span class="line">/data/test/test2/test3/f4.txt</span><br><span class="line">[root@centos8 data]#find /data/test -depth</span><br><span class="line">/data/test/f1.txt</span><br><span class="line">/data/test/f2.txt</span><br><span class="line">/data/test/test2/test3/f3.txt</span><br><span class="line">/data/test/test2/test3/f4.txt</span><br><span class="line">/data/test/test2/test3</span><br><span class="line">/data/test/test2</span><br><span class="line">/data/test</span><br></pre></td></tr></table></figure><h4 id="1-2-3-根据文件名和inode查找"><a href="#1-2-3-根据文件名和inode查找" class="headerlink" title="1.2.3 根据文件名和inode查找"></a>1.2.3 根据文件名和inode查找</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-name &quot;文件名称&quot; #支持使用glob，如：*, ?, [], [^],通配符要加双引号引起来</span><br><span class="line">-iname &quot;文件名称&quot; #不区分字母大小写</span><br><span class="line">-inum n #按inode号查找</span><br><span class="line">-samefile name #相同inode号的文件</span><br><span class="line">-links n #链接数为n的文件</span><br><span class="line">-regex “PATTERN&quot; #以PATTERN匹配整个文件路径，而非文件名称</span><br></pre></td></tr></table></figure><h4 id="1-2-4-根据属主、属组查找"><a href="#1-2-4-根据属主、属组查找" class="headerlink" title="1.2.4 根据属主、属组查找"></a>1.2.4 根据属主、属组查找</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-user USERNAME #查找属主为指定用户(UID)的文件</span><br><span class="line">-group GRPNAME #查找属组为指定组(GID)的文件</span><br><span class="line">-uid UserID #查找属主为指定的UID号的文件</span><br><span class="line">-gid GroupID #查找属组为指定的GID号的文件</span><br><span class="line">-nouser #查找没有属主的文件</span><br><span class="line">-nogroup #查找没有属组的文件</span><br></pre></td></tr></table></figure><h4 id="1-2-5-根据文件类型查找"><a href="#1-2-5-根据文件类型查找" class="headerlink" title="1.2.5 根据文件类型查找"></a>1.2.5 根据文件类型查找</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-type TYPE</span><br><span class="line">TYPE可以是以下形式：</span><br><span class="line">f: 普通文件</span><br><span class="line">d: 目录文件</span><br><span class="line">l: 符号链接文件</span><br><span class="line">s：套接字文件</span><br><span class="line">b: 块设备文件</span><br><span class="line">c: 字符设备文件</span><br><span class="line">p: 管道文件</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查看/home的目录</span><br><span class="line">find /home –type d -ls</span><br></pre></td></tr></table></figure><h4 id="1-2-6-空文件或目录"><a href="#1-2-6-空文件或目录" class="headerlink" title="1.2.6 空文件或目录"></a>1.2.6 空文件或目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-empty</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#find /app -type d -empty</span><br></pre></td></tr></table></figure><h4 id="1-2-7-组合条件"><a href="#1-2-7-组合条件" class="headerlink" title="1.2.7 组合条件"></a>1.2.7 组合条件</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">与：-a ，默认多个条件是与关系，所以可以省略-a</span><br><span class="line">或：-o</span><br><span class="line">非：-not !</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#find /etc/ -type d -o -type l |wc -l</span><br><span class="line">307</span><br><span class="line">[root@centos8 ~]#find /etc/ -type d -o -type l -ls |wc -l</span><br><span class="line">101</span><br><span class="line">[root@centos8 ~]#find /etc/ \( -type d -o -type l \) -ls |wc -l</span><br><span class="line">30</span><br></pre></td></tr></table></figure><p>德·摩根定律：</p><ul><li>非 A) 且 (非 B) &#x3D; 非(A 或 B)</li><li>(非 A) 或 (非 B) &#x3D; 非(A 且 B)</li></ul><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!A -a !B = !(A -o B)</span><br><span class="line">!A -o !B = !(A -a B)</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#找出/tmp目录下，属主不是root，且文件名不以f开头的文件</span><br><span class="line">find /tmp \( -not -user root -a -not -name &#x27;f*&#x27; \) -ls</span><br><span class="line">find /tmp -not \( -user root -o -name &#x27;f*&#x27; \) –ls</span><br></pre></td></tr></table></figure><h4 id="1-2-8-排除目录"><a href="#1-2-8-排除目录" class="headerlink" title="1.2.8 排除目录"></a>1.2.8 排除目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#查找/etc/下，除/etc/security目录的其它所有.conf后缀的文件</span><br><span class="line">find /etc -path &#x27;/etc/security&#x27; -a -prune -o -name &quot;*.conf&quot;</span><br><span class="line">#查找/etc/下，除/etc/security和/etc/systemd,/etc/dbus-1三个目录的所有.conf后缀的文件</span><br><span class="line">find /etc \( -path &quot;/etc/security&quot; -o -path &quot;/etc/systemd&quot; -o -path &quot;/etc/dbus-</span><br><span class="line">1&quot; \) -a -prune -o -name &quot;*.conf&quot;</span><br><span class="line">#排除/proc和/sys目录</span><br><span class="line">find / \( -path &quot;/sys&quot; -o -path &quot;/proc&quot; \) -a -prune -o -type f -a -mmin -1</span><br></pre></td></tr></table></figure><p>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">find / -size +10G</span><br><span class="line">[root@centos8 ~]#find / -size +10G</span><br><span class="line">/proc/kcore</span><br><span class="line">find: ‘/proc/25229/task/25229/fd/6’: No such file or directory</span><br><span class="line">find: ‘/proc/25229/task/25229/fdinfo/6’: No such file or directory</span><br><span class="line">find: ‘/proc/25229/fd/5’: No such file or directory</span><br><span class="line">find: ‘/proc/25229/fdinfo/5’: No such file or directory</span><br><span class="line">[root@centos8 ~]#ll -h /proc/kcore</span><br><span class="line">-r-------- 1 root root 128T Dec 14 2020 /proc/kcore</span><br><span class="line">[root@centos8 ~]#du -sh /proc/kcore</span><br><span class="line">0 /proc/kcore</span><br></pre></td></tr></table></figure><h4 id="1-2-9-根据时间戳"><a href="#1-2-9-根据时间戳" class="headerlink" title="1.2.9 根据时间戳"></a>1.2.9 根据时间戳</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#以“天&quot;为单位</span><br><span class="line">-atime [+|-]#</span><br><span class="line"># #表示[#,#+1)</span><br><span class="line">+# #表示[#+1,∞]</span><br><span class="line">-# #表示[0,#)</span><br><span class="line">-mtime</span><br><span class="line">-ctime</span><br><span class="line">#以“分钟&quot;为单位</span><br><span class="line">-amin</span><br><span class="line">-mmin</span><br><span class="line">-cmin</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1659365798543.png" alt="1659365798543"></p><h4 id="1-2-10-根据权限查找"><a href="#1-2-10-根据权限查找" class="headerlink" title="1.2.10 根据权限查找"></a>1.2.10 根据权限查找</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-perm [/|-]MODE</span><br><span class="line">MODE #精确权限匹配</span><br><span class="line">/MODE #任何一类(u,g,o)对象的权限中只要有一位匹配即可，或关系，+ 从CentOS 7开始淘汰</span><br><span class="line">-MODE #每一类对象都必须同时拥有指定权限，与关系</span><br><span class="line">0 表示不关注</span><br></pre></td></tr></table></figure><p>说明：<br>find -perm 755 会匹配权限模式恰好是755的文件<br>只要当任意人有写权限时，find -perm &#x2F;222就会匹配<br>只有当每个人都有写权限时，find -perm -222才会匹配<br>只有当其它人（other）有写权限时，find -perm -002才会匹配</p><h4 id="1-2-11-处理动作"><a href="#1-2-11-处理动作" class="headerlink" title="1.2.11 处理动作"></a>1.2.11 处理动作</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-print：默认的处理动作，显示至屏幕</span><br><span class="line">-ls：类似于对查找到的文件执行&quot;ls -dils&quot;命令格式输出</span><br><span class="line">-fls file：查找到的所有文件的长格式信息保存至指定文件中，相当于 -ls &gt; file</span><br><span class="line">-delete：删除查找到的文件，慎用！</span><br><span class="line">-ok COMMAND &#123;&#125; \; 对查找到的每个文件执行由COMMAND指定的命令，对于每个文件执行命令之前，都会</span><br><span class="line">交互式要求用户确认</span><br><span class="line">-exec COMMAND &#123;&#125; \; 对查找到的每个文件执行由COMMAND指定的命令</span><br><span class="line">&#123;&#125;: 用于引用查找到的文件名称自身</span><br></pre></td></tr></table></figure><p>关于 {} ;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://askubuntu.com/questions/339015/what-does-mean-in-the-find-command</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#备份配置文件，添加.orig这个扩展名</span><br><span class="line">[root@rocky8 data]# ll</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:02 file1.conf</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:02 file2.conf</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:02 file3.conf</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:02 file4.conf</span><br><span class="line">-rw-r--r-- 1 root root 1511 Jul 30 05:11 passwd</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  1 22:06 yuankun.txt</span><br><span class="line">[root@rocky8 data]# find ./ -name &#x27;file*.conf&#x27;</span><br><span class="line">./file1.conf</span><br><span class="line">./file2.conf</span><br><span class="line">./file3.conf</span><br><span class="line">./file4.conf</span><br><span class="line">[root@rocky8 data]# find ./ -name &#x27;file*.conf&#x27; -exec cp &#123;&#125; &#123;&#125;.orig \;</span><br><span class="line">[root@rocky8 data]# ll</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:02 file1.conf</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:07 file1.conf.orig</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:02 file2.conf</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:07 file2.conf.orig</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:02 file3.conf</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:07 file3.conf.orig</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:02 file4.conf</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:07 file4.conf.orig</span><br><span class="line">-rw-r--r-- 1 root root 1511 Jul 30 05:11 passwd</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  1 22:06 yuankun.txt</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#提示删除存在时间超过３天以上的joe的临时文件</span><br><span class="line">find /tmp -ctime +3 -user joe -ok rm &#123;&#125; \;</span><br><span class="line">#在主目录中寻找可被其它用户写入的文件</span><br><span class="line">find ~ -perm -002 -exec chmod o-w &#123;&#125; \;</span><br><span class="line">#查找/data下的权限为644，后缀为sh的普通文件，增加执行权限</span><br><span class="line">find /data –type f -perm 644 -name &quot;*.sh&quot; –exec chmod 755 &#123;&#125; \;</span><br></pre></td></tr></table></figure><h3 id="1-3-参数替换xargs"><a href="#1-3-参数替换xargs" class="headerlink" title="1.3 参数替换xargs"></a>1.3 参数替换xargs</h3><p>由于很多命令不支持管道|来传递参数，xargs用于产生某个命令的参数，xargs 可以读入 stdin 的数<br>据，并且以空格符或回车符将 stdin 的数据分隔成为参数<br>另外，许多命令不能接受过多参数，命令执行可能会失败，xargs 可以解决<br>注意：文件名或者是其他意义的名词内含有空格符的情况<br>find 经常和 xargs 命令进行组合,形式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find | xargs COMMAND</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">#显示10个数字</span><br><span class="line">[root@centos8 ~]#seq 10 | xargs</span><br><span class="line">1 2 3 4 5 6 7 8 9 10</span><br><span class="line">#删除当前目录下的大量文件</span><br><span class="line">ls | xargs rm</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">find -name &quot;*.sh&quot; | xargs ls -Sl</span><br><span class="line"></span><br><span class="line">[root@centos8 data]#echo &#123;1..10&#125; |xargs</span><br><span class="line">1 2 3 4 5 6 7 8 9 10</span><br><span class="line">[root@centos8 data]#echo &#123;1..10&#125; |xargs -n1</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">[root@centos8 data]#echo &#123;1..10&#125; |xargs -n2</span><br><span class="line">1 2</span><br><span class="line">3 4</span><br><span class="line">5 6</span><br><span class="line">7 8</span><br><span class="line">9 10</span><br><span class="line"></span><br><span class="line">#批量创建和删除用户</span><br><span class="line">echo user&#123;1..10&#125; |xargs -n1 useradd</span><br><span class="line">echo user&#123;1..100&#125; | xargs -n1 userdel -r</span><br><span class="line"></span><br><span class="line">#这个命令是错误的</span><br><span class="line">find /sbin/ -perm /700 | ls -l</span><br><span class="line">#查找有特殊权限的文件，并排序</span><br><span class="line">find /bin/ -perm /7000 | xargs ls -Sl</span><br><span class="line">#此命令和上面有何区别？</span><br><span class="line">find /bin/ -perm -7000 | xargs ls -Sl</span><br><span class="line">#以字符nul分隔</span><br><span class="line">find -type f -name &quot;*.txt&quot; -print0 | xargs -0 rm</span><br><span class="line">#并发执行多个进程</span><br><span class="line">seq 100 |xargs -i -P10 wget -P /data http://10.0.0.8/&#123;&#125;.html</span><br><span class="line">#并行下载bilibili视频</span><br><span class="line">yum install python3-pip -y</span><br><span class="line">pip3 install you-get</span><br><span class="line">seq 60 | xargs -i -P3 you-get https://www.bilibili.com/video/BV14K411W7UF?p=&#123;&#125;</span><br></pre></td></tr></table></figure><p>练习<br>1、查找&#x2F;var目录下属主为root，且属组为mail的所有文件<br>2、查找&#x2F;var目录下不属于root、lp、gdm的所有文件<br>3、查找&#x2F;var目录下最近一周内其内容修改过，同时属主不为root，也不是postfix的文件<br>4、查找当前系统上没有属主或属组，且最近一个周内曾被访问过的文件<br>5、查找&#x2F;etc目录下大于1M且类型为普通文件的所有文件<br>6、查找&#x2F;etc目录下所有用户都没有写权限的文件<br>7、查找&#x2F;etc目录下至少有一类用户没有执行权限的文件<br>8、查找&#x2F;etc&#x2F;init.d目录下，所有用户都有执行权限，且其它用户有写权限的文件</p><h2 id="2-压缩和解压缩"><a href="#2-压缩和解压缩" class="headerlink" title="2 压缩和解压缩"></a>2 压缩和解压缩</h2><p>主要针对单个文件压缩，而非目录</p><h3 id="2-1-compress和uncompress"><a href="#2-1-compress和uncompress" class="headerlink" title="2.1 compress和uncompress"></a>2.1 compress和uncompress</h3><p>此工具来自于ncompress包,此工具目前已经很少使用<br>对应的文件是 .Z 后缀</p><p>常用选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-d 解压缩，相当于uncompress</span><br><span class="line">-c 结果输出至标准输出,不删除原文件</span><br><span class="line">-v 显示详情</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compress filename #压缩</span><br><span class="line">uncompress filename # 解压缩</span><br></pre></td></tr></table></figure><p>zcat file.Z 不显式解压缩的前提下查看文本文件内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zcat file.Z &gt;file</span><br></pre></td></tr></table></figure><h3 id="2-2-gzip和gunzip"><a href="#2-2-gzip和gunzip" class="headerlink" title="2.2 gzip和gunzip"></a>2.2 gzip和gunzip</h3><p>来自于 gzip 包<br>对应的文件是 .gz 后缀<br>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip [OPTION] ···file···</span><br></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-k keep, 保留原文件,CentOS 8 新特性</span><br><span class="line">-d 解压缩，相当于gunzip</span><br><span class="line">-c 结果输出至标准输出，保留原文件不改变</span><br><span class="line">-# 指定压缩比，#取值为1-9，值越大压缩比越大</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 压缩</span><br><span class="line">gzip filename</span><br><span class="line"></span><br><span class="line"># 解压缩</span><br><span class="line">gunzip file.gz</span><br><span class="line"></span><br><span class="line">#不显式解压缩的前提下查看文本文件内容</span><br><span class="line">zcat file.gz</span><br></pre></td></tr></table></figure><p>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gzip -c messages &gt;messages.gz</span><br><span class="line">gzip -c -d messages.gz &gt; messages</span><br><span class="line">zcat messages.gz &gt; messages</span><br><span class="line">cat messages | gzip &gt; m.gz</span><br></pre></td></tr></table></figure><h3 id="2-3-bzip2和bunzip2"><a href="#2-3-bzip2和bunzip2" class="headerlink" title="2.3 bzip2和bunzip2"></a>2.3 bzip2和bunzip2</h3><p>来自于 bzip2 包<br>对应的文件是 .bz2 后缀<br>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bzip2 [OPTION]... FILE ...</span><br></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-k keep, 保留原文件</span><br><span class="line">-d 解压缩</span><br><span class="line">-c 结果输出至标准输出，保留原文件不改变</span><br><span class="line">-# 1-9，压缩比，默认为9</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bzip2 file # 压缩</span><br><span class="line">bunzip2 file.bz2 解压缩</span><br><span class="line">bzcat file.bz2 不显式解压缩的前提下查看文本文件内容</span><br></pre></td></tr></table></figure><h3 id="2-4-xz和unxz"><a href="#2-4-xz和unxz" class="headerlink" title="2.4 xz和unxz"></a>2.4 xz和unxz</h3><p>来自于 xz 包<br>对应的文件是 .xz 后缀<br>格式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xz [OPTION]... FILE ...</span><br></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-k keep, 保留原文件</span><br><span class="line">-d 解压缩</span><br><span class="line">-c 结果输出至标准输出，保留原文件不改变</span><br><span class="line">-# 压缩比，取值1-9，默认为6</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unxz file.xz #解压缩</span><br><span class="line">xzcat file.xz #不显式解压缩的前提下查看文本文件内容</span><br></pre></td></tr></table></figure><h3 id="2-5-zip和unzip"><a href="#2-5-zip和unzip" class="headerlink" title="2.5 zip和unzip"></a>2.5 zip和unzip</h3><p>zip 可以实现打包目录和多个文件成一个文件并压缩，但可能会丢失文件属性信息，如：所有者和组信<br>息，一般建议使用 tar 代替<br>分别来自于 zip 和 unzip 包<br>对应的文件是 .zip 后缀<br>范例: zip帮助</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#打包并压缩</span><br><span class="line">zip -r /backup/sysconfig.zip /etc/sysconfig/</span><br><span class="line">#不包括目录本身，只打包目录内的文件和子目录</span><br><span class="line">cd /etc/sysconfig; zip -r /root/sysconfig.zip *</span><br><span class="line">#默认解压缩至当前目录</span><br><span class="line">unzip /backup/sysconfig.zip</span><br><span class="line">#解压缩至指定目录,如果指定目录不存在，会在其父目录（必须事先存在）下自动生成</span><br><span class="line">unzip /backup/sysconfig.zip -d /tmp/config</span><br><span class="line">cat /var/log/messages | zip messages -</span><br><span class="line">#-p 表示管道</span><br><span class="line">unzip -p message.zip &gt; message</span><br></pre></td></tr></table></figure><p>范例: 交互式加密和解密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# zip -e file1.conf.zip file1.conf</span><br><span class="line">Enter password: </span><br><span class="line">Verify password: </span><br><span class="line">  adding: file1.conf (stored 0%)</span><br><span class="line">[root@rocky8 data]# unzip file1.conf.zip </span><br><span class="line">Archive:  file1.conf.zip</span><br><span class="line">[file1.conf.zip] file1.conf password: </span><br><span class="line">replace file1.conf? [y]es, [n]o, [A]ll, [N]one, [r]ename: y</span><br><span class="line"> extracting: file1.conf              </span><br><span class="line">[root@rocky8 data]# ll</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:02 file1.conf</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:07 file1.conf.orig</span><br><span class="line">-rw-r--r-- 1 root root  198 Aug  2 22:06 file1.conf.zip</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:02 file2.conf</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:07 file2.conf.orig</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:02 file3.conf</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:07 file3.conf.orig</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:02 file4.conf</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  2 21:07 file4.conf.orig</span><br><span class="line">-rw-r--r-- 1 root root 1511 Jul 30 05:11 passwd</span><br><span class="line">-rw-r--r-- 1 root root    0 Aug  1 22:06 yuankun.txt</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>范例: 非交互式加密和解密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# zip -P 123456 file2.conf.zip file2.conf  # p是大P</span><br><span class="line">  adding: file2.conf (stored 0%)</span><br><span class="line"># 解压</span><br><span class="line">[root@rocky8 data]# unzip file2.conf.zip </span><br><span class="line">Archive:  file2.conf.zip</span><br><span class="line">[file2.conf.zip] file2.conf password: </span><br><span class="line">replace file2.conf? [y]es, [n]o, [A]ll, [N]one, [r]ename: y</span><br><span class="line"> extracting: file2.conf              </span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><h2 id="3-打包和解包"><a href="#3-打包和解包" class="headerlink" title="3 打包和解包"></a>3 打包和解包</h2><h3 id="3-1-tar"><a href="#3-1-tar" class="headerlink" title="3.1 tar"></a>3.1 tar</h3><p>tar 即 Tape ARchive 磁带归档，可以对目录和多个文件打包一个文件，并且可以压缩，保留文件属性不<br>丢失，常用于备份功能，推荐使用<br>对应的文件是 .tar 后缀<br>格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tar [-ABcdgGhiklmMoOpPrRsStuUvwWxzZ][-b &lt;区块数目&gt;][-C &lt;目的目录&gt;][-f &lt;备份文件&gt;][-F</span><br><span class="line">&lt;Script文件&gt;][-K &lt;文件&gt;][-L &lt;媒体容量&gt;][-N &lt;日期时间&gt;][-T &lt;范本文件&gt;][-V &lt;卷册名称&gt;][-X</span><br><span class="line">&lt;范本文件&gt;][-&lt;设备编号&gt;&lt;存储密度&gt;][--after-date=&lt;日期时间&gt;][--atime-preserve][--</span><br><span class="line">backuup=&lt;备份方式&gt;][--checkpoint][--concatenate][--confirmation][--delete][--</span><br><span class="line">exclude=&lt;范本样式&gt;][--force-local][--group=&lt;群组名称&gt;][--help][--ignore-failed-</span><br><span class="line">read][--new-volume-script=&lt;Script文件&gt;][--newer-mtime][--no-recursion][--null][--</span><br><span class="line">numeric-owner][--owner=&lt;用户名称&gt;][--posix][--erve][--preserve-order][--preserve-</span><br><span class="line">permissions][--record-size=&lt;区块数目&gt;][--recursive-unlink][--remove-files][--rsh-</span><br><span class="line">command=&lt;执行指令&gt;][--same-owner][--suffix=&lt;备份字尾字符串&gt;][--totals][--use-</span><br><span class="line">compress-program=&lt;执行指令&gt;][--version][--volno-file=&lt;编号文件&gt;][文件或目录...]</span><br></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">-A或--catenate 新增文件到已存在的备份文件。</span><br><span class="line">-b&lt;区块数目&gt;或--blocking-factor=&lt;区块数目&gt; 设置每笔记录的区块数目，每个区块大小为12Bytes。</span><br><span class="line">-B或--read-full-records 读取数据时重设区块大小。</span><br><span class="line">-c或--create 建立新的备份文件。</span><br><span class="line">-C&lt;目的目录&gt;或--directory=&lt;目的目录&gt; 切换到指定的目录。</span><br><span class="line">-d或--diff或--compare 对比备份文件内和文件系统上的文件的差异。</span><br><span class="line">-f&lt;备份文件&gt;或--file=&lt;备份文件&gt; 指定备份文件。</span><br><span class="line">-F&lt;Script文件&gt;或--info-script=&lt;Script文件&gt; 每次更换磁带时，就执行指定的Script文件。</span><br><span class="line">-g或--listed-incremental 处理GNU格式的大量备份。</span><br><span class="line"></span><br><span class="line">-G或--incremental 处理旧的GNU格式的大量备份。</span><br><span class="line">-h或--dereference 不建立符号连接，直接复制该连接所指向的原始文件。</span><br><span class="line">-i或--ignore-zeros 忽略备份文件中的0 Byte区块，也就是EOF。</span><br><span class="line">-k或--keep-old-files 解开备份文件时，不覆盖已有的文件。</span><br><span class="line">-K&lt;文件&gt;或--starting-file=&lt;文件&gt; 从指定的文件开始还原。</span><br><span class="line">-l或--one-file-system 复制的文件或目录存放的文件系统，必须与tar指令执行时所处的文件系统相</span><br><span class="line">同，否则不予复制。</span><br><span class="line">-L&lt;媒体容量&gt;或-tape-length=&lt;媒体容量&gt; 设置存放每体的容量，单位以1024 Bytes计算。</span><br><span class="line">-m或--modification-time 还原文件时，不变更文件的更改时间。</span><br><span class="line">-M或--multi-volume 在建立，还原备份文件或列出其中的内容时，采用多卷册模式。</span><br><span class="line">-N&lt;日期格式&gt;或--newer=&lt;日期时间&gt; 只将较指定日期更新的文件保存到备份文件里。</span><br><span class="line">-o或--old-archive或--portability 将资料写入备份文件时使用V7格式。</span><br><span class="line">-O或--stdout 把从备份文件里还原的文件输出到标准输出设备。</span><br><span class="line">-p或--same-permissions 用原来的文件权限还原文件。</span><br><span class="line">-P或--absolute-names 文件名使用绝对名称，不移除文件名称前的&quot;/&quot;号。</span><br><span class="line">-r或--append 新增文件到已存在的备份文件的结尾部分。</span><br><span class="line">-R或--block-number 列出每个信息在备份文件中的区块编号。</span><br><span class="line">-s或--same-order 还原文件的顺序和备份文件内的存放顺序相同。</span><br><span class="line">-S或--sparse 倘若一个文件内含大量的连续0字节，则将此文件存成稀疏文件。</span><br><span class="line">-t或--list 列出备份文件的内容。</span><br><span class="line">-T&lt;范本文件&gt;或--files-from=&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让tar解开或</span><br><span class="line">建立符合设置条件的文件。</span><br><span class="line">-u或--update 仅置换较备份文件内的文件更新的文件。</span><br><span class="line">-U或--unlink-first 解开压缩文件还原文件之前，先解除文件的连接。</span><br><span class="line">-v或--verbose 显示指令执行过程。</span><br><span class="line">-V&lt;卷册名称&gt;或--label=&lt;卷册名称&gt; 建立使用指定的卷册名称的备份文件。</span><br><span class="line">-w或--interactive 遭遇问题时先询问用户。</span><br><span class="line">-W或--verify 写入备份文件后，确认文件正确无误。</span><br><span class="line">-x或--extract或--get 从备份文件中还原文件。</span><br><span class="line">-X&lt;范本文件&gt;或--exclude-from=&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让ar排除</span><br><span class="line">符合设置条件的文件。</span><br><span class="line">-z或--gzip或--ungzip 通过gzip指令处理备份文件。</span><br><span class="line">-Z或--compress或--uncompress 通过compress指令处理备份文件。</span><br><span class="line">-&lt;设备编号&gt;&lt;存储密度&gt; 设置备份用的外围设备编号及存放数据的密度。</span><br><span class="line">--after-date=&lt;日期时间&gt; 此参数的效果和指定&quot;-N&quot;参数相同。</span><br><span class="line">--atime-preserve 不变更文件的存取时间。</span><br><span class="line">--backup=&lt;备份方式&gt;或--backup 移除文件前先进行备份。</span><br><span class="line">--checkpoint 读取备份文件时列出目录名称。</span><br><span class="line">--concatenate 此参数的效果和指定&quot;-A&quot;参数相同。</span><br><span class="line">--confirmation 此参数的效果和指定&quot;-w&quot;参数相同。</span><br><span class="line">--delete 从备份文件中删除指定的文件。</span><br><span class="line">--exclude=&lt;范本样式&gt; 排除符合范本样式的文件。</span><br><span class="line">--group=&lt;群组名称&gt; 把加入设备文件中的文件的所属群组设成指定的群组。</span><br><span class="line">--help 在线帮助。</span><br><span class="line">--ignore-failed-read 忽略数据读取错误，不中断程序的执行。</span><br><span class="line">--new-volume-script=&lt;Script文件&gt; 此参数的效果和指定&quot;-F&quot;参数相同。</span><br><span class="line">--newer-mtime 只保存更改过的文件。</span><br><span class="line">--no-recursion 不做递归处理，也就是指定目录下的所有文件及子目录不予处理。</span><br><span class="line">--null 从null设备读取文件名称。</span><br><span class="line">--numeric-owner 以用户识别码及群组识别码取代用户名称和群组名称。</span><br><span class="line">--owner=&lt;用户名称&gt; 把加入备份文件中的文件的拥有者设成指定的用户。</span><br><span class="line">--posix 将数据写入备份文件时使用POSIX格式。</span><br><span class="line">--preserve 此参数的效果和指定&quot;-ps&quot;参数相同。</span><br><span class="line">--preserve-order 此参数的效果和指定&quot;-A&quot;参数相同。</span><br><span class="line">--preserve-permissions 此参数的效果和指定&quot;-p&quot;参数相同。</span><br><span class="line">--record-size=&lt;区块数目&gt; 此参数的效果和指定&quot;-b&quot;参数相同。</span><br><span class="line">--recursive-unlink 解开压缩文件还原目录之前，先解除整个目录下所有文件的连接。</span><br><span class="line">--remove-files 文件加入备份文件后，就将其删除。</span><br><span class="line"></span><br><span class="line">--rsh-command=&lt;执行指令&gt; 设置要在远端主机上执行的指令，以取代rsh指令。</span><br><span class="line">--same-owner 尝试以相同的文件拥有者还原文件。</span><br><span class="line">--suffix=&lt;备份字尾字符串&gt; 移除文件前先行备份。</span><br><span class="line">--totals 备份文件建立后，列出文件大小。</span><br><span class="line">--use-compress-program=&lt;执行指令&gt; 通过指定的指令处理备份文件。</span><br><span class="line">--version 显示版本信息。</span><br><span class="line">--volno-file=&lt;编号文件&gt; 使用指定文件内的编号取代预设的卷册编号。</span><br></pre></td></tr></table></figure><p>范例：打包并压缩</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zcvf filename.tar.gz filename</span><br></pre></td></tr></table></figure><p>范例：解压缩</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xf filename.tar.gz</span><br></pre></td></tr></table></figure><h3 id="3-2-split"><a href="#3-2-split" class="headerlink" title="3.2 split"></a>3.2 split</h3><p>split 命令可以分割一个文件为多个文件<br>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#分割大的 tar 文件为多份小文件</span><br><span class="line">split -b Size –d tar-file-name prefix-name</span><br><span class="line">示例:</span><br><span class="line">split -b 1M mybackup.tgz mybackup-parts</span><br><span class="line">#切换成的多个小分文件使用数字后缀</span><br><span class="line">split -b 1M –d mybackup.tgz mybackup-parts</span><br></pre></td></tr></table></figure><p>将多个切割的小文件合并成一个大文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat mybackup-parts* &gt; mybackup.tar.gz</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件测试面试题</title>
      <link href="/2022/08/01/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
      <url>/2022/08/01/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="1、软件测试流程"><a href="#1、软件测试流程" class="headerlink" title="1、软件测试流程"></a>1、软件测试流程</h1><ul><li>需求评审</li><li>测试计划编写</li><li>测试用例编写</li><li>测试用例评审</li><li>执行测试用例(搭建测试环境)</li><li>编写测试报告</li></ul><h1 id="2、缺陷定义"><a href="#2、缺陷定义" class="headerlink" title="2、缺陷定义"></a>2、缺陷定义</h1><ul><li>需求要求的功能没有实现</li><li>实现了需求没有要求的功能（画蛇添足）  </li><li>软件中出现了指明不应出现的错误  </li><li>需求虽未明确指明，但是应该实现的功能没有实现</li></ul><h1 id="3、黑盒测试用例设计方法"><a href="#3、黑盒测试用例设计方法" class="headerlink" title="3、黑盒测试用例设计方法"></a>3、黑盒测试用例设计方法</h1><ul><li>等价类划分法 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户名长度为6-10位</span><br><span class="line">有效输入：6-10    可以穷举</span><br><span class="line">无效输入：&lt;6   可以穷举，&gt;10   穷举？？？？ </span><br></pre></td></tr></table></figure></li><li>边界值  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户名长度为6-10位</span><br><span class="line">有效边界值：6、7、8、9、10</span><br><span class="line">无效边界值：&lt;6   和 &gt;10</span><br></pre></td></tr></table></figure></li><li>场景分析法(ATM取款)  </li><li>正交表法  </li><li>状态迁移法<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">明确需求中有多少个状态  </span><br><span class="line">比如订单状态：待发货、已发货、签收、申请取消、拒收等</span><br></pre></td></tr></table></figure></li><li>判定表  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">某系统对修改密码有如下要求：首先输入原密码，原密码正确后才能输入新密码与确认密码，否则系统提示原密码错误。输入新密码与确认密码，检查通过后修改密码成功。新密码要求6-10位，由字母+数字组成，如果不合法提示新密码不满足复杂度要求；如果确认密码与新密码不一致，提示确认密码必须与新密码一致。请使用判定表法编写测试用例。</span><br></pre></td></tr></table></figure></li></ul><h1 id="4、六大测试分类"><a href="#4、六大测试分类" class="headerlink" title="4、六大测试分类"></a>4、六大测试分类</h1><ul><li>功能性测试（Functionality）：关注功能是否正确。  </li><li>可用性测试（Usability）：关注产品是否好用。  </li><li>兼容性测试（Compatibility）：关注产品是否适用多种平台。  </li><li>可靠性测试（Reliability）：关注产品是否稳定可靠。  </li><li>安全性测试（Security）：关注产品是否存在漏洞。  </li><li>性能测试（Performance）：关注产品是否能够高效运行。</li></ul><h1 id="5、测试用例包含那些内容"><a href="#5、测试用例包含那些内容" class="headerlink" title="5、测试用例包含那些内容"></a>5、测试用例包含那些内容</h1><ul><li>测试用例编号  </li><li>测试用例标题  </li><li>前置条件    </li><li>测试用例操作步骤  </li><li>预期结果  </li><li>优先级</li></ul><h1 id="6、怎么保证测试覆盖率"><a href="#6、怎么保证测试覆盖率" class="headerlink" title="6、怎么保证测试覆盖率"></a>6、怎么保证测试覆盖率</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">测试用例覆盖率很难达到100%，越复杂的功能越难保证，只能说尽量提高测试覆盖率。</span><br><span class="line">通过以下手段可以提高覆盖率：</span><br><span class="line">(1)编写测试用例前，检查相关需求、设计文档是否有问题（功能描述不清，设计逻辑缺陷），如有问题找相关设计或者产品问清楚。</span><br><span class="line">(2)功能列表包含新增和修改功能点，性能需求也要列出来（因为要整理对应的性能测试用例），同时还需要对既有功能进行一个梳理，检查是否会与其他功能有交互，整理出影响点。</span><br><span class="line">(3)把功能列表发给组员，并找时间进行会议评审，主要对功能等进行查漏补缺。</span><br><span class="line">(4)最后才行进测试用例编写，注意编写规范。</span><br><span class="line">(5)编写完毕后，把测试用例发给组员，开会进行评审，主要对检查点、用例规范进行查漏补缺。</span><br><span class="line">(6)执行测试用例过程中，发现用例不完善或者错误，需对测试用例进行及时的修改与调优</span><br><span class="line">(7)测试完毕后对漏测的bug进行测试用例补充。</span><br></pre></td></tr></table></figure><h1 id="7、软件测试方法"><a href="#7、软件测试方法" class="headerlink" title="7、软件测试方法"></a>7、软件测试方法</h1><ul><li>按是否清楚程序的内部逻辑：白盒测试、灰盒测试、黑盒测试</li><li>按测试执行的方式：手工测试、自动化测试</li><li>按是否允许被测软件：静态测试、动态测试</li></ul><h1 id="8、开发对缺陷不认可如何处理"><a href="#8、开发对缺陷不认可如何处理" class="headerlink" title="8、开发对缺陷不认可如何处理"></a>8、开发对缺陷不认可如何处理</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1)检查提交的BUG描述是否清楚、是否复现</span><br><span class="line">(2)查阅需求、设计文档看是否有对该问题有描述，如果没有查看类似软件是否存在该问题</span><br><span class="line">(3)如果还是不能将情况汇报给领导，并说明BUG的情况以及自己认为是BUG的理由</span><br></pre></td></tr></table></figure><h1 id="9、BUG不可复现怎么办"><a href="#9、BUG不可复现怎么办" class="headerlink" title="9、BUG不可复现怎么办"></a>9、BUG不可复现怎么办</h1><p>先在出现该问题上的环境上尽量重现，保持浏览器、账号、操作步骤环境一致。如果还是不能重现，把bug记录到BUG管理平台，详细记录BUG的操作步骤、特征、环境账号、操作截图、出现错误截图和日志截图等，并注明是偶现。如果BUG优先级比较高，项目时间允许，让开发协助重现。如果项目时间不允许，记录到BUG管理平台后续跟进。</p><h1 id="10、如何判断BUG是前端还是后端问题"><a href="#10、如何判断BUG是前端还是后端问题" class="headerlink" title="10、如何判断BUG是前端还是后端问题"></a>10、如何判断BUG是前端还是后端问题</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1)界面：文字错误、排版混乱、兼容问题前端问题</span><br><span class="line">(2)通过抓包对接口返回信息进行分析，分析出缺陷一般为后端问题</span><br><span class="line">(3)后端查看日志</span><br></pre></td></tr></table></figure><h1 id="11、接口测试流程"><a href="#11、接口测试流程" class="headerlink" title="11、接口测试流程"></a>11、接口测试流程</h1><ul><li>获取接口文档、分析接口</li><li>编写接口测试用例</li><li>测试用例评审</li><li>执行测试用例(添加线程组、添加HTTP请求，根据接口文档填写相关请求参数、参数值，断言、添加查看结果树，看接口返回信息以预期信息是否一致)</li><li>提交、跟踪缺陷和回归测试</li><li>编写测试报告</li></ul><h1 id="12、测试报告内容"><a href="#12、测试报告内容" class="headerlink" title="12、测试报告内容"></a>12、测试报告内容</h1><ul><li>测试范围  </li><li>测试时间</li><li>测试人员</li><li>测试策略</li><li>缺陷统计与分析</li><li>上线风险</li><li>遗留问题</li><li>测试是否通过</li></ul><h1 id="13、职业规划"><a href="#13、职业规划" class="headerlink" title="13、职业规划"></a>13、职业规划</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- 短期学习公司的业务，然后上手自己的工作，做好自己的本职工作，适应公司节奏</span><br><span class="line">- 长期来看，我会根据公司的发展需要继续提升自己的某项专业能力，把学习到的测试技能更好的应用到工作中去</span><br></pre></td></tr></table></figure><h1 id="14、说出自己的缺点"><a href="#14、说出自己的缺点" class="headerlink" title="14、说出自己的缺点"></a>14、说出自己的缺点</h1><p>虽然已经有两年的工作经历，但是还是认为自己的经验还不是很丰富，后期呢我也会多多加深自己的测试技术。</p><h1 id="15、做测试自己最大的优势"><a href="#15、做测试自己最大的优势" class="headerlink" title="15、做测试自己最大的优势"></a>15、做测试自己最大的优势</h1><p>(1)站在客户的角度思考问题，好的技术人员除了技术过硬外，还要懂得从用户的角度出发，要了解用户，所以我在工作中，揣摩用户的使用习惯，表达自己对产品的使用感受，在测试过程中除了提交BUG，也会偶尔反馈一些优化建议。  </p><p>(2)比较有责任心。领导交付给我一个任务。每天下班之前反馈进度，保证项目进度。遇到问题主动去协调不同部门的同事解决问题。</p><h1 id="16、UI自动化元素过程中定位不到的原因"><a href="#16、UI自动化元素过程中定位不到的原因" class="headerlink" title="16、UI自动化元素过程中定位不到的原因"></a>16、UI自动化元素过程中定位不到的原因</h1><ul><li>元素表达式编写错误  </li><li>元素未完全加载出来 </li><li>元素嵌套在iframe中  </li><li>元素在新窗口中</li><li>脚本流程与实际流程不符合</li><li>元素不在当前页</li></ul><h1 id="17、UI自动化八种定位方式"><a href="#17、UI自动化八种定位方式" class="headerlink" title="17、UI自动化八种定位方式"></a>17、UI自动化八种定位方式</h1><ul><li>id</li><li>name</li><li>class_name、</li><li>tag_name(标签名称)、</li><li>link_text(定位a标签)、</li><li>partial_link_text(定位a标签模糊)、</li><li>Xpath(基于路径定位)</li><li>css(元素选择器)</li></ul><h1 id="18、UI自动化三种等待方式"><a href="#18、UI自动化三种等待方式" class="headerlink" title="18、UI自动化三种等待方式"></a>18、UI自动化三种等待方式</h1><ul><li><p>强制等待<br>如sleep(5)，一定会等待5秒才会继续执行下面的代码</p></li><li><p>显示等待<br>只针对当前元素，在指定条件内不断查找元素，直到找到元素或者超时报错</p></li><li><p>隐式等待<br>在指定的时间范围内查找元素，直到找到元素或者超时(报错 no suchelement)，特点是全局的</p></li></ul><h1 id="19、UI自动化测试框架组成结构"><a href="#19、UI自动化测试框架组成结构" class="headerlink" title="19、UI自动化测试框架组成结构"></a>19、UI自动化测试框架组成结构</h1><ul><li>测试用例&#x2F;测试数据</li><li>基础方法（包含PO分层，数据驱动）</li><li>工具包</li><li>测试报告</li><li>测试日志</li></ul><h1 id="20、PO模式"><a href="#20、PO模式" class="headerlink" title="20、PO模式"></a>20、PO模式</h1><p>减少代码重复，增加代码可读性，更容易维护。包含对象层、操作层、业务层。</p><ul><li>封装driver</li><li>封装页面元素定位方法  </li><li>封装页面元素操作，如输入用户名、密码等</li><li>根据封装页面元素操作方法组合成业务</li></ul><h1 id="21、linux常用命令"><a href="#21、linux常用命令" class="headerlink" title="21、linux常用命令"></a>21、linux常用命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">tail -f #查看日志文件</span><br><span class="line">cd #切换目录</span><br><span class="line">ls #查看当前目录文件</span><br><span class="line">df #查看磁盘使用情况</span><br><span class="line">top #查看服务器资源使用情况</span><br><span class="line">ps  #查看进程使用情况</span><br><span class="line">netstat #查看端口占用情况</span><br><span class="line">find #查找</span><br><span class="line">cp #复制</span><br><span class="line">tar #解压缩</span><br><span class="line">mv #重命名</span><br><span class="line">kill #</span><br><span class="line">gerp #查找文档</span><br><span class="line">vi #功能强大的纯文本编辑器</span><br><span class="line">unzip #解压缩</span><br><span class="line">mkdir #创建文件</span><br><span class="line">touch #创建新的空文件</span><br><span class="line">tail -n 100 filename #查看文件100行</span><br><span class="line">head -n 200filename |tail -n 100  #查看文件100行到200行</span><br><span class="line">chmod #用来变更文件或目录的权限</span><br><span class="line">cat  #显示文件内容</span><br></pre></td></tr></table></figure><h1 id="22、印象最深的BUG"><a href="#22、印象最深的BUG" class="headerlink" title="22、印象最深的BUG"></a>22、印象最深的BUG</h1><p>(1)登录页面，输入密码后，点击密码明文显示后，点击登录提示密码错误。前端页面发现密码并没有错误。后通过抓包将密码MD5解密后发现密码少了一位。最后得出输入密码后点击密码明文显示后密码会自动减少一位</p><p>(2)最近测试的商城项目，员工为销售的订单管理页面，查看订单详情，将URL中的订单更改为其他销售下的订单号，然后可以成功查看其他销售下的订单详情。  </p><h1 id="23、问面试官的问题"><a href="#23、问面试官的问题" class="headerlink" title="23、问面试官的问题"></a>23、问面试官的问题</h1><ul><li>薪资组成结构</li><li>试用期缴纳社保吗</li><li>12薪还是13薪等</li><li>工作内容是啥</li><li>入职是否有培训？公司是否提供专业学习机会</li><li>请问您在贵公司工作多久了</li><li>考核方式</li><li>问团队气氛，了解你的公司<ul><li>比如:咱们团队多少人？工作年限大概是多久呀？<br><img src="/../img/question_20220523002610.jpg" alt="question"><br>问题：面试的最后，面试官会说你有什么要问我的吗？那么我们需要注意哪些？<br>答：<br>1）不要问跟工作无关的问题。<br>2）问工作内容，明确你的职能。<br>比如：如果得到这份工作，以后谁来带我呢？<br>如果成为贵公司的一员，你们希望我短期内解决什么问题呢？<br>未来一年，我们部门的工作目标是什么？<br>岗位的主要职责我已经明白了，公司对我还有什么其他的要求吗？<br>3)问工作潜力，打听你的未来<br>比如:入职后的几个月，我会参加哪些培训呢？<br>这个岗位在咱们公司的晋升路径是什么样的？<br>您对我这个岗位三到五年的职责规划有什么建议吗？<br>4)问团队气氛，了解你的公司<br>比如:咱们团队多少人？工作年限大概是多久呀？<br>您觉得最能代表咱们公司的员工是怎样的呢？<br>能带我参观一下咱们的办公区域吗？<br>5)问工作体验，拉近跟面试官的距离<br>您在这里工作多久了？<br>您最喜欢这家公司的什么地方？最不喜欢什么地方？<br>能给我大概讲讲公司的企业文化吗？<br>能给我举一个公司团队合作的例子吗？<br>如果再给您一次机会，您还会选择这家公司吗？</li></ul></li></ul><h2 id="24、产品上线标准"><a href="#24、产品上线标准" class="headerlink" title="24、产品上线标准"></a>24、产品上线标准</h2><ul><li>测试用例是否全部百分之百执行完毕，如果还有未执行完毕的用例，是什么原因没有全部执行完，例如时间的原因，或者是优先级比较低的一个应用性测试用例</li><li>剩余的bug数量和严重程度的这个等级要达到一定的标准，比如说不存在致命性、严重程度的这样一个bug，建议或不影响使用的遗留问题需要经过产品经理和测试经理协同制定这个可用的一个数量</li><li>上线前的最后回归测试是否完成</li></ul><h2 id="25、遇到frame框架页面怎么处理"><a href="#25、遇到frame框架页面怎么处理" class="headerlink" title="25、遇到frame框架页面怎么处理"></a>25、遇到frame框架页面怎么处理</h2><p>问:遇到frame框架页面怎么处理?<br>答:<br>1.先定位到frame;<br>2.再用driver.switch_to.frame()跳转进frame进行操作;<br>3.操作完后使用<br>driver.swith_to.default_content()跳转出来frame  </p><h2 id="26、UI自动化测试用例怎么设计"><a href="#26、UI自动化测试用例怎么设计" class="headerlink" title="26、UI自动化测试用例怎么设计"></a>26、UI自动化测试用例怎么设计</h2><p><img src="/../img/UI01202205191303315.jpg" alt="UI自动化测试用例怎么设计"></p><h2 id="27、如何去提升UI自动化测试用例的稳定性"><a href="#27、如何去提升UI自动化测试用例的稳定性" class="headerlink" title="27、如何去提升UI自动化测试用例的稳定性?"></a>27、如何去提升UI自动化测试用例的稳定性?</h2><p>答:<br>1.使用xpath表达式定位元素时，使用相对路径;<br>2.定位元素时尽量使用显式等待，等要操作的元素出现之后再执行下面的操作;<br>3.多用try捕获异常、处理异常;<br>4.降低用例间的耦合;<br>5.尽量使用单独的测试环境，避免其他类型的测试同步进行，对数据造成干扰;<br>6.脚本执行失败后加入重试机制;<br>7.用例执行结束后对测试场景进行还原，避免影响其他测试用例的执行  </p><h1 id="28、元素定位到了，却点击无效-也没报错），如何解决"><a href="#28、元素定位到了，却点击无效-也没报错），如何解决" class="headerlink" title="28、元素定位到了，却点击无效(也没报错），如何解决?"></a>28、元素定位到了，却点击无效(也没报错），如何解决?</h1><p>答:可以使用js进行点击操作例如:  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">js = &#x27;document.getElementByld(&quot;baidu&quot;).click()&#x27;</span><br><span class="line">driver.execute_script(js)</span><br></pre></td></tr></table></figure><h1 id="29、微信视频聊天测试点"><a href="#29、微信视频聊天测试点" class="headerlink" title="29、微信视频聊天测试点"></a>29、微信视频聊天测试点</h1><p><a href="https://blog.csdn.net/weixin_44369212/article/details/109481014">传送门</a><br><img src="/../img/20201103223433596.png">  </p><h1 id="30、unittest是什么？"><a href="#30、unittest是什么？" class="headerlink" title="30、unittest是什么？"></a>30、unittest是什么？</h1><p>unittest是python内置的单元测试框架，具备编写用例、组织用例、执行用例、输出报告等自动化框架的条件。使用unittest前需要了解该框架的五个概念:</p><p>即test case,test suite,testLoader，test runner,test fixture。</p><p>test case  ：一个完整的测试单元，执行该测试单元可以完成对某一个问题的验证，完整体现在：测试前环境准备(setUp)，执行测试代码(run)，及测试后环境还原(tearDown)；</p><p>test suite  ：多个测试用例的集合，测试套件或测试计划；</p><p>testLoader  ：加载TestCase到TestSuite中的，其中loadTestsFrom__()方法用于寻找TestCase，并创建它们的实例，然后添加到TestSuite中，返回TestSuite实例；</p><p>test runner ：执行测试用例，并将测试结果保存到TextTestResult实例中，包括运行了多少测试用例， 成功了多少，失败了多少等信息；</p><p>test fixture：一个测试用例的初始化准备及环境还原，主要是setUp() 和 setDown()方法；</p><h1 id="31、unitest的工作原理"><a href="#31、unitest的工作原理" class="headerlink" title="31、unitest的工作原理"></a>31、unitest的工作原理</h1><p>通过unittest类调用分析，可将框架的工作流程概况如下：</p><p>编写TestCase，由TestLoader加载TestCase到TestSuite，然后由TextTestRunner来运行TestSuite，最后将运行的结果保存在TextTestResult中。</p><h1 id="计算机网络基础"><a href="#计算机网络基础" class="headerlink" title="计算机网络基础"></a>计算机网络基础</h1><h2 id="1-描述用浏览器访问-www-baidu-com-的过程"><a href="#1-描述用浏览器访问-www-baidu-com-的过程" class="headerlink" title="1.描述用浏览器访问 www.baidu.com 的过程"></a>1.描述用浏览器访问 <a href="http://www.baidu.com/">www.baidu.com</a> 的过程</h2><p>1.浏览器向DNS服务器发出解析域名的请求；<br>2.DNS服务器将”<a href="http://www.baidu.com"域名解析为对应的ip地址,并返回给浏览器;/">www.baidu.com&quot;域名解析为对应的IP地址，并返回给浏览器；</a><br>3.浏览器与百度服务器进行三次握手，建立TCP连接；<br>4.浏览器发出HTTP请求报文；<br>5.服务器回复HTTP响应报文；<br>6.浏览器解析响应报文，渲染HTML内容，并显示在页面上；<br>7.收发报文结束，释放TCP连接，执行四次挥手。</p><h1 id="API测试"><a href="#API测试" class="headerlink" title="API测试"></a>API测试</h1><p>10. </p><h1 id="mysql相关"><a href="#mysql相关" class="headerlink" title="mysql相关"></a>mysql相关</h1><h2 id="SQL-的-select-语句完整的执行顺序？"><a href="#SQL-的-select-语句完整的执行顺序？" class="headerlink" title="SQL 的 select 语句完整的执行顺序？"></a>SQL 的 select 语句完整的执行顺序？</h2><p>1.from 子句组装来自不同数据源的数据；<br>2.where 子句基于指定的条件对记录行进行筛选；<br>3.group by 子句将数据划分为多个分组；<br>4.使用聚集函数进行计算；<br>5.使用 having 子句筛选分组；<br>6.计算所有的表达式；<br>7.select 的字段；<br>8.使用 order by 对结果集进行排序。</p><h1 id="自动化"><a href="#自动化" class="headerlink" title="自动化"></a>自动化</h1><h2 id="Selenium有以下功能特性"><a href="#Selenium有以下功能特性" class="headerlink" title="Selenium有以下功能特性:"></a>Selenium有以下功能特性:</h2><ul><li>Selenium是一个开源和可移植的Web测试框架。</li><li>Selenium IDE为创作测试提供了回放和录制功能，而无需学习测试脚本语言。</li><li>它可以被视为领先的基于云的测试平台，可帮助测试人员记录他们的操作并将其导出为可重复使用的脚本，并具有易于理解且易于使用的界面。</li><li>Selenium支持各种操作系统，浏览器和编程语言。如下列表:<ul><li><strong>编程语言</strong>: C# ，Java，Python，PHP，Ruby，Perl和JavaScript</li><li><strong>操作系统</strong>:Android，iOS，Windows，Linux，Mac，Solaris。</li><li><strong>浏览器</strong>:谷歌浏览器，Mozilla Firefox，Internet Explorer，Edge，Opera，Safari等。</li></ul></li><li>它还支持并行测试执行，从而减少了时间并提高了测试效率。</li><li>Selenium可以与Ant和Maven等框架集成，用于源代码编译。</li><li>Selenium还可以与TestNG等测试框架集成，以进行应用程序测试和生成报告。</li><li>与其他自动化测试工具相比，Selenium需要的资源更少。</li><li>WebDriver API已经尝试集于Selenium中，这是对Selenium进行的最重要的修改之一。</li><li>Selenium Web驱动程序不需要服务器安装，测试脚本直接与浏览器交互。</li><li>Selenium命令根据不同的类进行分类，使其更易于理解和实现。</li><li>Selenium Remote Control(RC)与WebDriver API一起被称为Selenium 2.0。 此版本旨在支持充满活力的网页和Ajax</li></ul><h2 id="Selenium-Webdriver-原理？"><a href="#Selenium-Webdriver-原理？" class="headerlink" title="Selenium Webdriver 原理？"></a>Selenium Webdriver 原理？</h2><p>1.每个 Selenium 命令，这里指的是所谓的基础操作，例如，点击、输入等，都会创建一条 HTTP 请求， 发送给 Browser WebDriver<br>2.Browser WebDriver 使用一个 HTTP Server 监听和接收 HTTP 请求<br>3.HTTP Server 根据协议规则定义这些 Selenium 命令对应的浏览器具体操作<br>4.浏览器执行这些操作<br>5.浏览器将执行状态返回给 HTTP Server<br>6.HTTP Server 再将这些状态信息返回给自动化脚本</p><h2 id="接口测试用例的编写要点有哪些？"><a href="#接口测试用例的编写要点有哪些？" class="headerlink" title="接口测试用例的编写要点有哪些？"></a>接口测试用例的编写要点有哪些？</h2><ol><li>必填字段：请求参数必填项、可选项</li><li>合法性：输入输出合法、非法参数</li><li>边界：请求参数边界值等</li><li>容错能力：大容量数据、频繁请求、重复请求（如：订单）、异常网络等的处理</li><li>响应数据校验：断言、数据提取传递到下一级接口。..</li><li>逻辑校验：如两个请求的接口有严格的先后顺序，需要测试调转顺序的情况</li><li>性能：对接口模拟并发测试，逐步加压，分析瓶颈点</li><li>安全性：构造恶意的字符请求，如：SQL 注入、XSS、敏感信息、业务逻辑（如：跳过某些关键步骤； 未经验证操纵敏感数据）<ul><li>测试每个参数类型不合法的情况（类型不合法容易遗漏 NULL 型）</li><li>测试每个参数取值范围不合法的情况</li><li>测试参数为空的情况</li><li>测试参数前后台定义的一致性</li><li>测试每个参数的上下限（这里容易出致命的 BUG，如果程序处理不当，可能导致崩溃）</li><li>如果两个请求有严格的先后顺序，需要测试调转顺序的情况</li></ul></li></ol><h2 id="接口测试常见bug："><a href="#接口测试常见bug：" class="headerlink" title="接口测试常见bug："></a>接口测试常见bug：</h2><ol><li><p>特殊值处理不当导致程序异常退出或者崩溃</p></li><li><p>类型边界溢出，导致数据读出和写入不一致</p></li><li><p>取值边界外值未返回正确的错误信息</p></li><li><p>参数 为null或空字符串“”等</p></li><li><p>权限未处理，可以访问其他用户的信息</p></li></ol><p>例如:无权限可以访问，或者 一般用户可以访问管理员权限）</p><ol start="6"><li>逻辑校验不完善，可利用漏洞获取非正当利益</li></ol><p>例如：某网站兑换1块钱需要100币，当小于100币时调用后台 接口是否可以兑换</p><p>例如：购物结算时为100元，调用 后台接口设为0元，哈哈</p><ol start="7"><li><p>状态处理不当，导致逻辑出现错误（可能程序员123都搞懵了）</p></li><li><p>数组类型item个数为0或者item重复时程序异常退出</p></li><li><p>超时问题，超时后处理</p></li><li><p>潜在性能问题（后台提交处理或者把性能风险提前提出）</p></li></ol><h2 id="APP专项测试"><a href="#APP专项测试" class="headerlink" title="APP专项测试"></a>APP专项测试</h2><p>专项的测试方法，包括：兼容性测试、流量测试、电量测试、弱网络测试、稳定性测试、 安全测试和环境相关测试。</p><h1 id="微信发红包的测试点："><a href="#微信发红包的测试点：" class="headerlink" title="微信发红包的测试点："></a>微信发红包的测试点：</h1><h1 id="1-功能："><a href="#1-功能：" class="headerlink" title="1.功能："></a>1.功能：</h1><p><strong>单个红包：</strong></p><p>1、红包金额为空、整数、小数大小在0.1到200间</p><p>2、金额输入不能输入非数字和.</p><p>3、留言输入是否可以为空、整数、小数、字母、汉字、特殊字符</p><p>4、留言长度、是否可以复制粘贴</p><p>5、表情选择收藏表情、其他表情</p><p>6、删除表情、重新选择表情</p><p>7、选择支付方式 零钱、银行卡、添加新卡支付。其中钱数&lt;红包钱数、其中钱数&#x3D;红包钱数、其中钱数&gt;红包钱数</p><p>8、红包成功发送后 相应支付方式中钱数减少（减少金额与红包金额一致）</p><p>9、接受者能看到红包具体信息，红包金额、留言、表情均能正确显示</p><p><strong>群发红包-普通红包：</strong>（只写了与单个红包不同的地方）</p><p>1、红包个数 为空、0、001、100、99、101</p><p>2、红包拆开每个金额一样 均为发红包时设置的单个金额对应的钱数</p><p>3、发红包者自己领红包</p><p>4、红包24小时内未被拆完，剩余钱被退回，相应支付方式中钱数增加</p><p><strong>群发红包-拼手气红包：</strong></p><p>1、红包总额&#x2F;红包个数&lt;0.01</p><p>2、红包每个人拆开金额不同，总金额与发红包设置的总额一致</p><p>3、红包24小时内拆完后显示最佳手气</p><p>4、红包24小时内未被拆完不显示最佳手气</p><h1 id="2-性能："><a href="#2-性能：" class="headerlink" title="2.性能："></a>2.性能：</h1><p>1、不同网速下抢红包的速度</p><p>2、发红包和抢红包的跳转时间</p><p>3、退款到账的时间</p><p>4、抢红包所耗费的电量</p><h1 id="3-UI界面："><a href="#3-UI界面：" class="headerlink" title="3.UI界面："></a>3.UI界面：</h1><p>1、收发红包界面是否有错别字</p><p>2、抢红包、抢完红包是否有错别字</p><p>3、界面排版是否合理</p><p>4、界面颜色搭配是否合理</p><h1 id="4-安全："><a href="#4-安全：" class="headerlink" title="4.安全："></a>4.安全：</h1><p>1、红包发送成功后是否会提醒</p><p>2、一个人是否可以多次抢红包</p><p>3、红包领取后收红包着金额是否会添加</p><p>4、发红包后发红包着金额是否会减少</p><p>5、红包24小时未领取退回后发红包着的红包是否退回，且不能举行领取</p><p>6、红包被拆时，有相应提示</p><h1 id="5-易用："><a href="#5-易用：" class="headerlink" title="5.易用："></a>5.易用：</h1><p>1、红包描述是否可以语言输入</p><p>2、支持密码、指纹、面部支付</p><h1 id="6-兼容性："><a href="#6-兼容性：" class="headerlink" title="6.兼容性："></a>6.兼容性：</h1><p>1、不同系统苹果、安卓、是否可以使用</p><p>2、不同手机型号是否可以使用</p><h1 id="7-弱网"><a href="#7-弱网" class="headerlink" title="7.弱网"></a>7.弱网</h1><p>1、2g网抢红包的速度</p><p>2、3g网抢红包的速度</p><p>3、抢红包时网络断开</p>]]></content>
      
      
      <categories>
          
          <category> 软件测试面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件测试工程师面试基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文本处理工具和正则表达式</title>
      <link href="/2022/07/26/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2022/07/26/%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7%E5%92%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="1-文本编辑工具之神VIM"><a href="#1-文本编辑工具之神VIM" class="headerlink" title="1.文本编辑工具之神VIM"></a>1.文本编辑工具之神VIM</h1><h2 id="1-1使用vim初步"><a href="#1-1使用vim初步" class="headerlink" title="1.1使用vim初步"></a>1.1使用vim初步</h2><h3 id="1-1-1vim命令格式"><a href="#1-1-1vim命令格式" class="headerlink" title="1.1.1vim命令格式"></a>1.1.1vim命令格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim [option]··· FILE ···</span><br></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+# 打开文件后，让光标处于第#行的行首，+默认行尾</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim +10 passwd</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658842039807.png" alt="1658842039807"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+/PATTERN 让光标处于第一个被PATTERN匹配到的行行首</span><br><span class="line">-b file 二进制方式打开文件</span><br><span class="line">-d file1 file2… 比较多个文件，相当于 vimdiff</span><br><span class="line">-m file 只读打开文件</span><br><span class="line">-e file 直接进入ex模式，相当于执行ex file</span><br><span class="line">-y file Easy mode (like &quot;evim&quot;, modeless)，直接可以操作文件，ctrl+o:wq|q! 保存和不</span><br><span class="line">保存退出</span><br></pre></td></tr></table></figure><p>说明：</p><ul><li>如果该文件存在，文件被打开并显示内容</li><li>如果该文件不存在，当编辑后第一次存盘时创建它</li></ul><h3 id="1-1-2三种主要模式"><a href="#1-1-2三种主要模式" class="headerlink" title="1.1.2三种主要模式"></a>1.1.2三种主要模式</h3><p>三种常见模式：</p><ul><li><p>命令或普通(Normal)模式：默认模式，可以实现移动光标，剪切&#x2F;粘贴文本</p></li><li><p>插入(Insert)或编辑模式：用于修改文本</p></li><li><p>扩展命令(extended command )或命令(末)行模式：保存，退出等</p></li><li><p>命令模式–》插入模式</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">i insert, 在光标所在处输入</span><br><span class="line">I 在当前光标所在行的行首输入</span><br><span class="line">a append, 在光标所在处后面输入</span><br><span class="line">A 在当前光标所在行的行尾输入</span><br><span class="line">o 在当前光标所在行的下方打开一个新行</span><br><span class="line">O 在当前光标所在行的上方打开一个新行</span><br></pre></td></tr></table></figure><ul><li>插入模式 — ESC—–&gt; 命令模式</li><li>命令模式 —- : —-&gt; 扩展命令模式</li><li>扩展命令模式 —-ESC,enter—-&gt; 命令模式</li></ul><p>范例: 插入颜色字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 切换至插入模式</span><br><span class="line">2 按ctrl+v+[ 三个键,显示^[</span><br><span class="line">3 后续输入颜色信息,如:^[[32mhello^[[0m</span><br><span class="line">4 切换至扩展命令模式,保存退出</span><br><span class="line">5 cat 文件可以看到下面显示</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658842714254.png" alt="1658842714254"></p><p><img src="/../image.assets/1658842736134.png" alt="1658842736134"></p><h2 id="1-2扩展命令模式"><a href="#1-2扩展命令模式" class="headerlink" title="1.2扩展命令模式"></a>1.2扩展命令模式</h2><p>按“:”（冒号）进入Ex模式，创建一个命令提示符：处于底部的屏幕左侧</p><h3 id="1-2-1扩展模式基本命令"><a href="#1-2-1扩展模式基本命令" class="headerlink" title="1.2.1扩展模式基本命令"></a>1.2.1扩展模式基本命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">w 写（存）磁盘文件</span><br><span class="line">wq 写入并退出</span><br><span class="line">x 写入并退出</span><br><span class="line">X 加密</span><br><span class="line">q 退出</span><br><span class="line">q！ 不存盘退出，即使更改都将丢失</span><br></pre></td></tr></table></figure><ul><li>读取文件内容到当前文件中</li></ul><p>用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r filename# 读文件内容到当前文件中</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 将当前目录下的b文件的内容读取到当前文件中</span><br><span class="line">vim a.txt</span><br><span class="line">:r b.txt</span><br></pre></td></tr></table></figure><ul><li>将当前文件内容写入另一个文件</li></ul><p>用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">w filename # 将当前文件内容写入另一个文件</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 将当前文件(a.txt文件)内容写入到b.txt中去</span><br><span class="line">vim a.txt</span><br><span class="line">w c.txt</span><br></pre></td></tr></table></figure><ul><li>执行命令</li></ul><p>用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!command#执行命令</span><br></pre></td></tr></table></figure><p>范例：</p><p><img src="/../image.assets/1658844469691.png" alt="1658844469691"></p><ul><li>读入命令的输入</li></ul><p>用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r!command#读入命令的输入</span><br></pre></td></tr></table></figure><p>范例：执行hostname命令输入到当前文件中</p><p><img src="/../image.assets/1658844624368.png" alt="1658844624368"></p><h3 id="1-2-2地址定界"><a href="#1-2-2地址定界" class="headerlink" title="1.2.2地址定界"></a>1.2.2地址定界</h3><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:start_pos,end_pos CMD</span><br></pre></td></tr></table></figure><h4 id="1-2-2-1地址定界格式"><a href="#1-2-2-1地址定界格式" class="headerlink" title="1.2.2.1地址定界格式"></a>1.2.2.1地址定界格式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># #具体第#行，例如2表示第2行</span><br><span class="line">#,# #从左侧#表示起始行，到右侧#表示结尾行</span><br><span class="line">#,+# #从左侧#表示的起始行，加上右侧#表示的行数，范例：2,+3 表示2到5行</span><br><span class="line">. #当前行</span><br><span class="line">$ #最后一行</span><br><span class="line">.,$-1 #当前行到倒数第二行</span><br><span class="line">% #全文, 相当于1,$</span><br><span class="line">/pattern/ #从当前行向下查找，直到匹配pattern的第一行,即:正则表达式</span><br><span class="line">/pat1/,/pat2/ #从第一次被pat1模式匹配到的行开始，一直到第一次被pat2匹配到的行结束</span><br><span class="line">#,/pat/ #从指定行开始，一直找到第一个匹配pattern的行结束</span><br><span class="line">/pat/,$ #向下找到第一个匹配patttern的行到整个文件的结尾的所有行</span><br></pre></td></tr></table></figure><h4 id="1-2-2-2地址定界后跟一个编辑命令"><a href="#1-2-2-2地址定界后跟一个编辑命令" class="headerlink" title="1.2.2.2地址定界后跟一个编辑命令"></a>1.2.2.2地址定界后跟一个编辑命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">d #删除</span><br><span class="line">y #复制</span><br><span class="line">w file #将范围内的行另存至指定文件中</span><br><span class="line">r file #在指定位置插入指定文件中的所有内容</span><br><span class="line">t#行号 将前面指定的行复制到#行后</span><br><span class="line">m#行号 将前面指定的行移动到#行后</span><br></pre></td></tr></table></figure><p>范例：</p><ul><li>删除文件内容第几行到第几行</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:1,3d    #删除第一行到第三行</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658925029163.png" alt="1658925029163"></p><ul><li>复制文件全部内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:.,$y</span><br><span class="line"># 通过键盘上下键选择要复制在什么地方，选择后位置后按p键复制</span><br></pre></td></tr></table></figure><ul><li>删除文件全部内容</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%d</span><br></pre></td></tr></table></figure><h3 id="1-2-3查找和替换"><a href="#1-2-3查找和替换" class="headerlink" title="1.2.3查找和替换"></a>1.2.3查找和替换</h3><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s/查找的内容/替换为内容/修饰符</span><br></pre></td></tr></table></figure><p>说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">要查找的内容：可使用基本正则表达式模式</span><br><span class="line">替换为的内容：不能使用模式，但可以使用\1, \2, ...等后向引用符号；还可以使用“&amp;”引用前面查找时查</span><br><span class="line">找到的整个内容</span><br></pre></td></tr></table></figure><p>修饰符：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i #忽略大小写</span><br><span class="line">g #全局替换，默认情况下，每一行只替换第一次出现</span><br><span class="line">gc #全局替换，每次替换前询问</span><br></pre></td></tr></table></figure><p>查找替换中的分隔符&#x2F;可替换为其它字符，如：#,@<br>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s@/etc@/var@g</span><br><span class="line">s#/boot#/#i</span><br></pre></td></tr></table></figure><ul><li>复制&#x2F;etc&#x2F;passwd到家目录下，将文件内的root全部替换为ROOT</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/root/ROOT/g</span><br></pre></td></tr></table></figure><h3 id="1-2-4定制vim的工作特性"><a href="#1-2-4定制vim的工作特性" class="headerlink" title="1.2.4定制vim的工作特性"></a>1.2.4定制vim的工作特性</h3><p>扩展命令模式的配置只是对当前vim进程有效，可将配置存放在文件中持久保存<br>配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/vimrc #全局</span><br><span class="line">~/.vimrc #个人</span><br></pre></td></tr></table></figure><h4 id="1-2-4-1行号"><a href="#1-2-4-1行号" class="headerlink" title="1.2.4.1行号"></a>1.2.4.1行号</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">显示：set number，简写 set nu</span><br><span class="line">取消显示：set nonumber, 简写 set nonu</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658926795326.png" alt="1658926795326"></p><h4 id="1-2-4-2忽略字符的大小写"><a href="#1-2-4-2忽略字符的大小写" class="headerlink" title="1.2.4.2忽略字符的大小写"></a>1.2.4.2忽略字符的大小写</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：set ignorecase，简写 set ic</span><br><span class="line">不忽略：set noic</span><br></pre></td></tr></table></figure><h4 id="1-2-4-3自动缩进"><a href="#1-2-4-3自动缩进" class="headerlink" title="1.2.4.3自动缩进"></a>1.2.4.3自动缩进</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：set autoindent，简写 set ai</span><br><span class="line">禁用：set noai</span><br></pre></td></tr></table></figure><h4 id="1-2-4-4复制保留格式"><a href="#1-2-4-4复制保留格式" class="headerlink" title="1.2.4.4复制保留格式"></a>1.2.4.4复制保留格式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：set paste</span><br><span class="line">禁用：set nopaste</span><br></pre></td></tr></table></figure><h4 id="1-2-4-5显示Tab-I和换行符-和-显示"><a href="#1-2-4-5显示Tab-I和换行符-和-显示" class="headerlink" title="1.2.4.5显示Tab ^I和换行符 和$显示"></a>1.2.4.5显示Tab ^I和换行符 和$显示</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：set list</span><br><span class="line">禁用：set nolist</span><br></pre></td></tr></table></figure><h4 id="1-2-4-6高亮搜索"><a href="#1-2-4-6高亮搜索" class="headerlink" title="1.2.4.6高亮搜索"></a>1.2.4.6高亮搜索</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：set hlsearch</span><br><span class="line">禁用：set nohlsearch 简写：nohl</span><br></pre></td></tr></table></figure><h4 id="1-2-4-7语法高亮"><a href="#1-2-4-7语法高亮" class="headerlink" title="1.2.4.7语法高亮"></a>1.2.4.7语法高亮</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：syntax on</span><br><span class="line">禁用：syntax off</span><br></pre></td></tr></table></figure><h4 id="1-2-4-8文件格式"><a href="#1-2-4-8文件格式" class="headerlink" title="1.2.4.8文件格式"></a>1.2.4.8文件格式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">启用windows格式：set fileformat=dos</span><br><span class="line">启用unix格式：set fileformat=unix</span><br><span class="line">简写 set ff=dos|unix</span><br></pre></td></tr></table></figure><h4 id="1-2-4-9Tab-用空格代替"><a href="#1-2-4-9Tab-用空格代替" class="headerlink" title="1.2.4.9Tab 用空格代替"></a>1.2.4.9Tab 用空格代替</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">启用：set expandtab 默认为8个空格代替Tab</span><br><span class="line">禁用：set noexpandtab</span><br><span class="line">简写：set et</span><br></pre></td></tr></table></figure><h4 id="1-2-4-10Tab用指定空格的个数代替"><a href="#1-2-4-10Tab用指定空格的个数代替" class="headerlink" title="1.2.4.10Tab用指定空格的个数代替"></a>1.2.4.10Tab用指定空格的个数代替</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：set tabstop=# 指定#个空格代替Tab</span><br><span class="line">简写：set ts=4</span><br></pre></td></tr></table></figure><h4 id="1-2-4-11设置缩进宽度"><a href="#1-2-4-11设置缩进宽度" class="headerlink" title="1.2.4.11设置缩进宽度"></a>1.2.4.11设置缩进宽度</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#向右缩进 命令模式&gt;&gt;</span><br><span class="line">#向左缩进 命令模式&lt;&lt;</span><br><span class="line">#设置缩进为4个字符</span><br><span class="line">set shiftwidth=4</span><br></pre></td></tr></table></figure><h4 id="1-2-4-12设置文本宽度"><a href="#1-2-4-12设置文本宽度" class="headerlink" title="1.2.4.12设置文本宽度"></a>1.2.4.12设置文本宽度</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set textwidth=65 (vim only) #从左向右计数</span><br><span class="line">set wrapmargin=15 #从右到左计数</span><br></pre></td></tr></table></figure><h4 id="1-2-4-13-设置光标所在行的标识线"><a href="#1-2-4-13-设置光标所在行的标识线" class="headerlink" title="1.2.4.13 设置光标所在行的标识线"></a>1.2.4.13 设置光标所在行的标识线</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用：set cursorline，简写 set cul</span><br><span class="line">禁用：set nocursorline</span><br></pre></td></tr></table></figure><h4 id="1-2-4-14加密"><a href="#1-2-4-14加密" class="headerlink" title="1.2.4.14加密"></a>1.2.4.14加密</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">启用： set key=password</span><br><span class="line">禁用： set key=</span><br></pre></td></tr></table></figure><h4 id="1-2-4-15了解更多"><a href="#1-2-4-15了解更多" class="headerlink" title="1.2.4.15了解更多"></a>1.2.4.15了解更多</h4><p>set帮助</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:help option-list</span><br><span class="line">:set or :set all</span><br></pre></td></tr></table></figure><h2 id="1-3命令模式"><a href="#1-3命令模式" class="headerlink" title="1.3命令模式"></a>1.3命令模式</h2><h3 id="1-3-1退出vim"><a href="#1-3-1退出vim" class="headerlink" title="1.3.1退出vim"></a>1.3.1退出vim</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ZZ 保存退出</span><br><span class="line">ZQ不保存退出</span><br></pre></td></tr></table></figure><h3 id="1-3-2光标跳转"><a href="#1-3-2光标跳转" class="headerlink" title="1.3.2光标跳转"></a>1.3.2光标跳转</h3><ul><li>字符间跳转</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">h: 左</span><br><span class="line">l: 右</span><br><span class="line">j: 下</span><br><span class="line">k: 上</span><br><span class="line">#COMMAND：跳转由#指定的个数的字符如：3l</span><br></pre></td></tr></table></figure><ul><li>单词间跳转</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">w：下一个单词的词首</span><br><span class="line">e：当前或下一单词的词尾</span><br><span class="line">b：当前或前一个单词的词首</span><br><span class="line">#COMMAND：由#指定一次跳转的单词数</span><br></pre></td></tr></table></figure><ul><li>当前页跳转</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">H：页首</span><br><span class="line">M：页中间行</span><br><span class="line">L：页底</span><br><span class="line">zt：将光标所在当前行移到屏幕顶端</span><br><span class="line">zz：将光标所在当前行移到屏幕中间</span><br><span class="line">zb：将光标所在当前行移到屏幕底端</span><br></pre></td></tr></table></figure><ul><li>行首行尾</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">^ 跳转至行首的第一个非空白字符</span><br><span class="line">0 跳转至行首</span><br><span class="line">$ 跳转至行尾</span><br></pre></td></tr></table></figure><ul><li>行间移动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#G 或者扩展命令模式下</span><br><span class="line">:# 跳转至由第#行</span><br><span class="line">G 最后一行</span><br><span class="line">1G, gg 第一行</span><br></pre></td></tr></table></figure><ul><li>句间移动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">) 下一句</span><br><span class="line">( 上一句</span><br></pre></td></tr></table></figure><ul><li>段落间移动</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#125; 下一段</span><br><span class="line">&#123; 上一段</span><br></pre></td></tr></table></figure><ul><li>命令模式翻屏操作</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+f 向文件尾部翻一屏,相当于Pagedown</span><br><span class="line">Ctrl+b 向文件首部翻一屏,相当于Pageup</span><br><span class="line">Ctrl+d 向文件尾部翻半屏</span><br><span class="line">Ctrl+u 向文件首部翻半屏</span><br></pre></td></tr></table></figure><h3 id="1-3-3字符编辑"><a href="#1-3-3字符编辑" class="headerlink" title="1.3.3字符编辑"></a>1.3.3字符编辑</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x 剪切光标处的字符# p键可复制剪切的字符</span><br><span class="line">#x 剪切光标处起始的#个字符</span><br><span class="line">xp 交换光标所在处的字符及其后面字符的位置</span><br><span class="line">~ 转换大小写</span><br><span class="line">J 删除当前行后的换行符</span><br></pre></td></tr></table></figure><h3 id="1-3-4替换"><a href="#1-3-4替换" class="headerlink" title="1.3.4替换"></a>1.3.4替换</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r 只替换光标所在处的一个字符</span><br><span class="line">R 切换成REPLACE模式（在末行出现-- REPLACE -- 提示）,按ESC回到命令模式</span><br></pre></td></tr></table></figure><h3 id="1-3-5删除命令"><a href="#1-3-5删除命令" class="headerlink" title="1.3.5删除命令"></a>1.3.5删除命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">d 删除命令，可结合光标跳转字符，实现范围删除</span><br><span class="line">d$ 删除到行尾</span><br><span class="line">d^ 删除到非空行首</span><br><span class="line">d0 删除到行首</span><br><span class="line">dw</span><br><span class="line">de</span><br><span class="line">db</span><br><span class="line">#COMMAND</span><br><span class="line">dd： 剪切光标所在的行</span><br><span class="line">#dd 多行删除</span><br><span class="line">D：从当前光标位置一直删除到行尾，等同于d$</span><br></pre></td></tr></table></figure><h3 id="1-3-6复制命令"><a href="#1-3-6复制命令" class="headerlink" title="1.3.6复制命令"></a>1.3.6复制命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">y 复制，行为相似于d命令</span><br><span class="line">y$</span><br><span class="line">y0</span><br><span class="line">y^</span><br><span class="line">ye</span><br><span class="line">yw</span><br><span class="line">yb</span><br><span class="line">#COMMAND</span><br><span class="line">yy：复制行</span><br><span class="line">#yy 复制多行</span><br><span class="line">Y：复制整行</span><br></pre></td></tr></table></figure><h3 id="1-3-7粘贴命令"><a href="#1-3-7粘贴命令" class="headerlink" title="1.3.7粘贴命令"></a>1.3.7粘贴命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p 缓冲区存的如果为整行，则粘贴当前光标所在行的下方；否则，则粘贴至当前光标所在处的后面</span><br><span class="line">P 缓冲区存的如果为整行，则粘贴当前光标所在行的上方；否则，则粘贴至当前光标所在处的前面</span><br></pre></td></tr></table></figure><h3 id="1-3-8查找"><a href="#1-3-8查找" class="headerlink" title="1.3.8查找"></a>1.3.8查找</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/PATTERN：从当前光标所在处向文件尾部查找</span><br><span class="line">?PATTERN：从当前光标所在处向文件首部查找</span><br><span class="line">n：与命令同方向</span><br><span class="line">N：与命令反方向</span><br></pre></td></tr></table></figure><h4 id="1-3-9撤销更改"><a href="#1-3-9撤销更改" class="headerlink" title="1.3.9撤销更改"></a>1.3.9撤销更改</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">u 撤销最近的更改，相当于windows中ctrl+z</span><br><span class="line">#u 撤销之前多次更改</span><br><span class="line">U 撤消光标落在这行后所有此行的更改</span><br><span class="line">Ctrl-r 重做最后的“撤消”更改，相当于windows中crtl+y</span><br><span class="line">. 重复前一个操作</span><br><span class="line">#. 重复前一个操作#次</span><br></pre></td></tr></table></figure><h4 id="1-3-10高级用法"><a href="#1-3-10高级用法" class="headerlink" title="1.3.10高级用法"></a>1.3.10高级用法</h4><p>常见Command：y 复制、d 删除、gU 变大写、gu 变小写<br>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0y$ 命令</span><br><span class="line">0 → 先到行头</span><br><span class="line">y → 从这里开始拷贝</span><br><span class="line">$ → 拷贝到本行最后一个字符</span><br></pre></td></tr></table></figure><p>范例：粘贴“wang”100次</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">100iwang [ESC]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">di&quot; 光标在” “之间，则删除” “之间的内容</span><br><span class="line">yi( 光标在()之间，则复制()之间的内容</span><br><span class="line">vi[ 光标在[]之间，则选中[]之间的内容</span><br><span class="line">dtx 删除字符直到遇见光标之后的第一个 x 字符</span><br><span class="line">ytx 复制字符直到遇见光标之后的第一个 x 字符</span><br></pre></td></tr></table></figure><h2 id="1-4可视化模式"><a href="#1-4可视化模式" class="headerlink" title="1.4可视化模式"></a>1.4可视化模式</h2><p>在末行有”– VISUAL – “指示，表示在可视化模式<br>允许选择的文本块</p><ul><li>v 面向字符，– VISUAL –</li><li>V 面向整行，– VISUAL LINE –</li><li>ctrl-v 面向块，– VISUAL BLOCK –<br>可视化键可用于与移动键结合使用<br>w ) } 箭头等<br>突出显示的文字可被删除，复制，变更，过滤，搜索，替换等<br>范例：在文件指定行的行首插入#</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、先将光标移动到指定的第一行的行首</span><br><span class="line">2、输入ctrl+v 进入可视化模式</span><br><span class="line">3、向下移动光标，选中希望操作的每一行的第一个字符</span><br><span class="line">4、输入大写字母 I 切换至插入模式</span><br><span class="line">5、输入 #</span><br><span class="line">6、按 ESC 键</span><br></pre></td></tr></table></figure><p>范例：在指定的块位置插入相同的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、光标定位到要操作的地方</span><br><span class="line">2、CTRL+v 进入“可视块”模式，选取这一列操作多少行</span><br><span class="line">3、SHIFT+i(I)</span><br><span class="line">4、输入要插入的内容</span><br><span class="line">5、按 ESC 键</span><br></pre></td></tr></table></figure><h2 id="1-5多文件模式"><a href="#1-5多文件模式" class="headerlink" title="1.5多文件模式"></a>1.5多文件模式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim FILE1 FILE2 FILE3 ...</span><br><span class="line">:next 下一个</span><br><span class="line">:prev 前一个</span><br><span class="line">:first 第一个</span><br><span class="line">:last 最后一个</span><br><span class="line">:wall 保存所有</span><br><span class="line">:qall 不保存退出所有</span><br><span class="line">:wqall保存退出所有</span><br></pre></td></tr></table></figure><h2 id="1-6多窗口模式"><a href="#1-6多窗口模式" class="headerlink" title="1.6多窗口模式"></a>1.6多窗口模式</h2><h3 id="1-6-1多文件分割"><a href="#1-6-1多文件分割" class="headerlink" title="1.6.1多文件分割"></a>1.6.1多文件分割</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim -o|-O FILE1 FILE2 ...</span><br><span class="line">-o: 水平或上下分割</span><br><span class="line">-O: 垂直或左右分割（vim only）</span><br><span class="line">在窗口间切换：Ctrl+w, Arrow</span><br></pre></td></tr></table></figure><h3 id="1-6-2单文件窗口"><a href="#1-6-2单文件窗口" class="headerlink" title="1.6.2单文件窗口"></a>1.6.2单文件窗口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+w,s：split, 水平分割，上下分屏</span><br><span class="line">Ctrl+w,v：vertical, 垂直分割，左右分屏</span><br><span class="line">ctrl+w,q：取消相邻窗口</span><br><span class="line">ctrl+w,o：取消全部窗口</span><br><span class="line">:wqall 退出</span><br></pre></td></tr></table></figure><h2 id="1-7帮助"><a href="#1-7帮助" class="headerlink" title="1.7帮助"></a>1.7帮助</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:help</span><br><span class="line">:help topic</span><br><span class="line">Use :q to exit help</span><br><span class="line">#vimtutor</span><br></pre></td></tr></table></figure><h1 id="2-常见文本处理工具"><a href="#2-常见文本处理工具" class="headerlink" title="2.常见文本处理工具"></a>2.常见文本处理工具</h1><h2 id="2-1文件内容查看命令"><a href="#2-1文件内容查看命令" class="headerlink" title="2.1文件内容查看命令"></a>2.1文件内容查看命令</h2><h3 id="2-1-1查看文本文件内容"><a href="#2-1-1查看文本文件内容" class="headerlink" title="2.1.1查看文本文件内容"></a>2.1.1查看文本文件内容</h3><h4 id="2-1-1-1-cat"><a href="#2-1-1-1-cat" class="headerlink" title="2.1.1.1 cat"></a>2.1.1.1 cat</h4><p>cat可以查看文本内容</p><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat [OPTION]... [FILE]...</span><br></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-E：显示行结束符$</span><br><span class="line">-A：显示所有控制符</span><br><span class="line">-n：对显示出的每一行进行编号</span><br><span class="line">-b：非空行编号</span><br><span class="line">-s：压缩连续的空行成一行</span><br></pre></td></tr></table></figure><h4 id="2-1-1-2-nl"><a href="#2-1-1-2-nl" class="headerlink" title="2.1.1.2 nl"></a>2.1.1.2 nl</h4><p>显示行号，相当于cat -b</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 ~]# nl data.txt </span><br><span class="line">     11</span><br><span class="line">     22</span><br><span class="line">     33</span><br><span class="line">     44</span><br><span class="line">     55</span><br><span class="line">[root@rocky8 ~]# </span><br></pre></td></tr></table></figure><h4 id="2-1-1-3-tac"><a href="#2-1-1-3-tac" class="headerlink" title="2.1.1.3 tac"></a>2.1.1.3 tac</h4><p>逆向显示文本内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 ~]# cat data.txt </span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">[root@rocky8 ~]# tac data.txt </span><br><span class="line">5</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">1</span><br><span class="line">[root@rocky8 ~]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-1-1-4-rev"><a href="#2-1-1-4-rev" class="headerlink" title="2.1.1.4 rev"></a>2.1.1.4 rev</h4><p>将同一行的内容逆向显示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 ~]# cat readme.txt </span><br><span class="line">1 2 3 4 5 6</span><br><span class="line">a b c d e f</span><br><span class="line">[root@rocky8 ~]# rev readme.txt </span><br><span class="line">6 5 4 3 2 1</span><br><span class="line">f e d c b a</span><br><span class="line">[root@rocky8 ~]#</span><br></pre></td></tr></table></figure><h3 id="2-1-2查看非文本文件内容"><a href="#2-1-2查看非文本文件内容" class="headerlink" title="2.1.2查看非文本文件内容"></a>2.1.2查看非文本文件内容</h3><p>范例：hexdump</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexdump -C -n 512 /dev/sda</span><br><span class="line">00000000 eb 63 90 10 8e d0 bc 00 b0 b8 00 00 8e d8 8e c0 |.c..............|</span><br><span class="line">echo &#123;a..z&#125; | tr -d &#x27; &#x27;|hexdump -C</span><br><span class="line">00000000 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70 |abcdefghijklmnop|</span><br><span class="line">00000010 71 72 73 74 75 76 77 78 79 7a 0a |qrstuvwxyz.|</span><br><span class="line">0000001b</span><br></pre></td></tr></table></figure><h2 id="2-2-分页查看文件内容"><a href="#2-2-分页查看文件内容" class="headerlink" title="2.2. 分页查看文件内容"></a>2.2. 分页查看文件内容</h2><h3 id="2-2-1-more"><a href="#2-2-1-more" class="headerlink" title="2.2.1 more"></a>2.2.1 more</h3><p>可以实现分页查看文件，可以配合管道符实现输出信息的分页</p><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more [OPTIONS...] FILE...</span><br></pre></td></tr></table></figure><p>选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-d: 显示翻页及退出提示</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more passwd</span><br></pre></td></tr></table></figure><p>使用空格键往下查看，可显示进度百分比，“q”退出</p><h3 id="2-2-2-less"><a href="#2-2-2-less" class="headerlink" title="2.2.2 less"></a>2.2.2 less</h3><p>less 也可以实现分页查看文件或STDIN输出，less 命令是man命令使用的分页器<br>查看时有用的命令包括：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/文本 搜索 文本</span><br><span class="line">n/N 跳到下一个 或 上一个匹配</span><br></pre></td></tr></table></figure><p>范例：#less 配合管道对其它命令的执行结果进行分页显示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat passwd |less</span><br></pre></td></tr></table></figure><h2 id="2-3显示文本前面的或后面的内容"><a href="#2-3显示文本前面的或后面的内容" class="headerlink" title="2.3显示文本前面的或后面的内容"></a>2.3显示文本前面的或后面的内容</h2><h3 id="2-3-1-head"><a href="#2-3-1-head" class="headerlink" title="2.3.1 head"></a>2.3.1 head</h3><p>可以显示文件或标准输入的前面行<br>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head [OPTION]... [FILE]...</span><br></pre></td></tr></table></figure><p>选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-c # 指定获取前#字节</span><br><span class="line">-n # 指定获取前#行,#如果为负数,表示从文件头取到倒数第#前</span><br><span class="line">-# 同上</span><br></pre></td></tr></table></figure><p>范例：查看passwd文件前三行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 ~]# head -n 3 passwd </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">[root@rocky8 ~]# </span><br></pre></td></tr></table></figure><p>范例：查看倒数三行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 ~]# head -3 passwd </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">[root@rocky8 ~]# </span><br></pre></td></tr></table></figure><p>范例：查看首行到倒数第三行内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head -n -3 passwd</span><br></pre></td></tr></table></figure><h3 id="2-3-2-tail"><a href="#2-3-2-tail" class="headerlink" title="2.3.2 tail"></a>2.3.2 tail</h3><p>tail 和head 相反，查看文件或标准输入的倒数行<br>格式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail [OPTION]... [FILE]...</span><br></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-c # 指定获取后#字节</span><br><span class="line">-n # 指定获取后#行,如果#是负数,表示从第#行开始到文件结束</span><br><span class="line">-# 同上</span><br><span class="line">-f 跟踪显示文件fd新追加的内容,常用日志监控，相当于 --follow=descriptor,当文件删除再新</span><br><span class="line">建同名文件,将无法继续跟踪文件</span><br><span class="line">-F 跟踪文件名，相当于--follow=name --retry，当文件删除再新建同名文件,将可以继续跟踪文</span><br><span class="line">件</span><br><span class="line">tailf 类似 tail –f，当文件不增长时并不访问文件,节约资源,CentOS8已经无此工具</span><br></pre></td></tr></table></figure><h2 id="2-4按列抽取文本-cut"><a href="#2-4按列抽取文本-cut" class="headerlink" title="2.4按列抽取文本 cut"></a>2.4按列抽取文本 cut</h2><p>cut 命令可以提取文本文件或STDIN数据的指定列<br>格式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cut [OPTION]... [FILE]...</span><br></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-d DELIMITER: 指明分隔符，默认tab</span><br><span class="line">-f FILEDS:</span><br><span class="line">#: 第#个字段,例如:3</span><br><span class="line">#,#[,#]：离散的多个字段，例如:1,3,6</span><br><span class="line">#-#：连续的多个字段, 例如:1-6</span><br><span class="line">混合使用：1-3,7</span><br><span class="line">-c 按字符切割</span><br><span class="line">--output-delimiter=STRING指定输出分隔符</span><br></pre></td></tr></table></figure><h2 id="2-5合并多个文件-paste"><a href="#2-5合并多个文件-paste" class="headerlink" title="2.5合并多个文件 paste"></a>2.5合并多个文件 paste</h2><p>paste 合并多个文件同行号的列到一行<br>格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paste [OPTION]... [FILE]...</span><br></pre></td></tr></table></figure><p>常用选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-d #分隔符：指定分隔符，默认用TAB</span><br><span class="line">-s #所有行合成一行显示</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 ~]# echo &#123;a..d&#125;&gt;alpha.log</span><br><span class="line">[root@rocky8 ~]# cat alpha.log </span><br><span class="line">a b c d</span><br><span class="line">[root@rocky8 ~]# echo &#123;1..4&#125;&gt;seq.log</span><br><span class="line">[root@rocky8 ~]# cat seq.log </span><br><span class="line">1 2 3 4</span><br><span class="line">[root@rocky8 ~]# paste alpha.log seq.log </span><br><span class="line">a b c d1 2 3 4</span><br><span class="line">[root@rocky8 ~]# </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 ~]# cat alpha.log </span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">[root@rocky8 ~]# echo &#123;1..4&#125; |tr &quot; &quot; &quot;\n&quot;&gt;seq.log</span><br><span class="line">[root@rocky8 ~]# cat seq.log </span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">[root@rocky8 ~]# paste -d: alpha.log seq.log </span><br><span class="line">a:1</span><br><span class="line">b:2</span><br><span class="line">c:3</span><br><span class="line">d:4</span><br><span class="line">[root@rocky8 ~]# </span><br></pre></td></tr></table></figure><h2 id="2-6分析文本的工具"><a href="#2-6分析文本的工具" class="headerlink" title="2.6分析文本的工具"></a>2.6分析文本的工具</h2><p>文本数据统计：wc<br>整理文本：sort<br>比较文件：diff和patch</p><h3 id="2-6-1-收集文本统计数据-wc"><a href="#2-6-1-收集文本统计数据-wc" class="headerlink" title="2.6.1 收集文本统计数据 wc"></a>2.6.1 收集文本统计数据 wc</h3><p>wc 命令可用于统计文件的行总数、单词总数、字节总数和字符总数<br>可以对文件或STDIN中的数据统计<br>常用选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-l 只计数行数</span><br><span class="line">-w 只计数单词总数</span><br><span class="line">-c 只计数字节总数</span><br><span class="line">-m 只计数字符总数</span><br><span class="line">-L 显示文件中最长行的长度</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 ~]# wc /etc/passwd</span><br><span class="line">  30   58 1511 /etc/passwd</span><br><span class="line">  行数  单词数  字节数</span><br><span class="line">  </span><br><span class="line"> [root@rocky8 ~]# wc -l /etc/passwd</span><br><span class="line">30 /etc/passwd</span><br><span class="line">[root@rocky8 ~]# wc -w /etc/passwd</span><br><span class="line">58 /etc/passwd</span><br><span class="line">[root@rocky8 ~]# wc -c /etc/passwd</span><br><span class="line">1511 /etc/passwd</span><br><span class="line">[root@rocky8 ~]# wc -m /etc/passwd</span><br><span class="line">1511 /etc/passwd</span><br><span class="line">[root@rocky8 ~]# wc -L /etc/passwd</span><br><span class="line">85 /etc/passwd</span><br><span class="line">[root@rocky8 ~]# </span><br></pre></td></tr></table></figure><h3 id="2-6-2-文本排序-sort"><a href="#2-6-2-文本排序-sort" class="headerlink" title="2.6.2 文本排序 sort"></a>2.6.2 文本排序 sort</h3><p>把整理过的文本显示在STDOUT，不改变原始文件<br>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort [options] file(s)</span><br></pre></td></tr></table></figure><p>常用选项:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-r 执行反方向（由上至下）整理</span><br><span class="line">-R 随机排序</span><br><span class="line">-n 执行按数字大小整理</span><br><span class="line">-h 人类可读排序,如: 2K 1G</span><br><span class="line">-f 选项忽略（fold）字符串中的字符大小写</span><br><span class="line">-u 选项（独特，unique），合并重复项，即去重</span><br><span class="line">-t c 选项使用c做为字段界定符</span><br><span class="line">-k # 选项按照使用c字符分隔的 # 列来整理能够使用多次</span><br></pre></td></tr></table></figure><p>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#统计日志访问量</span><br><span class="line">[root@centos8 data]#cut -d&quot; &quot; -f1 /var/log/nginx/access_log |sort -u|wc -l</span><br><span class="line">201</span><br></pre></td></tr></table></figure><p>范例：统计分区利用率</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df| tr -s &#x27; &#x27; &#x27;%&#x27;|cut -d% -f5|sort -nr|head -n1</span><br></pre></td></tr></table></figure><h3 id="2-6-3-去重"><a href="#2-6-3-去重" class="headerlink" title="2.6.3 去重"></a>2.6.3 去重</h3><p>uniq命令从输入中删除前后相接的重复的行<br>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uniq [OPTION]... [FILE]...</span><br></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-c: 显示每行重复出现的次数</span><br><span class="line">-d: 仅显示重复过的行</span><br><span class="line">-u: 仅显示不曾重复的行</span><br></pre></td></tr></table></figure><p>uniq常和sort 命令一起配合使用：<br>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort userlist.txt | uniq -c</span><br></pre></td></tr></table></figure><p>范例：统计日志访问量最多的请求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 data]#cut -d&quot; &quot; -f1 access_log |sort |uniq -c|sort -nr |head -3</span><br><span class="line">4870 172.20.116.228</span><br><span class="line">3429 172.20.116.208</span><br><span class="line">2834 172.20.0.222</span><br><span class="line">[root@centos8 data]#lastb -f btmp-34 | tr -s &#x27; &#x27; |cut -d &#x27; &#x27; -f3|sort |uniq -c</span><br><span class="line">|sort -nr | head -3</span><br><span class="line">86294 58.218.92.37</span><br><span class="line">43148 58.218.92.26</span><br><span class="line">18036 112.85.42.201</span><br></pre></td></tr></table></figure><p>范例：并发连接最多的远程主机IP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#ss -nt|tail -n+2 |tr -s &#x27; &#x27; : |cut -d: -f6|sort|uniq -c|sort -</span><br><span class="line">nr |head -n2</span><br><span class="line">7 10.0.0.1</span><br><span class="line">2 10.0.0.7</span><br></pre></td></tr></table></figure><p>范例：取两个文件的相同和不同的行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 data]#cat test1.txt</span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">1</span><br><span class="line">c</span><br><span class="line">[root@centos8 data]#cat test2.txt</span><br><span class="line">b</span><br><span class="line">e</span><br><span class="line">f</span><br><span class="line">c</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">#取文件的共同行</span><br><span class="line">[root@centos8 data]#cat test1.txt test2.txt | sort |uniq -d</span><br><span class="line">1</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">#取文件的不同行</span><br><span class="line">[root@centos8 data]#cat test1.txt test2.txt | sort |uniq -u</span><br><span class="line">2</span><br><span class="line">a</span><br><span class="line">e</span><br><span class="line">f</span><br></pre></td></tr></table></figure><h3 id="2-6-4-比较文件"><a href="#2-6-4-比较文件" class="headerlink" title="2.6.4 比较文件"></a>2.6.4 比较文件</h3><h4 id="2-6-4-1-diff"><a href="#2-6-4-1-diff" class="headerlink" title="2.6.4.1 diff"></a>2.6.4.1 diff</h4><p>diff命令比较两个文件之间的区别</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-u 选项来输出&quot;统一的(unified)&quot;diff格式文件，最适用于补丁文件</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# cat a.txt </span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">[root@rocky8 data]# cat b.txt </span><br><span class="line">a</span><br><span class="line">2</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">[root@rocky8 data]# diff a.txt b.txt </span><br><span class="line">2c2</span><br><span class="line">&lt; b</span><br><span class="line">---</span><br><span class="line">&gt; 2</span><br><span class="line">[root@rocky8 data]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-6-4-2-patch"><a href="#2-6-4-2-patch" class="headerlink" title="2.6.4.2 patch"></a>2.6.4.2 patch</h4><p><strong>patch 复制在其它文件中进行的改变（要谨慎使用）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-b 选项来自动备份改变了的文件</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">diff -u foo.conf foo2.conf &gt; foo.patch</span><br><span class="line">patch -b foo.conf foo.patch</span><br></pre></td></tr></table></figure><h4 id="2-6-4-3vimdiff"><a href="#2-6-4-3vimdiff" class="headerlink" title="2.6.4.3vimdiff"></a>2.6.4.3vimdiff</h4><p>相当于 vim -d</p><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# cat a.txt</span><br><span class="line">a</span><br><span class="line">2</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">[root@rocky8 data]# cat b.txt </span><br><span class="line">a</span><br><span class="line">2</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">[root@rocky8 data]# vimdiff a.txt b.txt </span><br><span class="line">2 files to edit</span><br><span class="line">[root@rocky8 data]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-6-4-3cmp"><a href="#2-6-4-3cmp" class="headerlink" title="2.6.4.3cmp"></a>2.6.4.3cmp</h4><p>范例：查看二进制文件的不同</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 data]#ll /usr/bin/dir /usr/bin/ls</span><br><span class="line">-rwxr-xr-x. 1 root root 166448 May 12 2019 /usr/bin/dir</span><br><span class="line">-rwxr-xr-x. 1 root root 166448 May 12 2019 /usr/bin/ls</span><br><span class="line">[root@centos8 data]#ll /usr/bin/dir /usr/bin/ls -i</span><br><span class="line">201839444 -rwxr-xr-x. 1 root root 166448 May 12 2019 /usr/bin/dir</span><br><span class="line">201839465 -rwxr-xr-x. 1 root root 166448 May 12 2019 /usr/bin/ls</span><br><span class="line">[root@centos8 data]#diff /usr/bin/dir /usr/bin/ls</span><br><span class="line">Binary files /usr/bin/dir and /usr/bin/ls differ</span><br><span class="line">[root@centos8 ~]#cmp /bin/dir /bin/ls</span><br><span class="line">/bin/dir /bin/ls differ: byte 737, line 2</span><br><span class="line">#跳过前735个字节,观察后面30个字节</span><br><span class="line">[root@centos8 ~]#hexdump -s 735 -Cn 30 /bin/ls</span><br><span class="line">000002df 00 05 6d da 3f 1b 77 91 91 63 a7 de 55 63 a2 b9 |..m.?.w..c..Uc..|</span><br><span class="line">000002ef d9 d2 45 55 4c 00 00 00 00 03 00 00 00 7d |..EUL........&#125;|</span><br><span class="line">000002fd</span><br><span class="line">[root@centos8 ~]#hexdump -s 735 -Cn 30 /bin/dir</span><br><span class="line">000002df 00 f1 21 4e f2 19 7e ef 38 0d 9b 3e d7 54 08 39 |..!N..~.8..&gt;.T.9|</span><br><span class="line">000002ef e4 74 4d 69 25 00 00 00 00 03 00 00 00 7d |.tMi%........&#125;|</span><br><span class="line">000002fd</span><br></pre></td></tr></table></figure><p>练习<br>1、找出ifconfig “网卡名” 命令结果中本机的IPv4地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# ifconfig | tail -n +2 |head -n1|tr -s &quot; &quot;|cut -d &quot; &quot; -f3</span><br><span class="line">192.168.37.13</span><br></pre></td></tr></table></figure><p>2、查出分区空间使用率的最大百分比值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# df |tr -s &quot; &quot; | cut -d &quot; &quot; -f5|sort -nr|head -n1</span><br><span class="line">26%</span><br></pre></td></tr></table></figure><p>3、查出用户UID最大值的用户名、UID及shell类型</p><p>4、查出&#x2F;tmp的权限，以数字方式显示<br>5、统计当前连接本机的每个远程主机IP的连接数，并按从大到小排序</p><h1 id="3-正则表达式"><a href="#3-正则表达式" class="headerlink" title="3 正则表达式"></a>3 正则表达式</h1><p>REGEXP： Regular Expressions，由一类特殊字符及文本字符所编写的模式，其中有些字符（元字符）<br>不表示字符字面意义，而表示控制或通配的功能，类似于增强版的通配符功能，但与通配符不同，通配<br>符功能是用来处理文件名，而正则表达式是处理文本内容中字符<br>正则表达式被很多程序和开发语言所广泛支持：vim, less,grep,sed,awk, nginx,mysql 等<br>正则表达式分两类：</p><ul><li><p>基本正则表达式：BRE Basic Regular Expressions</p></li><li><p>扩展正则表达式：ERE Extended Regular Expressions</p></li></ul><p>正则表达式引擎：<br>采用不同算法，检查处理正则表达式的软件模块，如：PCRE（Perl Compatible Regular<br>Expressions）<br>正则表达式的元字符分类：字符匹配、匹配次数、位置锚定、分组<br>帮助：man 7 regex  </p><h2 id="3-1基本正则表达式元字符"><a href="#3-1基本正则表达式元字符" class="headerlink" title="3.1基本正则表达式元字符"></a>3.1基本正则表达式元字符</h2><h3 id="3-1-1字符匹配"><a href="#3-1-1字符匹配" class="headerlink" title="3.1 .1字符匹配"></a>3.1 .1字符匹配</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">. 匹配任意单个字符(除了\n)，可以是一个汉字或其它国家的文字</span><br><span class="line">[] 匹配指定范围内的任意单个字符，示例：[wang] [0-9] [a-z] [a-zA-Z]</span><br><span class="line">[^] 匹配指定范围外的任意单个字符,示例：[^wang]</span><br><span class="line">[:alnum:] 字母和数字</span><br><span class="line">[:alpha:] 代表任何英文大小写字符，亦即 A-Z, a-z</span><br><span class="line">[:lower:] 小写字母,示例:[[:lower:]],相当于[a-z]</span><br><span class="line">[:upper:] 大写字母</span><br><span class="line">[:blank:] 空白字符（空格和制表符）</span><br><span class="line">[:space:] 包括空格、制表符(水平和垂直)、换行符、回车符等各种类型的空白,比[:blank:]包含的范围</span><br><span class="line">广</span><br><span class="line">[:cntrl:] 不可打印的控制字符（退格、删除、警铃...）</span><br><span class="line">[:digit:] 十进制数字</span><br><span class="line">[:xdigit:]十六进制数字</span><br><span class="line">[:graph:] 可打印的非空白字符</span><br><span class="line">[:print:] 可打印字符</span><br><span class="line">[:punct:] 标点符号</span><br><span class="line">-----------------</span><br><span class="line">\s #匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [\f\r\t\v]。注意 Unicode</span><br><span class="line">正则表达式会匹配全角空格符</span><br><span class="line">\S #匹配任何非空白字符。等价于 [^\f\r\t\v]</span><br><span class="line">\w #匹配一个字母,数字,下划线,汉字,其它国家文字的字符，等价于[_[:alnum:]字]</span><br><span class="line">\W #匹配一个非字母,数字,下划线,汉字,其它国家文字的字符，等价于[^_[:alnum:]字]</span><br></pre></td></tr></table></figure><p>案例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# ls /etc/ | grep &#x27;rc[.0-6]&#x27;</span><br><span class="line">rc0.d</span><br><span class="line">rc1.d</span><br><span class="line">rc2.d</span><br><span class="line">rc3.d</span><br><span class="line">rc4.d</span><br><span class="line">rc5.d</span><br><span class="line">rc6.d</span><br><span class="line">rc.d</span><br><span class="line">rc.local</span><br><span class="line">[root@rocky8 data]#</span><br></pre></td></tr></table></figure><h3 id="3-1-2-匹配次数"><a href="#3-1-2-匹配次数" class="headerlink" title="3.1.2 匹配次数"></a>3.1.2 匹配次数</h3><p>用在要指定次数的字符后面，用于指定前面的字符要出现的次数</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">* #匹配前面的字符任意次，包括0次，贪婪模式：尽可能长的匹配</span><br><span class="line">.* #任意长度的任意字符</span><br><span class="line">\? #匹配其前面的字符出现0次或1次,即:可有可无</span><br><span class="line">\+ #匹配其前面的字符出现最少1次,即:肯定有且 &gt;=1 次</span><br><span class="line">\&#123;n\&#125; #匹配前面的字符n次</span><br><span class="line">\&#123;m,n\&#125; #匹配前面的字符至少m次，至多n次</span><br><span class="line">\&#123;,n\&#125; #匹配前面的字符至多n次,&lt;=n</span><br><span class="line">\&#123;n,\&#125; #匹配前面的字符至少n次</span><br></pre></td></tr></table></figure><p>范例: 取IP地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# ifconfig ens160 | grep -o &quot;[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;&quot; | head -n1</span><br><span class="line">192.168.37.130</span><br></pre></td></tr></table></figure><h3 id="3-1-3-位置锚定"><a href="#3-1-3-位置锚定" class="headerlink" title="3.1.3 位置锚定"></a>3.1.3 位置锚定</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">^ 行首</span><br><span class="line">$ 行尾</span><br><span class="line">\&lt;或者\b 语首</span><br><span class="line">\&gt;,或者\b 语尾</span><br></pre></td></tr></table></figure><p>案例： 行首</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# grep &quot;^root&quot; passwd </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例： 行尾</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# grep &quot;bash$&quot; passwd </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">yuankun:x:1000:1000:yuankun:/home/yuankun:/bin/bash</span><br><span class="line">test:x:1002:1001::/home/test:/bin/bash</span><br><span class="line">test1:x:1003:1003::/home/test1:/bin/bash</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例：语首</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# echo &#x27;yuankunsir&#x27; | grep &quot;\&lt;yuan&quot;</span><br><span class="line">yuankunsir</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例： 语尾</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# echo &#x27;yuankunsir&#x27; | grep &quot;sir\&gt;&quot;</span><br><span class="line">yuankunsir</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><h3 id="3-1-4-分组其他"><a href="#3-1-4-分组其他" class="headerlink" title="3.1.4 分组其他"></a>3.1.4 分组其他</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">() 分组</span><br><span class="line">后向引用：\1, \2, ... 注意: \0 表示正则表达式匹配的所有字符</span><br><span class="line">| 或者</span><br><span class="line">a|b #a或b</span><br><span class="line">C|cat #C或cat</span><br><span class="line">(C|c)at #Cat或cat</span><br></pre></td></tr></table></figure><p>案例：分组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># abc至少出现三次</span><br><span class="line">[root@rocky8 data]# echo &#x27;abcabcabc&#x27; | grep &quot;\(abc\)\&#123;3,\&#125;&quot;</span><br><span class="line">abcabcabc</span><br></pre></td></tr></table></figure><p>案例：或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# echo &#x27;abc&#x27; |grep &#x27;a\|b&#x27;</span><br><span class="line">abc</span><br></pre></td></tr></table></figure><h1 id="4-文本处理三剑客"><a href="#4-文本处理三剑客" class="headerlink" title="4 文本处理三剑客"></a>4 文本处理三剑客</h1><p>grep 命令主要对文本的（正则表达式）行基于模式进行过滤<br>sed：stream editor，文本编辑工具<br>awk：Linux上的实现gawk，文本报告生成器</p><h2 id="4-1-文本处理三剑客之grep"><a href="#4-1-文本处理三剑客之grep" class="headerlink" title="4.1 文本处理三剑客之grep"></a>4.1 文本处理三剑客之grep</h2><p>grep: Global search REgular expression and Print out the line<br>作用：文本搜索工具，根据用户指定的“模式”对目标文本逐行进行匹配检查；打印匹配到的行<br>模式：由正则表达式字符及文本字符所编写的过滤条件<br>帮助:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://man7.org/linux/man-pages/man1/grep.1.html</span><br></pre></td></tr></table></figure><p>格式：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [OPTIONS] PATTERN [FILE...]</span><br></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">--color=auto 对匹配到的文本着色显示</span><br><span class="line">-m # 匹配#次后停止</span><br><span class="line">-v 显示不被pattern匹配到的行,即取反</span><br><span class="line">-i 忽略字符大小写</span><br><span class="line">-n 显示匹配的行号</span><br><span class="line">-c 统计匹配的行数</span><br><span class="line">-o 仅显示匹配到的字符串</span><br><span class="line">-q 静默模式，不输出任何信息</span><br><span class="line">-A # after, 后#行</span><br><span class="line">-B # before, 前#行</span><br><span class="line">-C # context, 前后各#行</span><br><span class="line">-e 实现多个选项间的逻辑or关系,如：grep –e ‘cat &#x27; -e ‘dog&#x27; file</span><br><span class="line">-w 匹配整个单词</span><br><span class="line">-E 使用ERE，相当于egrep</span><br><span class="line">-F 不支持正则表达式，相当于fgrep</span><br><span class="line">-P 支持Perl格式的正则表达式</span><br><span class="line">-f file 根据模式文件处理</span><br><span class="line">-r 递归目录，但不处理软链接</span><br><span class="line">-R 递归目录，但处理软链接</span><br></pre></td></tr></table></figure><p>案例：-m</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# grep -m1 root passwd </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例：-v</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -v root passwd</span><br></pre></td></tr></table></figure><p>案例：-i</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# grep -i root passwd </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例：-n</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# grep -n root passwd </span><br><span class="line">1:root:x:0:0:root:/root:/bin/bash</span><br><span class="line">10:operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例：-o</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# grep -o bash passwd </span><br><span class="line">bash</span><br><span class="line">bash</span><br><span class="line">bash</span><br><span class="line">bash</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例：-q</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# grep -q root passwd </span><br><span class="line">[root@rocky8 data]# echo $?</span><br><span class="line">0</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例：-A</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# cat a.txt </span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br><span class="line">f</span><br><span class="line">g</span><br><span class="line">h</span><br><span class="line">j</span><br><span class="line">k</span><br><span class="line">l</span><br><span class="line">[root@rocky8 data]# grep -A3 a a.txt </span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">[root@rocky8 data]#</span><br></pre></td></tr></table></figure><p>案例: -B</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# cat a.txt </span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br><span class="line">f</span><br><span class="line">g</span><br><span class="line">h</span><br><span class="line">j</span><br><span class="line">k</span><br><span class="line">l</span><br><span class="line">[root@rocky8 data]# grep -B3 f a.txt </span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br><span class="line">f</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例： -C</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# cat a.txt </span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">d</span><br><span class="line">e</span><br><span class="line">f</span><br><span class="line">g</span><br><span class="line">h</span><br><span class="line">j</span><br><span class="line">k</span><br><span class="line">l</span><br><span class="line">[root@rocky8 data]# grep -C2 f a.txt </span><br><span class="line">d</span><br><span class="line">e</span><br><span class="line">f</span><br><span class="line">g</span><br><span class="line">h</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例： -e</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# grep -e root -e yuankun  passwd </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">yuankun:x:1000:1000:yuankun:/home/yuankun:/bin/bash</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例： -w</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# grep -w root passwd </span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例： -f</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">取两个文件的相同行</span></span><br><span class="line">grep -f a.txt b.txt</span><br></pre></td></tr></table></figure><h2 id="4-2-文本处理工具之sed"><a href="#4-2-文本处理工具之sed" class="headerlink" title="4.2 文本处理工具之sed"></a>4.2 文本处理工具之sed</h2><h3 id="4-2-1-sed基本用法"><a href="#4-2-1-sed基本用法" class="headerlink" title="4.2.1 sed基本用法"></a>4.2.1 sed基本用法</h3><p>格式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed [option]... &#x27;script;script;...&#x27; [inputfile...]</span><br></pre></td></tr></table></figure><p>常用选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-n 不输出模式空间内容到屏幕，即不自动打印</span><br><span class="line">-e 多点编辑</span><br><span class="line">-f FILE 从指定文件中读取编辑脚本</span><br><span class="line">-r, -E 使用扩展正则表达式</span><br><span class="line">-i.bak 备份文件并原处编辑</span><br><span class="line">-s 将多个文件视为独立文件，而不是单个连续的长文件流</span><br><span class="line">#说明:</span><br><span class="line">-ir 不支持</span><br><span class="line">-i -r 支持</span><br><span class="line">-ri 支持</span><br><span class="line">-ni 危险选项,会清空文件</span><br></pre></td></tr></table></figure><p>script格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;地址命令&#x27;</span><br></pre></td></tr></table></figure><p>地址格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1. 不给地址：对全文进行处理</span><br><span class="line">2. 单地址：</span><br><span class="line">#：指定的行，$：最后一行</span><br><span class="line">/pattern/：被此处模式所能够匹配到的每一行</span><br><span class="line">3. 地址范围：</span><br><span class="line">#,# #从#行到第#行，3，6 从第3行到第6行</span><br><span class="line">#,+# #从#行到+#行，3,+4 表示从3行到第7行</span><br><span class="line">/pat1/,/pat2/</span><br><span class="line">#,/pat/</span><br><span class="line">/pat/,#</span><br><span class="line">4. 步进：~</span><br><span class="line">1~2 奇数行</span><br><span class="line">2~2 偶数行</span><br></pre></td></tr></table></figure><p>命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">p 打印当前模式空间内容，追加到默认输出之后</span><br><span class="line">Ip 忽略大小写输出</span><br><span class="line">d 删除模式空间匹配的行，并立即启用下一轮循环</span><br><span class="line">a [\]text 在指定行后面追加文本，支持使用\n实现多行追加</span><br><span class="line">i [\]text 在行前面插入文本</span><br><span class="line">c [\]text 替换行为单行或多行文本</span><br><span class="line">w file 保存模式匹配的行至指定文件</span><br><span class="line">r file 读取指定文件的文本至模式空间中匹配到的行后</span><br><span class="line">= 为模式空间中的行打印行号</span><br><span class="line">! 模式空间中匹配行取反处理</span><br><span class="line">q 结束或退出sed</span><br></pre></td></tr></table></figure><p>查找和替换：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s/pattern/string/修饰符 查找替换,支持使用其它分隔符，可以是其它形式：s@@@，s###</span><br><span class="line">替换修饰符：</span><br><span class="line">g 行内全局替换</span><br><span class="line">p 显示替换成功的行</span><br><span class="line">w /PATH/FILE 将替换成功的行保存至文件中</span><br><span class="line">I,i 忽略大小写</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># sed默认会将输入信息输出到屏幕</span><br><span class="line">[root@rocky8 data]# sed &quot;&quot;</span><br><span class="line">hello</span><br><span class="line">hello</span><br><span class="line">yuan</span><br><span class="line">yuan</span><br><span class="line">data</span><br><span class="line">data</span><br></pre></td></tr></table></figure><p>案例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"># 打印第三行，默认会输出所有，-n选项不输出模式空间内容到屏幕，即不自动打印</span><br><span class="line">[root@rocky8 data]# seq 10 | sed &#x27;3p&#x27;</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line"># p 打印当前模式空间内容，追加到默认输出之后</span><br><span class="line">[root@rocky8 data]# seq 10 | sed -n &#x27;3p&#x27;</span><br><span class="line">3</span><br><span class="line">[root@rocky8 data]# </span><br><span class="line"></span><br><span class="line"># 删除第三行</span><br><span class="line">[root@rocky8 data]# seq 10 | sed  &#x27;3d&#x27;</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">[root@rocky8 data]# </span><br><span class="line"></span><br><span class="line"># 输出第三行至最后一行</span><br><span class="line">[root@rocky8 data]# seq 10 | sed -n  &#x27;3,$p&#x27;</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">[root@rocky8 data]# </span><br><span class="line"></span><br><span class="line"># 输出奇数行</span><br><span class="line">[root@rocky8 etc]# seq 10 | sed -n &#x27;1~2p&#x27;</span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">5</span><br><span class="line">7</span><br><span class="line">9</span><br><span class="line"></span><br><span class="line"># 输出偶数行</span><br><span class="line">[root@rocky8 etc]# seq 10 | sed -n &#x27;2~2p&#x27;</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">6</span><br><span class="line">8</span><br><span class="line">10</span><br><span class="line">[root@rocky8 etc]# </span><br><span class="line"></span><br><span class="line"># 追加，在偶数行追加hello</span><br><span class="line">[root@rocky8 etc]# seq 10 | sed  &#x27;2~2ahello&#x27;</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">hello</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">hello</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">hello</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">hello</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p>案例：行前和行首添加文本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# cat data.txt </span><br><span class="line"></span><br><span class="line">hello my name is lihua</span><br><span class="line">[root@rocky8 data]# sed -i &#x27;/hello/a12138&#x27; data.txt </span><br><span class="line">[root@rocky8 data]# cat data.txt </span><br><span class="line"></span><br><span class="line">hello my name is lihua</span><br><span class="line">12138</span><br><span class="line">[root@rocky8 data]# sed -i &#x27;/hello/i12138&#x27; data.txt </span><br><span class="line">[root@rocky8 data]# cat data.txt </span><br><span class="line"></span><br><span class="line">12138</span><br><span class="line">hello my name is lihua</span><br><span class="line">12138</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1659531426952.png" alt="1659531426952"></p><p>案例：替换行为单行或多行文本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# cat data.txt </span><br><span class="line"></span><br><span class="line">852   a</span><br><span class="line">852   b</span><br><span class="line">852   c</span><br><span class="line">[root@rocky8 data]# sed -i &#x27;/852/c hello&#x27; data.txt </span><br><span class="line">[root@rocky8 data]# cat data.txt </span><br><span class="line"></span><br><span class="line">hello</span><br><span class="line">hello</span><br><span class="line">hello</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例：保存模式匹配的行至指定文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# cat a.txt </span><br><span class="line"></span><br><span class="line">[root@rocky8 data]# seq 10 | sed -n &#x27;1~2w a.txt&#x27;</span><br><span class="line">[root@rocky8 data]# cat a.txt </span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">5</span><br><span class="line">7</span><br><span class="line">9</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><p>案例：读取指定文件的文本至模式空间中匹配到的行后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 data]# seq 10 | sed &#x27;1~2r /etc/issue&#x27;</span><br><span class="line">1</span><br><span class="line">\S</span><br><span class="line">Kernel \r on an \m</span><br><span class="line"></span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">\S</span><br><span class="line">Kernel \r on an \m</span><br><span class="line"></span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">\S</span><br><span class="line">Kernel \r on an \m</span><br><span class="line"></span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">\S</span><br><span class="line">Kernel \r on an \m</span><br><span class="line"></span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">\S</span><br><span class="line">Kernel \r on an \m</span><br><span class="line"></span><br><span class="line">10</span><br><span class="line">[root@rocky8 data]#</span><br></pre></td></tr></table></figure><p>案例：! 模式空间中匹配行取反处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 1~2奇数行，加上！取反就是偶数行</span><br><span class="line">[root@rocky8 data]# seq 10 | sed -n &#x27;1~2!p&#x27;</span><br><span class="line">2</span><br><span class="line">4</span><br><span class="line">6</span><br><span class="line">8</span><br><span class="line">10</span><br><span class="line">[root@rocky8 data]# </span><br></pre></td></tr></table></figure><h2 id="4-3-文本处理工具之awk"><a href="#4-3-文本处理工具之awk" class="headerlink" title="4.3 文本处理工具之awk"></a>4.3 文本处理工具之awk</h2>]]></content>
      
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>权限管理及文本编辑工具</title>
      <link href="/2022/07/25/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%8F%8A%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7/"/>
      <url>/2022/07/25/%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%8F%8A%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="1-新建文件和目录的默认权限"><a href="#1-新建文件和目录的默认权限" class="headerlink" title="1.新建文件和目录的默认权限"></a>1.新建文件和目录的默认权限</h1><p>umask 的值可以用来保留在创建文件权限<br>实现方式：</p><ul><li>新建文件的默认权限: 666-umask，如果所得结果某位存在执行（奇数）权限，则将其权限+1,偶<br>数不变</li><li>新建目录的默认权限: 777-umask</li></ul><p>非特权用户umask默认是002</p><p>root的umask默认是022</p><p>查看umask</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">umask</span></span><br><span class="line"><span class="comment">#模式方式显示</span></span><br><span class="line"><span class="built_in">umask</span> –S</span><br><span class="line"><span class="comment">#输出可被调用</span></span><br><span class="line"><span class="built_in">umask</span> –p</span><br></pre></td></tr></table></figure><p>修改umask</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">umask</span> <span class="comment">#bash</span></span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br><span class="line"><span class="built_in">umask</span> 002</span><br><span class="line"><span class="built_in">umask</span> u=rw,g=r,o=</span><br></pre></td></tr></table></figure><p>持久保存umask:</p><ul><li>全局设置：&#x2F;etc&#x2F;bashrc</li><li>用户设置：~&#x2F;.bashrc</li></ul><p>创建临时权限为000的文件三种方法：</p><ul><li>方法一</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> a.txt;<span class="built_in">chmod</span> 000 a.txt</span><br></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">umask</span> 777;<span class="built_in">touch</span> a.txt;<span class="built_in">umask</span> 022</span><br></pre></td></tr></table></figure><ul><li>方法三</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="built_in">umask</span> 777;<span class="built_in">touch</span> a.txt)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux运维面试葵花宝典</title>
      <link href="/2022/07/23/TheInterviewQuestions/"/>
      <url>/2022/07/23/TheInterviewQuestions/</url>
      
        <content type="html"><![CDATA[<p><strong>df和du的区别？</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df 查看是文件系统的空间使用，包括元数据和数据，删除文件后，如果此文件正在使用，不会立即释放空间</span><br><span class="line">du 查看是文件数据空间使用，不包括元数据，删除文件后空间立即释放</span><br></pre></td></tr></table></figure><p><strong>RAID0，1，5，6，10,01级别区别</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 磁盘利用率</span><br><span class="line">2 最少几盘硬盘实现</span><br><span class="line">3 容错性，防止几块硬盘损坏</span><br><span class="line">4 性能好坏？</span><br></pre></td></tr></table></figure><p><strong>如何判断linux系统网线是联通的还是断了</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">link</span> ok 说明网线是联通的</span></span><br><span class="line">root@ubuntu200404:~# mii-tool ens33</span><br><span class="line">ens33: negotiated 1000baseT-FD flow-control, link ok</span><br><span class="line">root@ubuntu200404:~# </span><br></pre></td></tr></table></figure><p><strong>三次握手过程以及为什么是三次握手</strong></p><p><strong>探测ip冲突arping命令</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 /]# arping 192.168.179.129</span><br><span class="line">ARPING 192.168.179.129 from 192.168.179.130 ens33</span><br><span class="line">Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.689ms</span><br><span class="line">Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.797ms</span><br><span class="line">Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.746ms</span><br><span class="line">Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.874ms</span><br><span class="line">Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.712ms</span><br><span class="line">Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.845ms</span><br><span class="line">Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.706ms</span><br><span class="line">Unicast reply from 192.168.179.129 [00:0C:29:7C:80:CD]  0.741ms</span><br></pre></td></tr></table></figure><p><strong>简述 TCP&#x2F;IP三次握手和四次挥手的工作原理?</strong><br><strong>Centos7,8 Linux操作系统如何临时和永久配置IP地址?请写出操作步骤</strong><br><strong>用一行命令找出ifconfig命令结果中的IP地址?</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig | grep inet |grep -v inet6 | tr -s &quot; &quot; | cut -d&quot; &quot; -f3</span><br></pre></td></tr></table></figure><p><strong>使用tcpdump 监听主机为192.168.1.1,tcp端口为80的数据,同时将输出结果保存成文件?</strong><br><strong>写一个She11脚本,实现判断192.168.1.0&#x2F;24网络里,当前在线的IP有哪些，能ping 通则认为在线</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">变量</span></span><br><span class="line">NET=192.168.1.0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清空文件内容</span></span><br><span class="line">cat /dev/null &gt; hosts.txt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">循环</span></span><br><span class="line">for i in &#123;1..254&#125;;do</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ping 1秒钟不回应则认为不通</span></span><br><span class="line">  if ping -c1 -W1 $NET.$i;then</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">屏幕打印，并将结果重定向到hosts.txt中</span></span><br><span class="line">    echo $NET.$i is up | tee -a hosts.txt</span><br><span class="line">  fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><strong>写一个扫描某个主机端口的状态的脚本</strong></p><h1 id="性能监控"><a href="#性能监控" class="headerlink" title="性能监控"></a>性能监控</h1><p><strong>解释uptime top w命令第一行</strong></p><ul><li>uptime</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># uptime命令</span><br><span class="line">[root@rocky ~]# uptime</span><br><span class="line"> 21:14:45 up  1:31,  2 users,  load average: 0.02, 0.01, 0.00</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>w命令</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># w命令</span><br><span class="line">[root@rocky ~]# w </span><br><span class="line"> 21:15:57 up  1:32,  2 users,  load average: 0.00, 0.00, 0.00</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">root     tty1     -                06Aug22  1:19m  0.10s  0.10s -bash</span><br><span class="line">root     pts/0    192.168.179.1    19:45    1.00s  0.06s  0.00s w</span><br><span class="line">[root@rocky ~]# </span><br></pre></td></tr></table></figure><ul><li>top命令</li></ul><p><img src="/../img/1662383968738.png" alt="1662383968738"></p><table><thead><tr><th>21:15:57</th><th>up  1:32</th><th>2 users</th><th>load average: 0.00, 0.00, 0.00</th></tr></thead><tbody><tr><td>当前系统时间</td><td>系统运行了多长时间</td><td>登录的用户数</td><td>系统1分钟、5分钟、15分钟的平均负载，一般不会超过1，超过5时建议警报</td></tr></tbody></table><p><strong>top命令详解</strong></p><p><img src="/../img/1662383968738.png" alt="1662383968738"></p><p><img src="/../img/1662386034301.png" alt="1662386034301"></p><p><strong>面试题</strong><br>4.1 解释top命令每一行的意义<br>4.2 如果查看一个进程的是否是多线程<br>4.3 如果实现秒级的计划任务<br>4.4 说明cron计划任务的格式</p><h1 id="iptables有几个表以及每个表有几个链？"><a href="#iptables有几个表以及每个表有几个链？" class="headerlink" title="iptables有几个表以及每个表有几个链？"></a>iptables有几个表以及每个表有几个链？</h1><p>五表五链</p><h1 id="MySQL相关面试题"><a href="#MySQL相关面试题" class="headerlink" title="MySQL相关面试题"></a>MySQL相关面试题</h1><p> <strong>面试题: VARCHAR(50) 能存放几个 UTF8 编码的汉字？</strong> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">存放的汉字个数与版本相关。</span><br><span class="line">mysql 4.0以下版本，varchar(50) 指的是 50 字节，如果存放 UTF8 格式编码的汉字时（每个汉字3字</span><br><span class="line">节），只能存放16 个。</span><br><span class="line">mysql 5.0以上版本，varchar(50) 指的是 50 字符，无论存放的是数字、字母还是 UTF8 编码的汉字，</span><br><span class="line">都可以存放 50 个。</span><br></pre></td></tr></table></figure><p><strong>MyISAM与MyISAM 的区别</strong></p><p><strong>面试题: InnoDB中一颗的B+树可以存放多少行数据？</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">假设定义一颗B+树高度为2，即一个根节点和若干叶子节点。那么这棵B+树的存放总行记录数=根节点指针数*</span><br><span class="line">单个叶子记录的行数。这里先计算叶子节点，B+树中的单个叶子节点的大小为16K，假设每一条目为1K，那么</span><br><span class="line">记录数即为16(16k/1K=16)，然后计算非叶子节点能够存放多少个指针，假设主键ID为bigint类型，那么长</span><br><span class="line">度为8字节，而指针大小在InnoDB中是设置为6个字节，这样加起来一共是14个字节。那么通过页大小/(主键</span><br><span class="line">ID大小+指针大小），即16384/14=1170个指针，所以一颗高度为2的B+树能存放16*1170=18720条这样的</span><br><span class="line">记录。根据这个原理就可以算出一颗高度为3的B+树可以存放16*1170*1170=21902400条记录。所以在</span><br><span class="line">InnoDB中B+树高度一般为2-3层，它就能满足千万级的数据存储</span><br></pre></td></tr></table></figure><p><strong>事务特性</strong></p><p>ACID特性：<br>A：atomicity 原子性；整个事务中的所有操作要么全部成功执行，要么全部失败后回滚<br>C：consistency一致性；数据库总是从一个一致性状态转换为另一个一致性状态,类似于能量守恒定<br>律(N50周启皓语录)<br>I：Isolation隔离性；一个事务所做出的操作在提交之前，是不能为其它事务所见；隔离有多种隔离<br>级别，实现并发<br>D：durability持久性；一旦事务提交，其所做的修改会永久保存于数据库中</p><p><strong>事务隔离级别</strong></p><p><img src="/../image.assets/1668916687561.png" alt="1668916687561"></p><p><img src="/../image.assets/1668916735065.png" alt="1668916735065"></p><p><strong>MySQL 主从数据不一致</strong><br><strong>造成主从不一致的原因</strong>**</p><ul><li>主库binlog格式为Statement，同步到从库执行后可能造成主从不一致。</li><li>主库执行更改前有执行set sql_log_bin&#x3D;0，会使主库不记录binlog，从库也无法变更这部分数据。</li><li>从节点未设置只读，误操作写入数据</li><li>主库或从库意外宕机，宕机可能会造成binlog或者relaylog文件出现损坏，导致主从不一致</li><li>主从实例版本不一致，特别是高版本是主，低版本为从的情况下，主数据库上面支持的功能，从数</li><li>据库上面可能不支持该功能</li><li>主从sql_mode 不一致</li><li>MySQL自身bug导致</li></ul><p><strong>主从不一致修复方法</strong></p><ul><li>将从库重新实现<br>虽然这也是一种解决方法，但是这个方案恢复时间比较慢，而且有时候从库也是承担一部分的查询<br>操作的，不能贸然重建。</li><li>使用percona-toolkit工具辅助<br>PT工具包中包含pt-table-checksum和pt-table-sync两个工具，主要用于检测主从是否一致以及修<br>复数据不一致情况。这种方案优点是修复速度快，不需要停止主从辅助，缺点是需要知识积累，需<br>要时间去学习，去测试，特别是在生产环境，还是要小心使用<br>关于使用方法，可以参考下面链接：<a href="https://www.cnblogs.com/feiren/p/7777218.html">https://www.cnblogs.com/feiren/p/7777218.html</a></li><li>手动重建不一致的表<br>在从库发现某几张表与主库数据不一致，而这几张表数据量也比较大，手工比对数据不现实，并且<br>重做整个库也比较慢，这个时候可以只重做这几张表来修复主从不一致<br>这种方案缺点是在执行导入期间需要暂时停止从库复制，不过也是可以接受的</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件管理</title>
      <link href="/2022/07/23/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
      <url>/2022/07/23/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p class="note note-success">文件管理</p># 1.文件系统目录结构<h2 id="1-1常见的文件系统目录功能"><a href="#1-1常见的文件系统目录功能" class="headerlink" title="1.1常见的文件系统目录功能"></a>1.1常见的文件系统目录功能</h2><p><img src="/../image.assets/1658580842757.png" alt="1658580842757"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">/boot：引导文件存放目录，内核文件(vmlinuz)、引导加载器(bootloader, grub)都存放于此目录</span><br><span class="line">/bin：所有用户使用的基本命令；不能关联至独立分区，OS启动即会用到的程序</span><br><span class="line">/sbin：管理类的基本命令；不能关联至独立分区，OS启动即会用到的程序</span><br><span class="line">/lib：启动时程序依赖的基本共享库文件以及内核模块文件(/lib/modules)</span><br><span class="line">/lib64：专用于x86_64系统上的辅助共享库文件存放位置</span><br><span class="line">/etc：配置文件目录</span><br><span class="line">/home/USERNAME：普通用户家目录</span><br><span class="line">/root：管理员的家目录</span><br><span class="line">/media：便携式移动设备挂载点</span><br><span class="line">/mnt：临时文件系统挂载点</span><br><span class="line">/dev：设备文件及特殊文件存储位置</span><br><span class="line">b: block device，随机访问</span><br><span class="line">c: character device，线性访问</span><br><span class="line">/opt：第三方应用程序的安装位置</span><br><span class="line">/srv：系统上运行的服务用到的数据</span><br><span class="line">/tmp：临时文件存储位置</span><br><span class="line">/usr: universal shared, read-only data</span><br><span class="line">bin: 保证系统拥有完整功能而提供的应用程序</span><br><span class="line">sbin:</span><br><span class="line">lib：32位使用</span><br><span class="line">lib64：只存在64位系统</span><br><span class="line">include: C程序的头文件(header files)</span><br><span class="line">share：结构化独立的数据，例如doc, man等</span><br><span class="line">local：第三方应用程序的安装位置</span><br><span class="line">bin, sbin, lib, lib64, etc, share</span><br><span class="line">/var: variable data files</span><br><span class="line">cache: 应用程序缓存数据目录</span><br><span class="line">lib: 应用程序状态信息数据</span><br><span class="line">local：专用于为/usr/local下的应用程序存储可变数据</span><br><span class="line">lock: 锁文件</span><br><span class="line">log: 日志目录及文件</span><br><span class="line">opt: 专用于为/opt下的应用程序存储可变数据</span><br><span class="line">run: 运行中的进程相关数据,通常用于存储进程pid文件</span><br><span class="line">spool: 应用程序数据池</span><br><span class="line">tmp: 保存系统两次重启之间产生的临时数据</span><br><span class="line">/proc: 用于输出内核与进程信息相关的虚拟文件系统</span><br><span class="line">/sys：用于输出当前系统上硬件设备相关信息虚拟文件系统</span><br><span class="line">/selinux: security enhanced Linux，selinux相关的安全策略等信息的存储位置</span><br></pre></td></tr></table></figure><h2 id="1-2Linux下的文件类型"><a href="#1-2Linux下的文件类型" class="headerlink" title="1.2Linux下的文件类型"></a>1.2Linux下的文件类型</h2><ul><li>-普通文件</li><li>d 目录文件directory</li><li>I 符号链接文件link</li><li>b 块设备block</li><li>c 字符设备character</li><li>p 管道文件pipe</li><li>s 套接字文件socket</li></ul><p><mark style="background-color：colorName/hexOfColor">注意:面试题目容易出现</mark></p><p><img src="/../image.assets/1658568673282.png" alt="1658568673282"></p><h1 id="2-文件操作命令"><a href="#2-文件操作命令" class="headerlink" title="2.文件操作命令"></a>2.文件操作命令</h1><h2 id="2-1相对路径和绝对路径"><a href="#2-1相对路径和绝对路径" class="headerlink" title="2.1相对路径和绝对路径"></a>2.1相对路径和绝对路径</h2><ul><li>绝对路径<br>以正斜杠&#x2F; 即根目录开始<br>完整的文件的位置路径<br>可用于任何想指定一个文件名的时候</li><li>相对路径名<br>不以斜线开始<br>一般情况下，是指相对于当前工作目录的路径，特殊场景下，是相对于某目录的位置<br>可以作为一个简短的形式指定一个文件名</li><li>基名：basename，只取文件名而不要路径</li><li>目录名：dirname，只取路径，不要文件名<br>范例:</li></ul><p><img src="/../image.assets/1658569417929.png" alt="1658569417929"></p><h2 id="2-2更改目录"><a href="#2-2更改目录" class="headerlink" title="2.2更改目录"></a>2.2更改目录</h2><p>命令 cd ： change directory 改变目录<br>选项：-P 切换至物理路径，而非软链接目录<br>可以使用绝对或相对路径<br>切换至父目录： cd ..<br>切换至当前用户主目录： cd<br>切换至以前的工作目录： cd -</p><h2 id="2-3列出目录内容"><a href="#2-3列出目录内容" class="headerlink" title="2.3列出目录内容"></a>2.3列出目录内容</h2><p>ls 命令可以列出当前目录的内容或指定目录<br>用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls [options] [files_or_dirs]</span><br></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-a 包含隐藏文件</span><br><span class="line">-l 显示额外的信息</span><br><span class="line">-R 目录递归</span><br><span class="line">-ld 目录和符号链接信息</span><br><span class="line">-1 文件分行显示</span><br><span class="line">-S 按从大到小排序</span><br><span class="line">-t 按mtime排序</span><br><span class="line">-u 配合-t选项，显示并按atime从新到旧排序</span><br><span class="line">-U 按目录存放顺序显示</span><br><span class="line">-X 按文件后缀排序</span><br><span class="line">-F 对不同类型文件显示时附加不同的符号：*/=&gt;@|</span><br><span class="line">-C 文件多时，以多列的方式显示文件，默认是一列（标准输出）</span><br></pre></td></tr></table></figure><p>说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls 查看不同后缀文件时的颜色由 /etc/DIR_COLORS 和@LS_COLORS变量定义</span><br><span class="line">ls -l 看到文件的大小,不一定是实际文件真正占用空间的大小</span><br></pre></td></tr></table></figure><h2 id="2-4查看文件状态"><a href="#2-4查看文件状态" class="headerlink" title="2.4查看文件状态"></a>2.4查看文件状态</h2><p>用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stat filename</span><br></pre></td></tr></table></figure><p>每个文件有三个时间戳：</p><ul><li>access time 访问时间，atime，读取文件内容</li><li>modify time 修改时间，mtime，改变文件内容（数据）</li><li>change time 改变时间，ctime，元数据发生改变</li></ul><p><img src="/../image.assets/1658570229648.png" alt="1658570229648"></p><h2 id="2-5查看文件内容"><a href="#2-5查看文件内容" class="headerlink" title="2.5查看文件内容"></a>2.5查看文件内容</h2><p>用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file [options] filename</span><br></pre></td></tr></table></figure><p>常用选项：</p><ul><li>-b 列出文件辨识结果时，不显示文件名称</li><li>-f filelist 列出文件filelist中文件名的文件类型</li><li>-F 使用指定分隔符号替换输出文件名后默认的”:”分隔符</li><li>-L 查看对应软链接对应文件的文件类型</li><li>–help 显示命令在线帮助</li></ul><p><img src="/../image.assets/1658570620547.png" alt="1658570620547"></p><h2 id="2-6文件通配符模式"><a href="#2-6文件通配符模式" class="headerlink" title="2.6文件通配符模式"></a>2.6文件通配符模式</h2><p>常见的通配符如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">* 匹配零个或多个字符，但不匹配 &quot;.&quot; 开头的文件，即隐藏文件</span><br><span class="line">? 匹配任何单个字符,一个汉字也算一个字符</span><br><span class="line">~ 当前用户家目录</span><br><span class="line">~mage 用户mage家目录</span><br><span class="line">[0-9] 匹配数字范围</span><br><span class="line">[a-z] 一个字母</span><br><span class="line">[A-Z] 一个字母</span><br><span class="line">[wang] 匹配列表中的任何的一个字符</span><br><span class="line">[^wang] 匹配列表中的所有字符以外的字符</span><br><span class="line">[^a-z] 匹配列表中的所有字符以外的字符</span><br><span class="line">. 和 ~+ 当前工作目录</span><br><span class="line">~- 前一个工作目录</span><br></pre></td></tr></table></figure><h2 id="2-7批量修改文件名"><a href="#2-7批量修改文件名" class="headerlink" title="2.7批量修改文件名"></a>2.7批量修改文件名</h2><p>利用 rename 可以批量修改文件名<br>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename [options] &lt;expression&gt; &lt;replacement&gt; &lt;file&gt;...</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#为所有的f开头包含conf的文件加上.bak后缀：</span><br><span class="line">rename &#x27;conf&#x27; &#x27;conf.bak&#x27; f*</span><br><span class="line">#去掉所有的bak后缀：</span><br><span class="line">rename &#x27;.bak&#x27; &#x27;&#x27; *.bak</span><br></pre></td></tr></table></figure><h1 id="3-硬链接和软链接"><a href="#3-硬链接和软链接" class="headerlink" title="3.硬链接和软链接"></a>3.硬链接和软链接</h1><h2 id="3-1硬链接"><a href="#3-1硬链接" class="headerlink" title="3.1硬链接"></a>3.1硬链接</h2><p>硬链接本质上就给一个文件起一个新的名称，实质是同一个文件<br>硬链接特性</p><ul><li>创建硬链接会在对应的目录中增加额外的记录项以引用文件</li><li>对应于同一文件系统上一个物理文件</li><li>每个目录引用相同的inode号</li><li>创建时链接数递增</li><li>删除文件时：rm命令递减计数的链接，文件要存在，至少有一个链接数，当链接数为零时，该文件被删除</li><li>不能跨越驱动器或分区</li><li>不支持对目录创建硬链接</li></ul><p>格式：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln filename [linkname]</span><br></pre></td></tr></table></figure><h2 id="3-2软链接"><a href="#3-2软链接" class="headerlink" title="3.2软链接"></a>3.2软链接</h2><p>一个符号链接指向另一个文件,就像 windows 中快捷方式，软链接文件和原文件本质上不是同一个文件<br>软链接特点</p><ul><li>一个符号链接的内容是它引用文件的名称</li><li>可以对目录创建软链接</li><li>可以跨分区的文件实现</li><li>指向的是另一个文件的路径；其大小为指向的路径字符串的长度；不增加或减少目标文件inode的引用计数</li><li>在创建软链接时, 如果源文件使用相对路径，是相对于软链接文件的路径，而非相对于当前工作目录,但是软链接的路径如果是相对路径,则是相对于当前工作目录<br>格式：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s filename [linkname]</span><br></pre></td></tr></table></figure>范例： 查看软链接</li></ul><p><img src="/../image.assets/1658588131214.png" alt="1658588131214"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /data/dirlink #只删除软链接本身,不会删除源目录内容</span><br><span class="line">rm -rf /data/dirlink/ #删除源目录的文件,但不会删除链接文件,此方法非常危险</span><br><span class="line">#注意: 删除此软链接务必不要加-r选项</span><br></pre></td></tr></table></figure><h1 id="4-硬链接和软链接区别"><a href="#4-硬链接和软链接区别" class="headerlink" title="4.硬链接和软链接区别"></a>4.硬链接和软链接区别</h1><ol><li>本质：</li></ol><ul><li>硬链接：本质是同一个文件</li><li>软链接：本质不是同一个文件</li></ul><ol start="2"><li>跨设备</li></ol><ul><li>硬链接：不支持</li><li>软链接：支持</li></ul><ol start="3"><li>inode</li></ol><ul><li>硬链接：相同</li><li>软链接：不同</li></ul><ol start="4"><li>链接数</li></ol><ul><li>硬链接：创建新的硬链接,链接数会增加,删除硬链接,链接数减少</li><li>软链接：创建或删除,链接数不会变化</li></ul><ol start="5"><li>文件夹</li></ol><ul><li>硬链接：不支持</li><li>软链接：支持</li></ul><ol start="6"><li>相对路径</li></ol><ul><li>硬链接：原始文件相对路径是相对于当前工作目录</li><li>软链接：原始文件的相对路径是相对于链接文件的相对路径</li></ul><ol start="7"><li>删除源文件</li></ol><ul><li>硬链接：只是链接数减一,但链接文件的访问不受影响</li><li>软链接：链接文件将无法访问</li></ul><ol start="8"><li>文件类型</li></ol><ul><li>硬链接：和源文件相同</li><li>软链接：链接文件,和源文件无关</li></ul><ol start="9"><li>文件大小</li></ol><ul><li>硬链接: 和源文件相同</li><li>软链接: 源文件的路径的长度</li></ul><h1 id="5-生产案例"><a href="#5-生产案例" class="headerlink" title="5.生产案例"></a>5.生产案例</h1><ul><li>案例1：提示空间满 No space left on device，但 df 可以看到空间很多，为什么？<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">解决方法：节点编号用完了，增加节点编号增加不了，说明你的磁盘上的文件都是小文件；</span><br><span class="line">1、删除不用的文件和文件夹释放inode</span><br><span class="line">2、迁移数据到新磁盘然后格式化重新指定inode</span><br><span class="line">知识点：</span><br><span class="line">1.Linux下一个文件夹或者一个文件就会占用一个inode资源</span><br><span class="line">2.inode资源数量是在格式化磁盘的时候就指定的（可以不指定，但也会有一个值），要更改这个</span><br><span class="line">数量必须格式化磁盘</span><br><span class="line">3.如果某个磁盘的inode资源用尽，即便磁盘有空间，也不能进行任何文件或者文件夹的新增</span><br><span class="line">4.删除一个文件夹或者文件就能释放一个inode资源</span><br></pre></td></tr></table></figure></li><li>案例2：提示空间快满，使用 rm 删除了很大的无用文件后，df仍然看到空间不足，为什么？如何解决？<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">有其他程序在使用该文件，可以清空该文件内容。使用&gt;清空文件内容</span><br><span class="line">&gt; filename</span><br><span class="line"># &gt; test.log</span><br></pre></td></tr></table></figure></li></ul><p><img src="/../image.assets/1658589334005.png" alt="1658589334005"></p><h1 id="6-重定向和管道"><a href="#6-重定向和管道" class="headerlink" title="6.重定向和管道"></a>6.重定向和管道</h1><h2 id="6-1-标准输入和输出"><a href="#6-1-标准输入和输出" class="headerlink" title="6.1 标准输入和输出"></a>6.1 标准输入和输出</h2><p>程序：指令+数据<br>读入数据：Input<br>输出数据：Output<br>打开的文件都有一个fd: file descriptor (文件描述符)<br>Linux给程序提供三种 I&#x2F;O 设备</p><ul><li>标准输入（STDIN） －0 默认接受来自终端窗口的输入</li><li>标准输出（STDOUT）－1 默认输出到终端窗口</li><li>标准错误（STDERR） －2 默认输出到终端窗口</li></ul><h2 id="6-2标准的输出和错误重定向"><a href="#6-2标准的输出和错误重定向" class="headerlink" title="6.2标准的输出和错误重定向"></a>6.2标准的输出和错误重定向</h2><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令 操作符号 文件名</span><br></pre></td></tr></table></figure><p>支持的操作符号包括：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1&gt; 或 &gt; 把STDOUT重定向到文件</span><br><span class="line">2&gt; 把STDERR重定向到文件</span><br><span class="line">&amp;&gt; 把标准输出和错误都重定向</span><br><span class="line">&gt;&amp; 和上面功能一样，建议使用上面方式</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658627818949.png" alt="1658627818949"></p><p><img src="/../image.assets/1658627951062.png" alt="1658627951062"></p><p><img src="/../image.assets/1658628044574.png" alt="1658628044574"></p><p>以上的文件如果已经存在，文件内容则会覆盖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># &gt;&gt; 可以在原有的基础内容上追加内容</span><br><span class="line">&gt;&gt; 追加标准输出重定向至文件</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658628188096.png" alt="1658628188096"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2&gt;&gt; 追加标准错误重定向至文件</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658628249117.png" alt="1658628249117"></p><h2 id="6-3将标准输出和错误输出指定向不同的文件"><a href="#6-3将标准输出和错误输出指定向不同的文件" class="headerlink" title="6.3将标准输出和错误输出指定向不同的文件"></a>6.3将标准输出和错误输出指定向不同的文件</h2><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COMMAND &gt; /path/to/file.log 2&gt; /path/to/error.log</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658628570176.png" alt="1658628570176"></p><h2 id="6-4合并标准输出和错误输出为同一个数据流进行重定向"><a href="#6-4合并标准输出和错误输出为同一个数据流进行重定向" class="headerlink" title="6.4合并标准输出和错误输出为同一个数据流进行重定向"></a>6.4合并标准输出和错误输出为同一个数据流进行重定向</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&amp;&gt; 覆盖重定向</span><br><span class="line">&amp;&gt;&gt; 追加重定向</span><br><span class="line">COMMAND &gt; /path/to/file.out 2&gt;&amp;1 （顺序很重要）</span><br><span class="line">COMMAND &gt;&gt; /path/to/file.out 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658628863373.png" alt="1658628863373"></p><p><img src="/../image.assets/1658628910790.png" alt="1658628910790"></p><p><img src="/../image.assets/1658629123843.png" alt="1658629123843"></p><ul><li>错误案例</li></ul><p><img src="/../image.assets/1658629245131.png" alt="1658629245131">  </p><h2 id="6-5标准输入重定向"><a href="#6-5标准输入重定向" class="headerlink" title="6.5标准输入重定向"></a>6.5标准输入重定向</h2><p>实现标准输入重定向的符号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">COMMAND 0&lt; FILE</span><br><span class="line">COMMAND &lt; FILE</span><br></pre></td></tr></table></figure><ul><li>面试题：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 求1+2+···+10的和</span><br><span class="line">seq -s+ 10 &gt; seq.log</span><br><span class="line">bc &lt; seq.log</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658631614537.png" alt="1658631614537"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">扩展：求1*2*···*10的值：</span><br><span class="line">seq -s* 10 &gt;seq.log</span><br><span class="line">bc &lt; seq.log</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658631847010.png" alt="1658631847010"></p><p><img src="/../image.assets/1658631986469.png" alt="1658631986469"></p><h3 id="6-5-1tr命令"><a href="#6-5-1tr命令" class="headerlink" title="6.5.1tr命令"></a>6.5.1tr命令</h3><p>tr 转换和删除字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tr [option] ··· SET1 [SET2]</span><br></pre></td></tr></table></figure><p>选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-d --delete：删除所有属于第一字符集的字符</span><br><span class="line">-s --squeeze-repeats：把连续重复的字符以单独一个字符表示,即去重</span><br><span class="line">-t --truncate-set1：将第一个字符集对应字符转化为第二字符集对应的字符</span><br><span class="line">-c –C --complement：取字符集的补集</span><br><span class="line">\NNN character with octal value NNN (1 to 3 octal digits)</span><br><span class="line">\\ backslash</span><br><span class="line">\a audible BEL</span><br><span class="line">\b backspace</span><br><span class="line">\f form feed</span><br><span class="line">\n new line</span><br><span class="line">\r return</span><br><span class="line">\t horizontal tab</span><br><span class="line">\v vertical tab</span><br><span class="line">[:alnum:]：字母和数字</span><br><span class="line">[:alpha:]：字母</span><br><span class="line">[:digit:]：数字</span><br><span class="line">[:lower:]：小写字母</span><br><span class="line">[:upper:]：大写字母</span><br><span class="line">[:space:]：空白字符</span><br><span class="line">[:print:]：可打印字符</span><br><span class="line">[:punct:]：标点符号</span><br><span class="line">[:graph:]：图形字符</span><br><span class="line">[:cntrl:]：控制（非打印）字符</span><br><span class="line">[:xdigit:]：十六进制字符</span><br></pre></td></tr></table></figure><p>范例：</p><ul><li>删除字符,删除’abcd’中的’a’</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo abcd | tr -d &#x27;a&#x27;</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658633116721.png" alt="1658633116721"></p><ul><li>将’aaabbbccc‘中字符去重</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo aaabbbccc |tr -s &#x27;abc&#x27;</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658633240146.png" alt="1658633240146"></p><ul><li>输入df将空格用”+”替换</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df | tr -s &#x27; &#x27; +</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658633697556.png" alt="1658633697556"></p><h3 id="6-5-2多行重定向"><a href="#6-5-2多行重定向" class="headerlink" title="6.5.2多行重定向"></a>6.5.2多行重定向</h3><p>使用 “&lt;&lt;终止词” 命令从键盘把多行重导向给STDIN，直到终止词位置之前的所有文本都发送给<br>STDIN，有时被称为就地文本（here documents）<br>其中终止词可以是任何一个或多个符号，比如：!，@，$，EOF（End Of File），magedu等，其中EOF<br>比较常用</p><p>范例：</p><p><img src="/../image.assets/1658634064057.png" alt="1658634064057"></p><h3 id="6-5-3高级重定向"><a href="#6-5-3高级重定向" class="headerlink" title="6.5.3高级重定向"></a>6.5.3高级重定向</h3><h4 id="6-5-3-1-cmd1-lt-lt-cmd2"><a href="#6-5-3-1-cmd1-lt-lt-cmd2" class="headerlink" title="6.5.3.1 cmd1 &lt; &lt;(cmd2)"></a>6.5.3.1 cmd1 &lt; &lt;(cmd2)</h4><p>名称为 Process substitution ,是由两个部分组成<br>&lt;(cmd2) 表示把cmd2的输出写入一个临时文件, 注意：&lt;和（之间无空格<br>cmd1 &lt; 这是一个标准的stdin重定向<br>把两个合起来，就是把cmd2的输出stdout传递给cmd1作为输入stdin, 中间通过临时文件做传递</p><p><img src="/../image.assets/1658634342387.png" alt="1658634342387"></p><h4 id="6-5-3-2cmd1-lt-lt-lt-’string’"><a href="#6-5-3-2cmd1-lt-lt-lt-’string’" class="headerlink" title="6.5.3.2cmd1&lt;&lt;&lt;’string’"></a>6.5.3.2cmd1&lt;&lt;&lt;’string’</h4><p>含义是 here-string ，表示传给给cmd的stdin的内容从这里开始是一个字符串。<br>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bc &lt;&lt;&lt;&#x27;2+4&#x27;</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658634687295.png" alt="1658634687295"></p><h2 id="6-6-tee命令"><a href="#6-6-tee命令" class="headerlink" title="6.6 tee命令"></a>6.6 tee命令</h2><p>tee命令用于读取标准输入的数据，并将其内容输出成文件。</p><p>tee指令会从标准输入设备读取数据，将其内容输出到标准输出设备，同时保存成文件。</p><p>选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-a 追加</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658643404404.png" alt="1658643404404"></p><h1 id="7-用户和组相关概念"><a href="#7-用户和组相关概念" class="headerlink" title="7.用户和组相关概念"></a>7.用户和组相关概念</h1><h2 id="7-1-用户"><a href="#7-1-用户" class="headerlink" title="7.1 用户"></a>7.1 用户</h2><p>Linux中每个用户是通过 User Id （UID）来唯一标识的</p><ul><li><p>管理员：root, 0</p></li><li><p>普通用户：1-60000 自动分配</p><ul><li>系统用户：1-499 （CentOS 6以前）, 1-999 （CentOS 7以后）<br>对守护进程获取资源进行权限分配</li><li>登录用户：500+ （CentOS6以前）, 1000+（CentOS7以后）<br>给用户进行交互式登录使用</li></ul></li></ul><h2 id="7-2-用户组"><a href="#7-2-用户组" class="headerlink" title="7.2 用户组"></a>7.2 用户组</h2><p>Linux中可以将一个或多个用户加入用户组中，用户组是通过Group ID（GID） 来唯一标识的。</p><ul><li>管理员组：root, 0</li><li>普通组：<ul><li>系统组：1-499（CentOS 6以前）, 1-999（CentOS7以后）, 对守护进程获取资源进行权限分配</li><li>普通组：500+（CentOS 6以前）, 1000+（CentOS7以后）, 给用户使用</li></ul></li></ul><h2 id="7-3-用户和组的关系"><a href="#7-3-用户和组的关系" class="headerlink" title="7.3 用户和组的关系"></a>7.3 用户和组的关系</h2><ul><li>用户的主要组(primary group)：用户必须属于一个且只有一个主组，默认创建用户时会自动创建和用户名同名的组，做为用户的主要组，由于此组中只有一个用户，又称为私有组</li><li>用户的附加组(supplementary group)： 一个用户可以属于零个或多个辅助组，附属组</li></ul><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 home]# id yuankun</span><br><span class="line">uid=1000(yuankun) gid=1000(yuankun) groups=1000(yuankun)</span><br></pre></td></tr></table></figure><h2 id="7-4用户和组的配置文件"><a href="#7-4用户和组的配置文件" class="headerlink" title="7.4用户和组的配置文件"></a>7.4用户和组的配置文件</h2><h3 id="7-4-1用户和组的主要配置文件"><a href="#7-4-1用户和组的主要配置文件" class="headerlink" title="7.4.1用户和组的主要配置文件"></a>7.4.1用户和组的主要配置文件</h3><ul><li>&#x2F;etc&#x2F;passwd：用户及其属性信息(名称、UID、主组ID等）</li><li>&#x2F;etc&#x2F;shadow：用户密码及其相关属性</li><li>&#x2F;etc&#x2F;group：组及其属性信息</li><li>&#x2F;etc&#x2F;gshadow：组密码及其相关属性</li></ul><h3 id="7-4-2-passwd文件格式"><a href="#7-4-2-passwd文件格式" class="headerlink" title="7.4.2 passwd文件格式"></a>7.4.2 passwd文件格式</h3><ul><li>login name：登录用名（yuankun）</li><li>passwd：密码 (x)</li><li>UID：用户身份编号 (1000)</li><li>GID：登录默认所在组编号 (1000)</li><li>GECOS：用户全名或注释</li><li>home directory：用户主目录 (&#x2F;home&#x2F;wang)</li><li>shell：用户默认使用shell (&#x2F;bin&#x2F;bash)</li></ul><p><img src="/../image.assets/1658659141980.png" alt="1658659141980"></p><h3 id="7-4-3shadow文件格式"><a href="#7-4-3shadow文件格式" class="headerlink" title="7.4.3shadow文件格式"></a>7.4.3shadow文件格式</h3><ul><li>登录用名</li><li>用户密码:一般用sha512加密</li><li>从1970年1月1日起到密码最近一次被更改的时间</li><li>密码再过几天可以被变更（0表示随时可被变更）</li><li>密码再过几天必须被变更（99999表示永不过期）</li><li>密码过期前几天系统提醒用户（默认为一周）</li><li>密码过期几天后帐号会被锁定</li><li>从1970年1月1日算起，多少天后帐号失效<br><img src="/../image.assets/1658662334418.png" alt="1658662334418"></li></ul><h3 id="7-4-4group文件格式"><a href="#7-4-4group文件格式" class="headerlink" title="7.4.4group文件格式"></a>7.4.4group文件格式</h3><ul><li>群组名称：就是群组名称</li><li>群组密码：通常不需要设定，密码是被记录在 &#x2F;etc&#x2F;gshadow</li><li>GID：就是群组的 ID</li><li>以当前组为附加组的用户列表(分隔符为逗号)</li></ul><p><img src="/../image.assets/1658662552564.png" alt="1658662552564"></p><h3 id="7-4-5gshadow文件格式"><a href="#7-4-5gshadow文件格式" class="headerlink" title="7.4.5gshadow文件格式"></a>7.4.5gshadow文件格式</h3><ul><li>群组名称：就是群的名称</li><li>群组密码：</li><li>组管理员列表：组管理员的列表，更改组密码和成员</li><li>以当前组为附加组的用户列表：多个用户间用逗号分隔</li></ul><p><img src="/../image.assets/1658662641679.png" alt="1658662641679"></p><h2 id="7-5-用户和组管理命令"><a href="#7-5-用户和组管理命令" class="headerlink" title="7.5 用户和组管理命令"></a>7.5 用户和组管理命令</h2><ul><li>用户管理命令<ul><li>useradd(添加用户)</li><li>usermod(修改用户)</li><li>userdel(删除用户)</li></ul></li><li>组账号维护命令<ul><li>groupadd</li><li>groupmod</li><li>groupdel</li></ul></li></ul><p>面试题：添加新用户后家目录下的文件来源什么地方？</p><p>来源于&#x2F;etc&#x2F;skel,进入&#x2F;etc&#x2F;skel下查看文件和进入test用户的家目录下查看文件是一致的</p><p><img src="/../image.assets/1658665374181.png" alt="1658665374181"></p><p><img src="/../image.assets/1658665436871.png" alt="1658665436871"></p><h3 id="7-5-1用户创建"><a href="#7-5-1用户创建" class="headerlink" title="7.5.1用户创建"></a>7.5.1用户创建</h3><p>useradd命令可以创建新的linux用户</p><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd [options] login</span><br></pre></td></tr></table></figure><p>常见的选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-u UID</span><br><span class="line">-o 配合-u 选项，不检查UID的唯一性</span><br><span class="line">-g GID 指明用户所属基本组，可为组名，也可以GID</span><br><span class="line">-c &quot;COMMENT“ 用户的注释信息</span><br><span class="line">-d HOME_DIR 以指定的路径(不存在)为家目录</span><br><span class="line">-s SHELL 指明用户的默认shell程序，可用列表在/etc/shells文件中</span><br><span class="line">-G GROUP1[,GROUP2,...] 为用户指明附加组，组须事先存在</span><br><span class="line">-N 不创建私用组做主组，使用users组做主组</span><br><span class="line">-r 创建系统用户 CentOS 6之前: ID&lt;500，CentOS7 以后: ID&lt;1000</span><br><span class="line">-m 创建家目录，用于系统用户</span><br><span class="line">-M 不创建家目录，用于非系统用户</span><br><span class="line">-p 指定加密的密码</span><br></pre></td></tr></table></figure><p>范例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 home]# groupadd apache</span><br><span class="line">[root@rocky8 home]# useradd -r -u 48 -g apache -s /sbin/nologin -d /var/www -c &quot;Apache&quot; apache</span><br></pre></td></tr></table></figure><p>useradd命令默认值设置由&#x2F;etc&#x2F;default&#x2F;useradd定义</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]#cat /etc/default/useradd</span><br><span class="line"># useradd defaults file</span><br><span class="line">GROUP=100</span><br><span class="line">HOME=/home</span><br><span class="line">INACTIVE=-1 #对应/etc/shadow文件第7列，即用户密码过期后的帐号锁定的宽限期,-1表示不锁定</span><br><span class="line">EXPIRE= #对应/etc/shadow文件第8列，即用户帐号的有效期</span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">SKEL=/etc/skel #用于生成新建用户家目录的模版文件</span><br><span class="line">CREATE_MAIL_SPOOL=yes</span><br></pre></td></tr></table></figure><h3 id="7-5-2用户属性修改"><a href="#7-5-2用户属性修改" class="headerlink" title="7.5.2用户属性修改"></a>7.5.2用户属性修改</h3><p>usermod命令可以修改用户属性</p><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod [options] login</span><br></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-u UID: 新UID</span><br><span class="line">-g GID: 新主组</span><br><span class="line">-G GROUP1[,GROUP2,...[,GROUPN]]]：新附加组，原来的附加组将会被覆盖；若保留原有，则要同时使</span><br><span class="line">用-a选项</span><br><span class="line">-s SHELL：新的默认SHELL</span><br><span class="line">-c &#x27;COMMENT&#x27;：新的注释信息</span><br><span class="line">-d HOME: 新家目录不会自动创建；若要创建新家目录并移动原家数据，同时使用-m选项</span><br><span class="line">-l login_name: 新的名字</span><br><span class="line">-L: lock指定用户,在/etc/shadow 密码栏的增加 !</span><br><span class="line">-U: unlock指定用户,将 /etc/shadow 密码栏的 ! 拿掉</span><br><span class="line">-e YYYY-MM-DD: 指明用户账号过期日期</span><br><span class="line">-f INACTIVE: 设定非活动期限，即宽限期</span><br></pre></td></tr></table></figure><p>范例：创建test用户，使用id username查看用户的uid,然后修改其uid</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 home]# useradd test   #添加tes用户</span><br><span class="line">[root@rocky8 home]# id test#查看用户信息</span><br><span class="line">uid=1001(test) gid=1001(test) groups=1001(test)</span><br><span class="line">[root@rocky8 home]# usermod -u 1002 test   # 将uid修改为1002</span><br><span class="line">[root@rocky8 home]# id test#查看用户信息修改成功</span><br><span class="line">uid=1002(test) gid=1001(test) groups=1001(test)</span><br></pre></td></tr></table></figure><h3 id="7-5-4删除用户"><a href="#7-5-4删除用户" class="headerlink" title="7.5.4删除用户"></a>7.5.4删除用户</h3><p>userdel可以删除用户</p><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel [options] login</span><br></pre></td></tr></table></figure><p>常见的选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-f, --force 强制</span><br><span class="line">-r, --remove 删除用户家目录和邮箱</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">userdel -f test  #强制删除</span><br><span class="line">userdel -rf test # 删除家目录和邮箱</span><br></pre></td></tr></table></figure><h3 id="7-5-5查看用户相关ID"><a href="#7-5-5查看用户相关ID" class="headerlink" title="7.5.5查看用户相关ID"></a>7.5.5查看用户相关ID</h3><p>id命令可以查看用户的UID、GID等信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id [options] [username]</span><br></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-u: 显示UID</span><br><span class="line">-g: 显示GID</span><br><span class="line">-G: 显示用户所属的组的ID</span><br><span class="line">-n: 显示名称，需配合ugG使用</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 home]# id test</span><br><span class="line">uid=1002(test) gid=1001(test) groups=1001(test)</span><br><span class="line">[root@rocky8 home]# id -u test</span><br><span class="line">1002</span><br><span class="line">[root@rocky8 home]# id -g test</span><br><span class="line">1001</span><br><span class="line">[root@rocky8 home]# id -G test</span><br><span class="line">1001</span><br><span class="line">[root@rocky8 home]# </span><br></pre></td></tr></table></figure><h3 id="7-5-6查看linux所有用户"><a href="#7-5-6查看linux所有用户" class="headerlink" title="7.5.6查看linux所有用户"></a>7.5.6查看linux所有用户</h3><ul><li>查看&#x2F;etc&#x2F;passwd</li></ul><p><img src="/../image.assets/1658664876880.png" alt="1658664876880"></p><ul><li>getent passwd</li></ul><p><img src="/../image.assets/1658664946447.png" alt="1658664946447"></p><h3 id="7-5-7切换用户"><a href="#7-5-7切换用户" class="headerlink" title="7.5.7切换用户"></a>7.5.7切换用户</h3><p>su: 即 switch user，命令可以切换用户身份，并且以指定用户的身份执行命令<br>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su [options...] [-] [user [args...]]</span><br></pre></td></tr></table></figure><p>常见的选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-l --login su -l UserName 相当于 su - UserName</span><br><span class="line">-c, --command &lt;command&gt; pass a single command to the shell with -c</span><br></pre></td></tr></table></figure><p>切换用户的方式：</p><ul><li>su UserName：非登录式切换，即不会读取目标用户的配置文件，不改变当前工作目录，即不完全切换</li><li>su - UserName：登录式切换，会读取目标用户的配置文件，切换至自已的家目录，即完全切换<br>说明：root su至其他用户无须密码；非root用户切换时需要密码<br>注意：su 切换新用户后，使用 exit 退回至旧的用户身份，而不要再用 su 切换至旧用户，否则会生成很多的bash子进程，环境可能会混乱。</li></ul><p>换个身份执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - username -c &#x27;command&#x27;</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 skel]# su - test -c &#x27;touch test.log&#x27;</span><br><span class="line">[root@rocky8 skel]# su test</span><br><span class="line">[test@rocky8 skel]$ ll</span><br><span class="line">total 0</span><br><span class="line">[test@rocky8 skel]$ ls -a</span><br><span class="line">.  ..  .bash_logout  .bash_profile  .bashrc</span><br><span class="line">[test@rocky8 skel]$ cd /home/</span><br><span class="line">[test@rocky8 home]$ ll</span><br><span class="line">total 0</span><br><span class="line">drwx------. 2 test    test     99 Jul 24 11:38 test</span><br><span class="line">drwx------. 2 test1   test1    78 Jul 24 11:24 test1</span><br><span class="line">drwx------. 2 yuankun yuankun 114 Jul 23 08:24 yuankun</span><br><span class="line">[test@rocky8 home]$ cd test</span><br><span class="line">[test@rocky8 ~]$ ll</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 test test 0 Jul 24 11:38 test.log</span><br><span class="line">[test@rocky8 ~]$ </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-5-8设置密码"><a href="#7-5-8设置密码" class="headerlink" title="7.5.8设置密码"></a>7.5.8设置密码</h3><p>passwd 可以修改用户密码</p><p>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd [options] username</span><br></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-d：删除指定用户密码</span><br><span class="line">-l：锁定指定用户</span><br><span class="line">-u：解锁指定用户</span><br><span class="line">-e：强制用户下次登录修改密码</span><br><span class="line">-f：强制操作</span><br><span class="line">-n mindays：指定最短使用期限</span><br><span class="line">-x maxdays：最大使用期限</span><br><span class="line">-w warndays：提前多少天开始警告</span><br><span class="line">-i inactivedays：非活动期限</span><br><span class="line">--stdin：从标准输入接收用户密码,Ubuntu无此选项</span><br></pre></td></tr></table></figure><p>范例：非交互式修改用户密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#此方式更通用，适用于各种Linux版本，如:ubuntu</span><br><span class="line">root@ununtu2004:/home# echo -e &#x27;123456\n123456&#x27; | passwd test</span><br><span class="line">New password: Retype new password: passwd: password updated successfully</span><br><span class="line">root@ununtu2004:/home# </span><br><span class="line"></span><br><span class="line">#适用于红帽系列的Linux版本</span><br><span class="line">[root@rocky8 home]# echo -e &#x27;123456&#x27;| passwd --stdin test</span><br><span class="line">Changing password for user test.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@rocky8 home]# </span><br></pre></td></tr></table></figure><h2 id="7-6文件权限管理"><a href="#7-6文件权限管理" class="headerlink" title="7.6文件权限管理"></a>7.6文件权限管理</h2><h3 id="7-6-1文件所有者和属组属性操作"><a href="#7-6-1文件所有者和属组属性操作" class="headerlink" title="7.6.1文件所有者和属组属性操作"></a>7.6.1文件所有者和属组属性操作</h3><h4 id="7-6-1-1设置文件的所有者chown"><a href="#7-6-1-1设置文件的所有者chown" class="headerlink" title="7.6.1.1设置文件的所有者chown"></a>7.6.1.1设置文件的所有者chown</h4><p>chown 命令可以修改文件的属主，也可以修改文件属组<br>格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown [OPTION]... [OWNER][:[GROUP]] FILE...</span><br><span class="line">chown [OPTION]... --reference=RFILE FILE...</span><br></pre></td></tr></table></figure><p>用法说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">OWNER #只修改所有者</span><br><span class="line">OWNER:GROUP #同时修改所有者和属组</span><br><span class="line">:GROUP #只修改属组，冒号也可用 . 替换</span><br><span class="line">--reference=RFILE #参考指定的的属性，来修改</span><br><span class="line">-R#递归，此选项慎用，非常危险！</span><br></pre></td></tr></table></figure><p>范例：</p><ul><li>修改所有者</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 home]# touch data.log</span><br><span class="line">[root@rocky8 home]# ll# data.log所有者为root</span><br><span class="line">total 0</span><br><span class="line">-rw-r--r--. 1 root    root      0 Jul 24 13:16 data.log</span><br><span class="line">drwx------. 2 gentoo  gentoo   62 Jul 24 12:39 gentoo</span><br><span class="line">drwx------. 2 test    test     99 Jul 24 11:38 test</span><br><span class="line">drwx------. 2 test1   test1    78 Jul 24 11:24 test1</span><br><span class="line">drwx------. 2 yuankun yuankun 114 Jul 23 08:24 yuankun</span><br><span class="line">[root@rocky8 home]# chown yuankun data.log # 修改所有者为yuankun</span><br><span class="line">[root@rocky8 home]# ll</span><br><span class="line">total 0</span><br><span class="line">-rw-r--r--. 1 yuankun root      0 Jul 24 13:16 data.log</span><br><span class="line">drwx------. 2 gentoo  gentoo   62 Jul 24 12:39 gentoo</span><br><span class="line">drwx------. 2 test    test     99 Jul 24 11:38 test</span><br><span class="line">drwx------. 2 test1   test1    78 Jul 24 11:24 test1</span><br><span class="line">drwx------. 2 yuankun yuankun 114 Jul 23 08:24 yuankun</span><br><span class="line">[root@rocky8 home]# </span><br></pre></td></tr></table></figure><ul><li>修改所属组</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown :bin data.log</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658672497952.png" alt="1658672497952"></p><ul><li>同时修改所有者和所属组</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@rocky8 home]# touch test.log</span><br><span class="line">[root@rocky8 home]# </span><br><span class="line">[root@rocky8 home]# </span><br><span class="line">[root@rocky8 home]# chown yuankun:bin test.log   # 冒号用.替换也可以</span><br><span class="line">[root@rocky8 home]# ll</span><br><span class="line">total 0</span><br><span class="line">-rw-r--r--. 1 yuankun bin       0 Jul 24 13:16 data.log</span><br><span class="line">drwx------. 2 gentoo  gentoo   62 Jul 24 12:39 gentoo</span><br><span class="line">drwx------. 2 test    test     99 Jul 24 11:38 test</span><br><span class="line">drwx------. 2 test1   test1    78 Jul 24 11:24 test1</span><br><span class="line">-rw-r--r--. 1 yuankun bin       0 Jul 24 13:22 test.log</span><br><span class="line">drwx------. 2 yuankun yuankun 114 Jul 23 08:24 yuankun</span><br><span class="line">[root@rocky8 home]# </span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658672628070.png" alt="1658672628070"></p><ul><li>修改为参考的所有者户所属组</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown --reference=root.log data.log</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658672912639.png" alt="1658672912639"></p><ul><li>递归修改</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R yuankun:yuankun ./data/mysql/</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658673109132.png" alt="1658673109132"></p><h4 id="7-6-1-2设置文件的属组信息chgrp"><a href="#7-6-1-2设置文件的属组信息chgrp" class="headerlink" title="7.6.1.2设置文件的属组信息chgrp"></a>7.6.1.2设置文件的属组信息chgrp</h4><p>chgrp 命令可以只修改文件的属组<br>格式:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chgrp [OPTION]... GROUP FILE...</span><br><span class="line">chgrp [OPTION]... --reference=RFILE FILE...</span><br></pre></td></tr></table></figure><p>-R 递归</p><p>范例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chgrp</span> yuankun data.log</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658673362886.png" alt="1658673362886"></p><h3 id="7-6-2文件权限"><a href="#7-6-2文件权限" class="headerlink" title="7.6.2文件权限"></a>7.6.2文件权限</h3><p>每个文件针对每类访问者都定义了三种权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r Readable 4</span><br><span class="line">w Writable 2</span><br><span class="line">x eXcutable 1</span><br></pre></td></tr></table></figure><p>对文件的权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">r 可使用文件查看类工具，比如：cat，可以获取其内容</span><br><span class="line">w 可修改其内容,文件的是否被删除和文件的权限无关</span><br><span class="line">x 可以把此文件提请内核启动为一个进程，即可以执行（运行）此文件（此文件的内容必须是可执行）</span><br><span class="line">文件权限常见组合</span><br><span class="line">--- 0</span><br><span class="line">r 4</span><br><span class="line">r-x 5</span><br><span class="line">rw 6</span><br><span class="line">rwx 7</span><br></pre></td></tr></table></figure><p>对目录的权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">r 可以使用ls查看此目录中文件名列表,但无法看到文件的属性meta信息,包括inode号,不能查看文件的</span><br><span class="line">内容</span><br><span class="line">w 可在此目录中创建文件，也可删除此目录中的文件，而和此被删除的文件的权限无关</span><br><span class="line">x 可以cd进入此目录，可以使用ls -l file或stat file 查看此目录中指定文件的元数据，当预先知</span><br><span class="line">道文件名称时,也可以查看文件的内容,属于目录的可访问的最小权限</span><br><span class="line">X 分配给目录或有部分x权限的文件的x权限，对无任意x权限的文件则不会分配x权限</span><br><span class="line">目录权限常见组合</span><br><span class="line">- 不能访问目录</span><br><span class="line">r-x 只读目录</span><br><span class="line">rwx 可读也可写目录</span><br></pre></td></tr></table></figure><p>面试题：Linux中的目录和文件的权限区别？分别说明读，写和执行权限的区别?</p><p>修改文件权限chmod</p><p>面试题：执行 cp &#x2F;etc&#x2F;issue &#x2F;data&#x2F;dir&#x2F; 所需要的最小权限？</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux从入门到放弃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux基础和常用命令</title>
      <link href="/2022/07/18/linux%E5%9F%BA%E7%A1%80%E5%92%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/07/18/linux%E5%9F%BA%E7%A1%80%E5%92%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="1-冯诺依曼体系"><a href="#1-冯诺依曼体系" class="headerlink" title="1.冯诺依曼体系"></a>1.冯诺依曼体系</h1><p>1946年美籍匈牙利数学家冯·诺依曼于提出存储程序原理，把程序本身当作数据来对待，程序和该程序处<br>理的数据用同样的方式储存。 冯·诺依曼体系的要点是：</p><ul><li><p>数字计算机的数制采用二进制，bit 位, byte 字节 1 byte &#x3D;8 bit</p></li><li><p>计算机应该按照程序顺序执行</p></li><li><p>计算机硬件由运算器、控制器、存储器、输入设备和输出设备五大部分组成</p></li></ul><p><strong>计算机的硬件五个组件</strong></p><ul><li><p>控制器: 指挥系统</p></li><li><p>运算器: 数学和逻辑运算</p></li><li><p>存储器: 存储信息</p></li><li><p>输入设备: 接收外部信息</p></li><li><p>输出设备: 输出计算机内部信息到外部设备</p></li></ul><h1 id="2-服务器按外观类型分类"><a href="#2-服务器按外观类型分类" class="headerlink" title="2.服务器按外观类型分类"></a>2.服务器按外观类型分类</h1><p><strong>PC服务器常见的三种外观</strong>  </p><ul><li><p>塔式服务器</p></li><li><p>刀片式服务器</p></li><li><p>机架式服务器</p></li></ul><h1 id="3-操作系统和Linux安装"><a href="#3-操作系统和Linux安装" class="headerlink" title="3.操作系统和Linux安装"></a>3.操作系统和Linux安装</h1><p>**操作系统的作用  **</p><p><img src="/../image.assets/1658235191431.png" alt="1658235191431"></p><p>**主要作用 **</p><ul><li><p>硬件驱动</p></li><li><p>进程管理</p></li><li><p>内存管理</p></li><li><p>网络管理</p></li><li><p>安全管理</p></li><li><p>文件管理</p></li></ul><p>**unix哲学思想 ** </p><ul><li>一切都是一个文件(包括硬件)</li><li>小型，单一用途的程序  </li><li>链接程序，共同完成复杂的任务(shell脚本)</li><li>避免令人困惑的用户界面  </li><li>配置数据存储在文本中</li></ul><h1 id="4-常见面试题"><a href="#4-常见面试题" class="headerlink" title="4.常见面试题"></a>4.常见面试题</h1><p><img src="/../image.assets/1658241769096.png" alt="1658241769096"></p><h1 id="5-基础使用命令"><a href="#5-基础使用命令" class="headerlink" title="5 .基础使用命令"></a>5 .基础使用命令</h1><h2 id="5-1-查看网络ip地址"><a href="#5-1-查看网络ip地址" class="headerlink" title="5.1 查看网络ip地址"></a>5.1 查看网络ip地址</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip a</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658410435937.png" alt="Rocky8.6"></p><p><img src="/../image.assets/1658410871193.png" alt="ubuntu2004"></p><h2 id="5-2-重启"><a href="#5-2-重启" class="headerlink" title="5.2 重启"></a>5.2 重启</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="5-3-ubuntu-roo账户进行远程登录修改方法"><a href="#5-3-ubuntu-roo账户进行远程登录修改方法" class="headerlink" title="5.3 ubuntu roo账户进行远程登录修改方法"></a>5.3 ubuntu roo账户进行远程登录修改方法</h2><ul><li>切换到root账户</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure><p> <img src="/../image.assets/1658411472195.png" alt="1658411472195"></p><ul><li>设置密码</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd 用户名  </span><br></pre></td></tr></table></figure><p> <img src="/../image.assets/1658469211139.png" alt="1658469211139"></p><ul><li>修改&#x2F;etc&#x2F;ssh&#x2F;sshd_config  ,PermitRootlogin yes</li></ul><p> <img src="/../image.assets/1658493609190.png" alt="1658493609190"></p><ul><li>重启sshd</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><h2 id="5-4-查看当前所在终端"><a href="#5-4-查看当前所在终端" class="headerlink" title="5.4 查看当前所在终端"></a>5.4 查看当前所在终端</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tty</span><br></pre></td></tr></table></figure><p> <img src="/../image.assets/1658494268286.png" alt="1658494268286"></p><h2 id="5-5-查看当前账户"><a href="#5-5-查看当前账户" class="headerlink" title="5.5 查看当前账户"></a>5.5 查看当前账户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">whoami</span><br><span class="line"></span><br><span class="line">who am i  </span><br><span class="line"></span><br><span class="line">who</span><br></pre></td></tr></table></figure><p> <img src="/../image.assets/1658494603337.png" alt="1658494603337"></p><p> <img src="/../image.assets/1658494650023.png" alt="1658494650023"></p><p> <img src="/../image.assets/1658495293952.png#pic_left" alt="1658495293952"></p><h2 id="5-6-查看当前时间"><a href="#5-6-查看当前时间" class="headerlink" title="5.6 查看当前时间"></a>5.6 查看当前时间</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658494753358.png" alt="1658494753358"></p><h2 id="5-7-修改时区-修改为北京时间"><a href="#5-7-修改时区-修改为北京时间" class="headerlink" title="5.7 修改时区 ,修改为北京时间"></a>5.7 修改时区 ,修改为北京时间</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-timezone Asia/Shanghai</span><br><span class="line">date# 查看当前时间</span><br></pre></td></tr></table></figure><p> <img src="/../image.assets/1658495063470.png#pic_left" alt="1658495063470"></p><h2 id="5-8-查看当前系统使用的shell"><a href="#5-8-查看当前系统使用的shell" class="headerlink" title="5.8 查看当前系统使用的shell"></a>5.8 查看当前系统使用的shell</h2><img src= '../image.assets/1658495913197.png' style='float:left'><h2 id="5-9-查看当前主机名"><a href="#5-9-查看当前主机名" class="headerlink" title="5.9 查看当前主机名"></a>5.9 查看当前主机名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure><p>   <img src="/../image.assets/1658496336793.png" alt="1658496336793"></p><h2 id="5-10修改当前主机名称，永久修改"><a href="#5-10修改当前主机名称，永久修改" class="headerlink" title="5.10修改当前主机名称，永久修改"></a>5.10修改当前主机名称，永久修改</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname 名称</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 临时修改，重启后变为修改前的主机名称</span><br><span class="line">hostname 主机名</span><br></pre></td></tr></table></figure><h2 id="5-11-查看所有内部命令"><a href="#5-11-查看所有内部命令" class="headerlink" title="5.11 查看所有内部命令"></a>5.11 查看所有内部命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">help</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658499412357.png" alt="1658499412357"></p><h2 id="5-12-查看命令为内部还是外部命令"><a href="#5-12-查看命令为内部还是外部命令" class="headerlink" title="5.12 查看命令为内部还是外部命令"></a>5.12 查看命令为内部还是外部命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type 命令名称</span><br><span class="line"># 示例</span><br><span class="line">type cd</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658499521622.png" alt="1658499521622"></p><h2 id="5-13-查看系统中所有别名"><a href="#5-13-查看系统中所有别名" class="headerlink" title="5.13 查看系统中所有别名"></a>5.13 查看系统中所有别名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658499933136.png" alt="1658499933136"></p><h2 id="5-14-设置别名"><a href="#5-14-设置别名" class="headerlink" title="5.14 设置别名"></a>5.14 设置别名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alias 别名名称 = &#x27;被设置别名的行为&#x27;</span><br><span class="line"># 示例</span><br><span class="line">alias cdnt = &#x27;cd /root&#x27;</span><br></pre></td></tr></table></figure><h2 id="5-15-删除别名"><a href="#5-15-删除别名" class="headerlink" title="5.15 删除别名"></a>5.15 删除别名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unalisa 别名名称</span><br></pre></td></tr></table></figure><ul><li><p>命令种类</p><ul><li>alias(优先级最高)</li><li>内部命令(优先级低于alias)</li><li>外部命令(优先级最低)</li></ul></li><li><p>whatis</p></li></ul><p>whatis使用数据库来显示命令的简短描述  </p><p>此工具在系统刚安装后不可立即使用，需要制作数据库后才可使用  </p><p>执行下面的命令生成数据库  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># centos7版本以后</span><br><span class="line">mandb</span><br><span class="line"># centos6版本之前</span><br><span class="line">makewhatis</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658501366408.png" alt="1658501366408"></p><h2 id="5-16-内部命令查看帮助"><a href="#5-16-内部命令查看帮助" class="headerlink" title="5.16 内部命令查看帮助"></a>5.16 内部命令查看帮助</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 使用type命令查看是否为内部命令，不是内部命令不能使用该命令</span><br><span class="line">help history</span><br></pre></td></tr></table></figure><p>范例  </p><p><img src="/../image.assets/1658501682712.png" alt="1658501682712"></p><h2 id="5-17-外部命令使用帮助"><a href="#5-17-外部命令使用帮助" class="headerlink" title="5.17 外部命令使用帮助"></a>5.17 外部命令使用帮助</h2><p>COMMAND –help 或者 COMMAND -h  </p><p>范例  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date --help</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658502390672.png" alt="1658502390672"></p><h2 id="5-18-man"><a href="#5-18-man" class="headerlink" title="5.18 man"></a>5.18 man</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">man date</span><br><span class="line">man 1 date</span><br></pre></td></tr></table></figure><h1 id="6-查看硬件信息"><a href="#6-查看硬件信息" class="headerlink" title="6.查看硬件信息"></a>6.查看硬件信息</h1><h3 id="6-1查看CPU信息"><a href="#6-1查看CPU信息" class="headerlink" title="6.1查看CPU信息"></a>6.1查看CPU信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lscpu</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658503779919.png" alt="1658503779919"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 该命令也可以</span><br><span class="line">cat /proc/cpuinfo</span><br></pre></td></tr></table></figure><h3 id="6-2-查看内存信息"><a href="#6-2-查看内存信息" class="headerlink" title="6.2 查看内存信息"></a>6.2 查看内存信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">free -h</span><br><span class="line"># 或者</span><br><span class="line">cat /proc/meminfo</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658504083814.png" alt="1658504083814"></p><h3 id="6-3-查看硬盘信息和分区情况"><a href="#6-3-查看硬盘信息和分区情况" class="headerlink" title="6.3 查看硬盘信息和分区情况"></a>6.3 查看硬盘信息和分区情况</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658504188384.png" alt="1658504188384"></p><h1 id="7-查看系统信息"><a href="#7-查看系统信息" class="headerlink" title="7.查看系统信息"></a>7.查看系统信息</h1><h3 id="7-1-查看系统架构"><a href="#7-1-查看系统架构" class="headerlink" title="7.1 查看系统架构"></a>7.1 查看系统架构</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658504368189.png" alt="1658504368189"></p><h3 id="7-2-查看内核版本"><a href="#7-2-查看内核版本" class="headerlink" title="7.2 查看内核版本"></a>7.2 查看内核版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658504429024.png" alt="1658504429024"></p><h3 id="7-3-查看操作系统发行版本"><a href="#7-3-查看操作系统发行版本" class="headerlink" title="7.3 查看操作系统发行版本"></a>7.3 查看操作系统发行版本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/os-releases</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658543618611.png" alt="1658543618611"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/issue</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658543863373.png" alt="1658543863373"></p><h3 id="7-4-修改登录后显示的内容"><a href="#7-4-修改登录后显示的内容" class="headerlink" title="7.4 修改登录后显示的内容"></a>7.4 修改登录后显示的内容</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 修改/etc/motd文件内容</span><br><span class="line">vi /etc/motd</span><br></pre></td></tr></table></figure><h3 id="7-5-查看硬件时间"><a href="#7-5-查看硬件时间" class="headerlink" title="7.5 查看硬件时间"></a>7.5 查看硬件时间</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clock</span><br></pre></td></tr></table></figure><p><img src="/../image.assets/1658544469113.png" alt="1658544469113"></p><h3 id="7-6重启和关机"><a href="#7-6重启和关机" class="headerlink" title="7.6重启和关机"></a>7.6重启和关机</h3><h6 id="7-6-1重启"><a href="#7-6-1重启" class="headerlink" title="7.6.1重启"></a>7.6.1重启</h6><ul><li><p>halt</p></li><li><p>reboot</p></li></ul><h6 id="7-6-2-关机或重启"><a href="#7-6-2-关机或重启" class="headerlink" title="7.6.2 关机或重启"></a>7.6.2 关机或重启</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">shutdown  </span><br><span class="line">- r :重启</span><br><span class="line">- h :关机</span><br><span class="line">指定时间关机或重启</span><br><span class="line">shutdown -r 15:00  # 15:00重启</span><br><span class="line">shutdown -h 15:00  # 15:00关机</span><br><span class="line"></span><br><span class="line">shutdown -c # 取消</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>看完这篇还敢说你不会git生成ssh密钥</title>
      <link href="/2022/07/13/git-ssh/"/>
      <url>/2022/07/13/git-ssh/</url>
      
        <content type="html"><![CDATA[<!--more--><ul><li>注：以下命令全部在git bash完成</li></ul><h1 id="1-查看是否配置邮箱和用户名"><a href="#1-查看是否配置邮箱和用户名" class="headerlink" title="1.查看是否配置邮箱和用户名"></a>1.查看是否配置邮箱和用户名</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global  --list</span><br></pre></td></tr></table></figure><p>如图所示，则代表已经配置完成<br><img src="/../image.assets/1657717726161.png" alt="1657717726161"></p><h1 id="2-配置用户名和邮箱"><a href="#2-配置用户名和邮箱" class="headerlink" title="2.配置用户名和邮箱"></a>2.配置用户名和邮箱</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global  user.name &quot;这里换上你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;这里换上你的邮箱&quot;</span><br></pre></td></tr></table></figure><h1 id="3-查看是否已经生成密钥"><a href="#3-查看是否已经生成密钥" class="headerlink" title="3.查看是否已经生成密钥"></a>3.查看是否已经生成密钥</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ls -a</span><br></pre></td></tr></table></figure><p>如图所示，代表已经生成密钥  </p><p><img src="/../image.assets/1657718034760.png" alt="1657718034760"></p><ul><li>id_rsa文件是私钥，要保存好，放在本地，私钥可以生产公钥，反之不行。</li><li>id_rsa.pub文件是公钥，可以用于发送到其他服务器，或者git上</li></ul><h1 id="4-生成密钥"><a href="#4-生成密钥" class="headerlink" title="4.生成密钥"></a>4.生成密钥</h1><ul><li>执行ssh-keygen -t rsa -c</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -c &quot;这是你的邮箱&quot;  </span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020061522162896.png">  </p><ul><li>点击enter,输入密码</li></ul><p><img src="https://img-blog.csdnimg.cn/2020061522182269.png">  </p><ul><li>点击enter，确认密码</li></ul><p><img src="https://img-blog.csdnimg.cn/20200615221909168.png">  </p><ul><li>如图，创建成功</li></ul><p><img src="/../image.assets/1657719024137.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Fluid主题如何添加按钮和标签</title>
      <link href="/2022/07/08/Fluid_hexo_server/"/>
      <url>/2022/07/08/Fluid_hexo_server/</url>
      
        <content type="html"><![CDATA[<!--more--><h1 id="1-hexo添加Button方法"><a href="#1-hexo添加Button方法" class="headerlink" title="1.hexo添加Button方法"></a>1.hexo添加Button方法</h1><p>你可以在 markdown 中加入如下的代码来使用 Button：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btn url, text, title %&#125; </span><br></pre></td></tr></table></figure><p>或者使用 HTML 形式：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">href</span>=<span class="string">&quot;url&quot;</span> <span class="attr">title</span>=<span class="string">&quot;title&quot;</span>&gt;</span>text<span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>url：跳转链接<br>text：显示的文字<br>title：鼠标悬停时显示的文字（可选） </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p class=&quot;note note-primary&quot;&gt;长河落日袁先生&lt;/p&gt;  </span><br></pre></td></tr></table></figure><p class="note note-primary">长河落日袁先生</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p class=&quot;note note-success&quot;&gt;success&lt;/p&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p class="note note-success">success</p> ]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
